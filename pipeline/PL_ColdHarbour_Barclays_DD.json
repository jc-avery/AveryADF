{
	"name": "PL_ColdHarbour_Barclays_DD",
	"properties": {
		"description": "Exports the DD report for the 3 homes that bank with Barclays. Saves to container which is monitored by a logic app, which will save to share point.",
		"activities": [
			{
				"name": "Lookup Home details",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"dataset": {
						"referenceName": "DS_Polestar_storage_csv",
						"type": "DatasetReference",
						"parameters": {
							"Container": "user",
							"FileName": "DDReportDetails.csv"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "For Each Home",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup Home details",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup Home details').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Export DD Reports",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "WITH DirectDebitData AS (\n\tSELECT \n\t\tCONCAT(RTRIM(Contact_Hd_Res.Forenames), ' ', RTRIM(Contact_Hd_Res.Surname)) AS [Debtor Name],\n\t\tREPLACE(CASE\n\t\t\tWHEN DirectD_Dt.BkSortCode != '' THEN\n\t\t\t\tDirectD_Dt.BkSortCode\n\t\t\tELSE\n\t\t\t\tisnull(Contact_Hd_FS.BkSortCode, space(8))\n\t\tEND, '-', '') AS [Debtor Sort Code],\n\t\tCASE\n\t\t\tWHEN DirectD_Dt.BankAcc != '' THEN\n\t\t\t\tRTRIM(DirectD_Dt.BankAcc)\n\t\t\tELSE\n\t\t\t\tRTRIM(FundSrc_Hd.BankAcc)\n\t\tEND AS [Debtor Account Number],\n\t\tRTRIM(Resident.Res_Code) AS [Collection Details],\n\t\tDirectD_Dt.Amount,\n\t\tCAST(DirectD_Dt.Amount AS NUMERIC(18, 2)) AS [Debtor Amount],\n\t\tCASE \n\t\t\tWHEN DirectD_Dt.DDTranType = '17' THEN '17 - Standard Ongoing Collection'\n\t\t\tWHEN DirectD_Dt.DDTranType = '01' THEN '01 - First Collection'\n\t\t\tWHEN DirectD_Dt.DDTranType = '18' THEN '18 - '\n\t\t\tWHEN DirectD_Dt.DDTranType = '19' THEN '19 - '\n\t\t\tELSE DirectD_Dt.DDTranType\n\t\tEND AS [Transaction Type],\n\n\t\tDirectD_Dt.DDHd_Ref,\n\t\tDirectD_Dt.DDDT_REF,\n\t\tDirectD_Dt.DUE_DATE\n\tFROM \n\t\tDirectD_Dt (NOLOCK)\n\t\tJOIN DirectD_Hd (NOLOCK)\n\t\t\tON DirectD_Hd.DDHd_Ref = DirectD_Dt.DDHd_Ref\n\t\t\t   AND DirectD_Hd.BatchNo\n\t\t\t   BETWEEN 0 AND 9999999999\n\t\tJOIN FundSrc_Hd (NOLOCK)\n\t\t\tLEFT JOIN Contact_Dt AS Contact_Dt_FS (NOLOCK)\n\t\t\t\tJOIN Contact_Hd AS Contact_Hd_FS (NOLOCK)\n\t\t\t\t\tON Contact_Hd_FS.Contact_Ref = Contact_Dt_FS.Contact_Ref\n\t\t\t\tON Contact_Dt_FS.Cnta_Det_Ref = FundSrc_Hd.Bank_Det_Ref\n\t\t\tJOIN Resident (NOLOCK)\n\t\t\t\tJOIN Contact_Dt AS Contact_Dt_Res (NOLOCK)\n\t\t\t\t\tJOIN Contact_Hd AS Contact_Hd_Res (NOLOCK)\n\t\t\t\t\t\tON Contact_Hd_Res.Contact_Ref = Contact_Dt_Res.Contact_Ref\n\t\t\t\t\tON Contact_Dt_Res.Cnta_Det_Ref = Resident.Cnta_Det_Ref\n\t\t\t\tJOIN Room_Dt (NOLOCK)\n\t\t\t\t\tJOIN Locations (NOLOCK)\n\t\t\t\t\t\tJOIN Site (NOLOCK)\n\t\t\t\t\t\t\tON Site.Site_Ref = Locations.Site_Ref\n\t\t\t\t\t\tON Locations.Loc_Ref = Room_Dt.Loc_Ref\n\t\t\t\t\tON Room_Dt.Room_Ref = Resident.Room_Ref\n\t\t\t\tON Resident.Res_Ref = FundSrc_Hd.Res_Ref\n\t\t\tON FundSrc_Hd.FS_Ref = DirectD_Dt.FS_Ref\n\tWHERE \n\t\tDirectD_Dt.Due_Date\n\t\tBETWEEN '17530101' AND '29991231'\n\t\tAND DirectD_Dt.Allocated != 'X'\n\t\tand DirectD_Dt.Submitted IS NULL\n\t\tand DirectD_Dt.DDTranType IN ( '01', '17', '18', '19' )\n\t\tAND Locations.Site_Ref = @{item().Site_ref}\n)\nSELECT \n\tDirectDebitData.[Debtor Name],\n\tDirectDebitData.[Debtor Sort Code],\n\tDirectDebitData.[Debtor Account Number],\n\tDirectDebitData.[Collection Details],\n\tSUM(DirectDebitData.[Debtor Amount]) AS [Debtor Amount],\n\tDirectDebitData.[Transaction Type]\n\n\t--,DirectDebitData.DUE_DATE\nFROM\n\tDirectDebitData\n--WHERE\n--\tDirectDebitData.[Collection Details] = 'MM0182'\nGROUP BY\n\tDirectDebitData.DDHd_Ref,\n\tDirectDebitData.DUE_DATE,\n\tDirectDebitData.[Debtor Name],\n\tDirectDebitData.[Debtor Sort Code],\n\tDirectDebitData.[Debtor Account Number],\n\tDirectDebitData.[Collection Details],\n\tDirectDebitData.[Transaction Type]",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_OnPrem_CH_IP",
									"type": "DatasetReference",
									"parameters": {
										"Schema": "n/a",
										"Table": "n/a"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_Polestar_storage_csv_NoQuotes",
									"type": "DatasetReference",
									"parameters": {
										"Container": "user",
										"FileName": {
											"value": "@concat(item().HomeName, ' - DD - ',formatDateTime(utcNow(), 'MMM yyyy'), '.txt')",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"folder": {
			"name": "Cold Harbour"
		},
		"annotations": []
	}
}