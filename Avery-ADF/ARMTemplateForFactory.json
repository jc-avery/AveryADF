{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Avery-ADF"
		},
		"AH1_Avery_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AH1_Avery'"
		},
		"AH2_Agency_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AH2_Agency'"
		},
		"AH2_Avery_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AH2_Avery'"
		},
		"AH2_Capex_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AH2_Capex'"
		},
		"AH2_Polestar_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AH2_Polestar'"
		},
		"AH2_TRANSFORM_DB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AH2_TRANSFORM_DB'"
		},
		"AH2_YardiStage_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AH2_YardiStage'"
		},
		"AveryArtisan_Artisan_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AveryArtisan_Artisan'"
		},
		"AveryblobFileShare_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AveryblobFileShare'"
		},
		"AveryblobStorageAccount_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AveryblobStorageAccount'"
		},
		"CareBlox_FTP_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'CareBlox_FTP'"
		},
		"Hydra_FTP_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Hydra_FTP'"
		},
		"OnPrem_ColdHarbour_IP_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'OnPrem_ColdHarbour_IP'"
		},
		"OnPrem_Coldharbour_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'OnPrem_Coldharbour'"
		},
		"OnPrem_Exchequer_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'OnPrem_Exchequer'"
		},
		"PolestarStorageAcc_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'PolestarStorageAcc'"
		},
		"PolestarStorageFileshare_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'PolestarStorageFileshare'"
		},
		"Radar_FTP_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Radar_FTP'"
		},
		"Radar_SQL_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Radar_SQL'"
		},
		"Softworks_API_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Softworks_API'"
		},
		"AH2_Agency_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "averyhealthcare2.database.windows.net"
		},
		"AH2_Agency_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "Agency"
		},
		"AH2_Agency_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "ADF_User"
		},
		"AH2_Capex_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "averyhealthcare2.database.windows.net"
		},
		"AH2_Capex_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "Capex"
		},
		"AH2_Capex_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "ADF_User"
		},
		"AH2_Polestar_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "averyhealthcare2.database.windows.net"
		},
		"AH2_Polestar_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "Polestar"
		},
		"AH2_Polestar_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "ADF_User"
		},
		"AH2_YardiStage_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "averyhealthcare2.database.windows.net"
		},
		"AH2_YardiStage_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "YardiStage"
		},
		"AH2_YardiStage_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "ADF_User"
		},
		"AveryArtisan_Artisan_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "averyartisan.database.windows.net"
		},
		"AveryArtisan_Artisan_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "Artisan"
		},
		"AveryArtisan_Artisan_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "ADF_User"
		},
		"Avery_ADF_KeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://Avery-ADF-KeyVault.vault.azure.net/"
		},
		"Broadshield Live API_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://myrus.careshield.com/api/organisation/avery"
		},
		"CQC API_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://api.service.cqc.org.uk"
		},
		"CareBlox_FTP_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "ftps.accessacloud.com"
		},
		"CareBlox_FTP_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "AveryHealthcare_FTPS"
		},
		"Hydra_FTP_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "45.8.224.76"
		},
		"Hydra_FTP_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "radar@averyintranet.co.uk"
		},
		"MCM API_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://care.personcentredsoftware.com/mcm/api/v1/"
		},
		"MCM_Data_Extract_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://mcm-data-extract.azurewebsites.net/api/MCM_Data_Extract"
		},
		"Myrus_Careshield_UAT_API_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://myrus-uatnew.careshield.com/api/organisation/avery"
		},
		"OnPrem_ColdHarbour_IP_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "10.0.5.11\\COLDHNEW01"
		},
		"OnPrem_ColdHarbour_IP_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "LIVE_AVERY_FEES"
		},
		"OnPrem_ColdHarbour_IP_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "ADF"
		},
		"OnPrem_Coldharbour_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "10.0.5.11\\COLDHNEW01"
		},
		"OnPrem_Coldharbour_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "AHC_GRG_FBWIN"
		},
		"OnPrem_Coldharbour_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "ADF"
		},
		"OnPrem_Exchequer_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "192.168.1.8"
		},
		"OnPrem_Exchequer_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "Exchequer"
		},
		"OnPrem_Exchequer_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "JonCrockett"
		},
		"Radar_FTP_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "integrationserver.radarhealthcare.net"
		},
		"Radar_FTP_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "avery_integration"
		},
		"Radar_SQL_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "radar-integration.radarhealthcare.net"
		},
		"Radar_SQL_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "radar-avery"
		},
		"Radar_SQL_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "avery-admin"
		},
		"Softworks_API_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://swapi.softworks.com/api/v1//Importer/WebwiseDataExtract"
		},
		"Softworks_API_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "AHC23"
		},
		"SCH_EveryDay_1am_properties_PL_Radar_SQLTables_parameters_DBItems": {
			"type": "array",
			"defaultValue": [
				{
					"source": {
						"schema": "AccessControl",
						"table": "ObjectRuleSet"
					},
					"destination": {
						"schema": "Radar_AccessControl",
						"table": "ObjectRuleSet"
					},
					"copySink": {
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": true
					}
				},
				{
					"source": {
						"schema": "AccessControl",
						"table": "RuleSet"
					},
					"destination": {
						"schema": "Radar_AccessControl",
						"table": "RuleSet"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "AccessControl",
						"table": "RuleSetRule"
					},
					"destination": {
						"schema": "Radar_AccessControl",
						"table": "RuleSetRule"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Actions",
						"table": "Action"
					},
					"destination": {
						"schema": "Radar_Actions",
						"table": "Action"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Actions",
						"table": "ActionObjectLink"
					},
					"destination": {
						"schema": "Radar_Actions",
						"table": "ActionObjectLink"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Actions",
						"table": "ActionPlanItem"
					},
					"destination": {
						"schema": "Radar_Actions",
						"table": "ActionPlanItem"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Actions",
						"table": "ActionPlanTag"
					},
					"destination": {
						"schema": "Radar_Actions",
						"table": "ActionPlanTag"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Actions",
						"table": "ActionPlanTags"
					},
					"destination": {
						"schema": "Radar_Actions",
						"table": "ActionPlanTags"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Actions",
						"table": "Control"
					},
					"destination": {
						"schema": "Radar_Actions",
						"table": "Control"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Actions",
						"table": "ScheduledTask"
					},
					"destination": {
						"schema": "Radar_Actions",
						"table": "ScheduledTask"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Actions",
						"table": "ScheduledTaskCategory"
					},
					"destination": {
						"schema": "Radar_Actions",
						"table": "ScheduledTaskCategory"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Actions",
						"table": "ScheduledTaskTag"
					},
					"destination": {
						"schema": "Radar_Actions",
						"table": "ScheduledTaskTag"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Actions",
						"table": "ScheduledTaskTags"
					},
					"destination": {
						"schema": "Radar_Actions",
						"table": "ScheduledTaskTags"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Actions",
						"table": "Update"
					},
					"destination": {
						"schema": "Radar_Actions",
						"table": "Update"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Analytics",
						"table": "FormTag"
					},
					"destination": {
						"schema": "Radar_Analytics",
						"table": "FormTag"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audit",
						"table": "Comment"
					},
					"destination": {
						"schema": "Radar_Audit",
						"table": "Comment"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audit",
						"table": "DeviceRegistration"
					},
					"destination": {
						"schema": "Radar_Audit",
						"table": "DeviceRegistration"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audit",
						"table": "EvidenceActionPlanItem"
					},
					"destination": {
						"schema": "Radar_Audit",
						"table": "EvidenceActionPlanItem"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audit",
						"table": "EvidenceAttachment"
					},
					"destination": {
						"schema": "Radar_Audit",
						"table": "EvidenceAttachment"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audit",
						"table": "EvidenceComment"
					},
					"destination": {
						"schema": "Radar_Audit",
						"table": "EvidenceComment"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audit",
						"table": "Outcome"
					},
					"destination": {
						"schema": "Radar_Audit",
						"table": "Outcome"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audit",
						"table": "OutcomeRequirement"
					},
					"destination": {
						"schema": "Radar_Audit",
						"table": "OutcomeRequirement"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audit",
						"table": "OutcomeRequirementTemplate"
					},
					"destination": {
						"schema": "Radar_Audit",
						"table": "OutcomeRequirementTemplate"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audit",
						"table": "OutcomeTemplate"
					},
					"destination": {
						"schema": "Radar_Audit",
						"table": "OutcomeTemplate"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audit",
						"table": "RequirementEvidence"
					},
					"destination": {
						"schema": "Radar_Audit",
						"table": "RequirementEvidence"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audit",
						"table": "RequirementEvidenceTemplate"
					},
					"destination": {
						"schema": "Radar_Audit",
						"table": "RequirementEvidenceTemplate"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audit",
						"table": "ScheduledAudit"
					},
					"destination": {
						"schema": "Radar_Audit",
						"table": "ScheduledAudit"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audit",
						"table": "Template"
					},
					"destination": {
						"schema": "Radar_Audit",
						"table": "Template"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audit",
						"table": "Type"
					},
					"destination": {
						"schema": "Radar_Audit",
						"table": "Type"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audit",
						"table": "TypeThreshold"
					},
					"destination": {
						"schema": "Radar_Audit",
						"table": "TypeThreshold"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audits",
						"table": "Instance"
					},
					"destination": {
						"schema": "Radar_Audits",
						"table": "Instance"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audits",
						"table": "InstanceSection"
					},
					"destination": {
						"schema": "Radar_Audits",
						"table": "InstanceSection"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audits",
						"table": "InstanceSectionResponse"
					},
					"destination": {
						"schema": "Radar_Audits",
						"table": "InstanceSectionResponse"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audits",
						"table": "Schedule"
					},
					"destination": {
						"schema": "Radar_Audits",
						"table": "Schedule"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audits",
						"table": "ScheduleLocation"
					},
					"destination": {
						"schema": "Radar_Audits",
						"table": "ScheduleLocation"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audits",
						"table": "ScheduleWorkflow"
					},
					"destination": {
						"schema": "Radar_Audits",
						"table": "ScheduleWorkflow"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audits",
						"table": "Template"
					},
					"destination": {
						"schema": "Radar_Audits",
						"table": "Template"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audits",
						"table": "Type"
					},
					"destination": {
						"schema": "Radar_Audits",
						"table": "Type"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audits",
						"table": "TypeThreshold"
					},
					"destination": {
						"schema": "Radar_Audits",
						"table": "TypeThreshold"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Compliance",
						"table": "RecordRequirement"
					},
					"destination": {
						"schema": "Radar_Compliance",
						"table": "RecordRequirement"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Compliance",
						"table": "RecordVersion"
					},
					"destination": {
						"schema": "Radar_Compliance",
						"table": "RecordVersion"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Compliance",
						"table": "RequirementType"
					},
					"destination": {
						"schema": "Radar_Compliance",
						"table": "RequirementType"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Compliance",
						"table": "RequirementTypeRole"
					},
					"destination": {
						"schema": "Radar_Compliance",
						"table": "RequirementTypeRole"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Compliance",
						"table": "RequirementTypeSchedule"
					},
					"destination": {
						"schema": "Radar_Compliance",
						"table": "RequirementTypeSchedule"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Compliance",
						"table": "RequirementTypeUser"
					},
					"destination": {
						"schema": "Radar_Compliance",
						"table": "RequirementTypeUser"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "DiscardLogging",
						"table": "Report"
					},
					"destination": {
						"schema": "Radar_DiscardLogging",
						"table": "Report"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "DocumentManagement",
						"table": "Document"
					},
					"destination": {
						"schema": "Radar_DocumentManagement",
						"table": "Document"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "DocumentManagement",
						"table": "DocumentTags"
					},
					"destination": {
						"schema": "Radar_DocumentManagement",
						"table": "DocumentTags"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "DocumentManagement",
						"table": "DocumentVersion"
					},
					"destination": {
						"schema": "Radar_DocumentManagement",
						"table": "DocumentVersion"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "DocumentManagement",
						"table": "DocumentVersionDownload"
					},
					"destination": {
						"schema": "Radar_DocumentManagement",
						"table": "DocumentVersionDownload"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "DocumentManagement",
						"table": "DocumentVersionHistory"
					},
					"destination": {
						"schema": "Radar_DocumentManagement",
						"table": "DocumentVersionHistory"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "DocumentManagement",
						"table": "Folder"
					},
					"destination": {
						"schema": "Radar_DocumentManagement",
						"table": "Folder"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "DocumentManagement",
						"table": "Tag"
					},
					"destination": {
						"schema": "Radar_DocumentManagement",
						"table": "Tag"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "QueryBuilder",
						"table": "SavedQuery"
					},
					"destination": {
						"schema": "Radar_QueryBuilder",
						"table": "SavedQuery"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "QueryBuilder",
						"table": "SavedQueryFolder"
					},
					"destination": {
						"schema": "Radar_QueryBuilder",
						"table": "SavedQueryFolder"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "ActivityLog"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "ActivityLog"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "Attachment"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "Attachment"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "AttachmentDownload"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "AttachmentDownload"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "Audit"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "Audit"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "CustomDataItem"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "CustomDataItem"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "CustomDataItemLocation"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "CustomDataItemLocation"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "CustomDataType"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "CustomDataType"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "CustomEntityInstance"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "CustomEntityInstance"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "CustomEntityInstanceLocation"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "CustomEntityInstanceLocation"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "CustomEntityInstanceValues"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "CustomEntityInstanceValues"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "CustomEntityType"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "CustomEntityType"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "CustomEntityTypeField"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "CustomEntityTypeField"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "Department"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "Department"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "DomainObjectAccessControlRule"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "DomainObjectAccessControlRule"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "EventAccessGroupRole"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "EventAccessGroupRole"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "EventAccessGroups"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "EventAccessGroups"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "EventCategory"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "EventCategory"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "EventTypeCategoryLink"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "EventTypeCategoryLink"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "IntegrationLink"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "IntegrationLink"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "ItemReference"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "ItemReference"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "JobLog"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "JobLog"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "LastUpdated"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "LastUpdated"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "Location"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "Location"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "LocationLocationType"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "LocationLocationType"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "LocationType"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "LocationType"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "LocationUser"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "LocationUser"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "Lookup"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "Lookup"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "Module"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "Module"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "Notice"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "Notice"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "NoticeAttachment"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "NoticeAttachment"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "NotificationHistory"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "NotificationHistory"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "NotificationQueue"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "NotificationQueue"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "Organisation"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "Organisation"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "PendingItem"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "PendingItem"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "Permission"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "Permission"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "PsimsSubmission"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "PsimsSubmission"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "Region"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "Region"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "Role"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "Role"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "RoleDashboardPermission"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "RoleDashboardPermission"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "RolePermission"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "RolePermission"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "ServiceUser"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "ServiceUser"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "ServiceUserLocation"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "ServiceUserLocation"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "Tag"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "Tag"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "TagLink"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "TagLink"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "User"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "User"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "UserComment"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "UserComment"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "UserDepartment"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "UserDepartment"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "UserNotice"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "UserNotice"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "UserOutOfOffice"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "UserOutOfOffice"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "UserPreference"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "UserPreference"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "UserRole"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "UserRole"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RiskManagement",
						"table": "ImpactCategory"
					},
					"destination": {
						"schema": "Radar_RiskManagement",
						"table": "ImpactCategory"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RiskManagement",
						"table": "ImpactDescriptor"
					},
					"destination": {
						"schema": "Radar_RiskManagement",
						"table": "ImpactDescriptor"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RiskManagement",
						"table": "Incident"
					},
					"destination": {
						"schema": "Radar_RiskManagement",
						"table": "Incident"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RiskManagement",
						"table": "IncidentRequiredFormTime"
					},
					"destination": {
						"schema": "Radar_RiskManagement",
						"table": "IncidentRequiredFormTime"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RiskManagement",
						"table": "IncidentSubType"
					},
					"destination": {
						"schema": "Radar_RiskManagement",
						"table": "IncidentSubType"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RiskManagement",
						"table": "IncidentType"
					},
					"destination": {
						"schema": "Radar_RiskManagement",
						"table": "IncidentType"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RiskManagement",
						"table": "IncidentTypeLocationType"
					},
					"destination": {
						"schema": "Radar_RiskManagement",
						"table": "IncidentTypeLocationType"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RiskManagement",
						"table": "LikelihoodCategory"
					},
					"destination": {
						"schema": "Radar_RiskManagement",
						"table": "LikelihoodCategory"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RiskManagement",
						"table": "LikelihoodDescriptor"
					},
					"destination": {
						"schema": "Radar_RiskManagement",
						"table": "LikelihoodDescriptor"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RiskManagement",
						"table": "LinkedItem"
					},
					"destination": {
						"schema": "Radar_RiskManagement",
						"table": "LinkedItem"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RiskManagement",
						"table": "Risk"
					},
					"destination": {
						"schema": "Radar_RiskManagement",
						"table": "Risk"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RiskManagement",
						"table": "RiskCategory"
					},
					"destination": {
						"schema": "Radar_RiskManagement",
						"table": "RiskCategory"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RiskManagement",
						"table": "RiskReviewUpdate"
					},
					"destination": {
						"schema": "Radar_RiskManagement",
						"table": "RiskReviewUpdate"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RiskManagement",
						"table": "ViewExceptionEvent"
					},
					"destination": {
						"schema": "Radar_RiskManagement",
						"table": "ViewExceptionEvent"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RiskManagement",
						"table": "ViewExceptionEventRole"
					},
					"destination": {
						"schema": "Radar_RiskManagement",
						"table": "ViewExceptionEventRole"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RootCauseAnalysis",
						"table": "Cause"
					},
					"destination": {
						"schema": "Radar_RootCauseAnalysis",
						"table": "Cause"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RootCauseAnalysis",
						"table": "ContributingFactor"
					},
					"destination": {
						"schema": "Radar_RootCauseAnalysis",
						"table": "ContributingFactor"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RootCauseAnalysis",
						"table": "ContributingFactorCategory"
					},
					"destination": {
						"schema": "Radar_RootCauseAnalysis",
						"table": "ContributingFactorCategory"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RootCauseAnalysis",
						"table": "InvestigationEvent"
					},
					"destination": {
						"schema": "Radar_RootCauseAnalysis",
						"table": "InvestigationEvent"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Templates",
						"table": "Bodymap"
					},
					"destination": {
						"schema": "Radar_Templates",
						"table": "Bodymap"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Templates",
						"table": "FormTemplate"
					},
					"destination": {
						"schema": "Radar_Templates",
						"table": "FormTemplate"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Templates",
						"table": "FormTemplateInstance"
					},
					"destination": {
						"schema": "Radar_Templates",
						"table": "FormTemplateInstance"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Templates",
						"table": "FormTemplateInstanceValue"
					},
					"destination": {
						"schema": "Radar_Templates",
						"table": "FormTemplateInstanceValue"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Templates",
						"table": "FormTemplateInstanceValueExtendedData"
					},
					"destination": {
						"schema": "Radar_Templates",
						"table": "FormTemplateInstanceValueExtendedData"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Templates",
						"table": "FormTemplateTag"
					},
					"destination": {
						"schema": "Radar_Templates",
						"table": "FormTemplateTag"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Workflow",
						"table": "Definition"
					},
					"destination": {
						"schema": "Radar_Workflow",
						"table": "Definition"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Workflow",
						"table": "Dependency"
					},
					"destination": {
						"schema": "Radar_Workflow",
						"table": "Dependency"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Workflow",
						"table": "Instance"
					},
					"destination": {
						"schema": "Radar_Workflow",
						"table": "Instance"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Workflow",
						"table": "Selector"
					},
					"destination": {
						"schema": "Radar_Workflow",
						"table": "Selector"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Workflow",
						"table": "Trigger"
					},
					"destination": {
						"schema": "Radar_Workflow",
						"table": "Trigger"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Workflow",
						"table": "UserTask"
					},
					"destination": {
						"schema": "Radar_Workflow",
						"table": "UserTask"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				}
			]
		},
		"AveryAzureBlobFileSharePrivateEndPoint_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/1463136a-d925-4b90-abc6-6236a477d62f/resourceGroups/Avery/providers/Microsoft.Storage/storageAccounts/averyblob"
		},
		"AveryAzureBlobFileSharePrivateEndPoint_properties_groupId": {
			"type": "string",
			"defaultValue": "file"
		},
		"AveryAzureBlobStorageAccountPrivateEndPoint_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/1463136a-d925-4b90-abc6-6236a477d62f/resourceGroups/Avery/providers/Microsoft.Storage/storageAccounts/averyblob"
		},
		"AveryAzureBlobStorageAccountPrivateEndPoint_properties_groupId": {
			"type": "string",
			"defaultValue": "blob"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_AEMS_2023')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "AEMS Data from Jan 2023",
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"parallelCopies": 16,
							"dataIntegrationUnits": 16,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AEMS_ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "AEMS_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "aems_version",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "aems_version",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "homeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "homeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "uploadedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "uploadedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "managerEmailed",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "managerEmailed",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiryStatus",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiryStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiryID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiryID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "initialEnquiry",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "initialEnquiry",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "enquirerSalutation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerSalutation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerFirstName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerFirstName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerLastName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerLastName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerSalutationTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerSalutationTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerLastNameTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerLastNameTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerFirstNameTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerFirstNameTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiryDate",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiryDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerRelationshipToResident",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerRelationshipToResident",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "en_areacode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "en_areacode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerTelephone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerTelephone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_mobile",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_mobile",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerEmail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerEmail",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerAddress",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquirerAddress",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquirerAddressOne",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerAddressOne",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerAddressTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerAddressTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerAddressThree",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerAddressThree",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_postcode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_postcode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_postcode_two",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_postcode_two",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentSalutation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentSalutation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentFirstName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentFirstName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentLastName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentLastName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentDOB",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentDOB",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentSalutationTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentSalutationTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentFirstNameTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentFirstNameTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentLastNameTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentLastNameTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentDOBTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentDOBTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentNOK",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentNOK",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentAddress",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "residentAddress",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "residentAddressOne",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentAddressOne",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentAddressTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentAddressTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentAddressThree",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentAddressThree",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentPostcode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentPostcode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentTelephone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentTelephone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentCareCategory",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentCareCategory",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentFundingCategory",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentFundingCategory",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentCareCategoryTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentCareCategoryTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "funding_total",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "funding_total",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentFunding",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentFunding",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentFundingTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentFundingTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiryDetails",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquiryDetails",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquiryType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiryType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "responseTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "responseTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "responseCurrentStatus",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "responseCurrentStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "responseNeeded",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "responseNeeded",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "responseAmountTried",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "responseAmountTried",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "followUpDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "followUpDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "followUpReason",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "followUpReason",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "uploadToCH",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "uploadToCH",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "admissionDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "admissionDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "enquiryClosed",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiryClosed",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "managerContacted",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "managerContacted",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "homeVisit",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "homeVisit",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "assessmentBooked",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "assessmentBooked",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "assesmentComplete",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "assesmentComplete",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "admission",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "admission",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "homeVisitBooked",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "homeVisitBooked",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "admissionBooked",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "admissionBooked",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "video_booked",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "video_booked",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "video_complete",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "video_complete",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "homeVisitRequested",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "homeVisitRequested",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "assesmentRequested",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "assesmentRequested",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "newEnquiry",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "newEnquiry",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "cameFrom",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "cameFrom",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirer_address",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquirer_address",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquirer_postcode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirer_postcode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "lng",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "lng",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "lat",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "lat",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirer_area",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirer_area",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirer_county",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirer_county",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_surname",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_surname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_county",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_county",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_relation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_relation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_telephone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_telephone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_mobile",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_mobile",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_address",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_address",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "resident_county",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "resident_county",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_Salutation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_Salutation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "newsletter_receive",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "newsletter_receive",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "newsletter_email",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "newsletter_email",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_urgent",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_urgent",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "optOut",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "optOut",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "type_news",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "type_news",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "type_mag",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "type_mag",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "type_other",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "type_other",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "gp_name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "gp_name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "gp_address",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "gp_address",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "gp_telephone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "gp_telephone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "gp_requested",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "gp_requested",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "gp_received",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "gp_received",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "website",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "website",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "brochure",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "brochure",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "brochure_requestID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "brochure_requestID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "entryMethod",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "entryMethod",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "current_action_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "current_action_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "column_hash",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "column_hash",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "receiveMarketing",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "receiveMarketing",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "willTopUp",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "willTopUp",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquiry_entered_from",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_entered_from",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_closed_reason",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_closed_reason",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_deleted",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_deleted",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_weight",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_weight",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH1_Avery_AEMS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "AEMS",
									"Table": "AH1_Enquiries"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "AEMS/Children Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-06-24T11:45:29Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AH1_Avery_AEMS')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_AEMS_BackupToAveryTables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Clears the Dest Tables then inserts the data  from AEMS tables to avoid data loss when issues with the transfer occur",
				"activities": [
					{
						"name": "AEMS_Enquiries",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "AEMS_Enquiries_Actions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE Avery.AEMS_Enquiries",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AEMS_ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "AEMS_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "aems_version",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "aems_version",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "homeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "homeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "uploadedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "uploadedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "managerEmailed",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "managerEmailed",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiryStatus",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiryStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiryID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiryID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "initialEnquiry",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "initialEnquiry",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "enquirerSalutation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerSalutation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerFirstName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerFirstName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerLastName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerLastName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerSalutationTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerSalutationTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerLastNameTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerLastNameTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerFirstNameTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerFirstNameTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiryDate",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiryDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerRelationshipToResident",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerRelationshipToResident",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "en_areacode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "en_areacode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerTelephone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerTelephone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_mobile",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_mobile",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerEmail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerEmail",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerAddress",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquirerAddress",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquirerAddressOne",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerAddressOne",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerAddressTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerAddressTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerAddressThree",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerAddressThree",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_postcode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_postcode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_postcode_two",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_postcode_two",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentSalutation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentSalutation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentFirstName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentFirstName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentLastName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentLastName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentDOB",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentDOB",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentSalutationTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentSalutationTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentFirstNameTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentFirstNameTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentLastNameTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentLastNameTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentDOBTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentDOBTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentNOK",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentNOK",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentAddress",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "residentAddress",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "residentAddressOne",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentAddressOne",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentAddressTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentAddressTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentAddressThree",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentAddressThree",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentPostcode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentPostcode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentTelephone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentTelephone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentCareCategory",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentCareCategory",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentFundingCategory",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentFundingCategory",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentCareCategoryTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentCareCategoryTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "funding_total",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "funding_total",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentFunding",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentFunding",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentFundingTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentFundingTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiryDetails",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquiryDetails",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquiryType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiryType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "responseTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "responseTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "responseCurrentStatus",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "responseCurrentStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "responseNeeded",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "responseNeeded",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "responseAmountTried",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "responseAmountTried",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "followUpDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "followUpDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "followUpReason",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "followUpReason",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "uploadToCH",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "uploadToCH",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "admissionDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "admissionDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "enquiryClosed",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiryClosed",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "managerContacted",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "managerContacted",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "homeVisit",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "homeVisit",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "assessmentBooked",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "assessmentBooked",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "assesmentComplete",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "assesmentComplete",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "admission",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "admission",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "homeVisitBooked",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "homeVisitBooked",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "admissionBooked",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "admissionBooked",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "video_booked",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "video_booked",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "video_complete",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "video_complete",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "homeVisitRequested",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "homeVisitRequested",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "assesmentRequested",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "assesmentRequested",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "newEnquiry",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "newEnquiry",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "cameFrom",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "cameFrom",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirer_address",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquirer_address",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquirer_postcode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirer_postcode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "lng",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "lng",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "lat",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "lat",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirer_area",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirer_area",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirer_county",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirer_county",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_surname",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_surname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_county",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_county",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_relation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_relation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_telephone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_telephone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_mobile",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_mobile",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_address",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_address",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "resident_county",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "resident_county",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_Salutation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_Salutation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "newsletter_receive",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "newsletter_receive",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "newsletter_email",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "newsletter_email",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_urgent",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_urgent",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "optOut",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "optOut",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "type_news",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "type_news",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "type_mag",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "type_mag",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "type_other",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "type_other",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "gp_name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "gp_name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "gp_address",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "gp_address",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "gp_telephone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "gp_telephone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "gp_requested",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "gp_requested",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "gp_received",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "gp_received",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "website",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "website",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "brochure",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "brochure",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "brochure_requestID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "brochure_requestID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "entryMethod",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "entryMethod",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "current_action_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "current_action_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "column_hash",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "column_hash",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "receiveMarketing",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "receiveMarketing",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "willTopUp",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "willTopUp",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquiry_entered_from",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_entered_from",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_closed_reason",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_closed_reason",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_deleted",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_deleted",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_weight",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_weight",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "AEMS",
									"Table": "AEMS_Enquiries"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Avery",
									"Table": "AEMS_Enquiries"
								}
							}
						]
					},
					{
						"name": "AEMS_Enquiries_Actions",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE Avery.AEMS_Enquiries_Actions",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AEMS_ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "AEMS_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_setBy",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquiry_setBy",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquiry_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_dateRequired",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "enquiry_dateRequired",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "enquiry_reason",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquiry_reason",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquiry_contact",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquiry_contact",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquiry_actionComplete",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_actionComplete",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_actionInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "enquiry_actionInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "enquiry_actionCompleteDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "enquiry_actionCompleteDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "enquiry_actionCompleteBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_actionCompleteBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_homeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_homeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_missed",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_missed",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_missedEmail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_missedEmail",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_missedEmailDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "enquiry_missedEmailDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "enquiry_initialContact",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_initialContact",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_flag",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_flag",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_critical",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_critical",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_details",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquiry_details",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquiry_picked_up",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_picked_up",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_assigned_to",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_assigned_to",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_assigned_when",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "enquiry_assigned_when",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "enquiry_action_call_handler",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_action_call_handler",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_new",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_new",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "AEMS",
									"Table": "AEMS_Enquiries_Actions"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Avery",
									"Table": "AEMS_Enquiries_Actions"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "AEMS"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-30T11:09:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_AEMS_CleanHTML')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Removes HTML from the enquiry_details field on the AEMS.AEMS_Enquiries_Actions table",
				"activities": [
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[AEMS].[EnquiryDetails$CleanHTML]"
						},
						"linkedServiceName": {
							"referenceName": "AH2_TRANSFORM_DB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "AEMS"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_AEMS_Enquiries_Export')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Export Enquiries to CSV",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Enquiries Rec FileName",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[AEMS].[EnquiriesReceived$Export]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Query",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_AEMS",
								"type": "DatasetReference",
								"parameters": {
									"Folder": {
										"value": "@variables('Today')",
										"type": "Expression"
									},
									"FileName": {
										"value": "@variables('EnquiriesRecFileName')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set Todays date",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Today",
							"value": {
								"value": "@formatDateTime(utcNow(), 'yyyy-MM-dd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Enquiries Rec FileName",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Todays date",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "EnquiriesRecFileName",
							"value": {
								"value": "@concat('EnquiriesReceived$', formatDateTime(utcNow(), 'dd-MM-yyyy'), '.csv')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"EnquiriesRecFileName": {
						"type": "String"
					},
					"Today": {
						"type": "String"
					}
				},
				"folder": {
					"name": "AEMS/Children Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-29T14:01:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB_Query')]",
				"[concat(variables('factoryId'), '/datasets/DS_PolestarStorageAcc_AEMS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_AEMS_Export')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Remove CR and LF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_AEMS_Enquiries_Export",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Pipeline2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Pipeline1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_AEMS_Export_PBData",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Remove CR and LF",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[AEMS].[Enquiries$RemoveHiddenCharacters]"
						},
						"linkedServiceName": {
							"referenceName": "AH2_TRANSFORM_DB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "AEMS"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-29T16:06:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_AEMS_Enquiries_Export')]",
				"[concat(variables('factoryId'), '/pipelines/PL_AEMS_Export_PBData')]",
				"[concat(variables('factoryId'), '/linkedServices/AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_AEMS_Export_PBData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set Todays date",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Today",
							"value": {
								"value": "@formatDateTime(utcNow(), 'yyyy-MM-dd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set PB Data FileName",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Todays date",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "PBDataFileName",
							"value": {
								"value": "@concat('PBData$', formatDateTime(utcNow(), 'dd-MM-yyyy'), '.csv')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Export PB Data to CSV",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set PB Data FileName",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[AEMS].[PBData$Export]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Query",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_AEMS",
								"type": "DatasetReference",
								"parameters": {
									"Folder": {
										"value": "@variables('Today')",
										"type": "Expression"
									},
									"FileName": {
										"value": "@variables('PBDataFileName')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"PBDataFileName": {
						"type": "String"
					},
					"Today": {
						"type": "String"
					}
				},
				"folder": {
					"name": "AEMS/Children Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-29T14:01:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB_Query')]",
				"[concat(variables('factoryId'), '/datasets/DS_PolestarStorageAcc_AEMS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_AEMS_Post_Transfer_DuplicateClear')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Exec 2 stored procedures that will delete duplicate records (if any) from the AEMS.AEMS Actions table",
				"activities": [
					{
						"name": "Post Transfer Clear Action Duplicates",
						"description": "AEMS.PostTransfer$ClearActionDuplicates",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[AEMS].[PostTransfer$ClearActionDuplicates]"
						},
						"linkedServiceName": {
							"referenceName": "AH2_TRANSFORM_DB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Post Transfer Clear Enquiry Duplicates",
						"description": "AEMS.PostTransfer$ClearEnquiryDuplicates",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Post Transfer Clear Action Duplicates",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[AEMS].[PostTransfer$ClearEnquiryDuplicates]"
						},
						"linkedServiceName": {
							"referenceName": "AH2_TRANSFORM_DB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "AEMS"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-30T11:12:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_AH1_Financials')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copies data from Fin tables from AH1 to Transform_DB",
				"activities": [
					{
						"name": "Copy Actuals",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Intranet",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 3
										},
										"sink": {
											"name": "OldIntranet",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "GLCODE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 5
										},
										"sink": {
											"name": "GLCODE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 5
										}
									},
									{
										"source": {
											"name": "Period",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Period",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "actual_desc",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "actual_desc",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 12
										},
										"sink": {
											"name": "amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 12
										}
									},
									{
										"source": {
											"name": "intranetnew",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "IntranetID",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH1_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "actuals2"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Exchequer",
									"Table": "Actuals"
								}
							}
						]
					},
					{
						"name": "Copy Budget",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Actuals",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Intranet",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 3
										},
										"sink": {
											"name": "OldIntranet",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 3
										}
									},
									{
										"source": {
											"name": "GLCODE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 5
										},
										"sink": {
											"name": "GLCODE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 5
										}
									},
									{
										"source": {
											"name": "Period",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Period",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Budget_desc",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Budget_desc",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 12
										},
										"sink": {
											"name": "amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 12
										}
									},
									{
										"source": {
											"name": "intranetnew",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "IntranetID",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH1_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "Budget"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Exchequer",
									"Table": "Budget"
								}
							}
						]
					},
					{
						"name": "Copy Categories",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Budget",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "GL_CODE",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "GL_CODE",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "GL_Category",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "GL_Category",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "GL_Category2",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "GL_Category2",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "GL_Name",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "GL_Name",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "gl_category3",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "gl_category3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH1_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "PWRBI_FINANCIALS_TBCAT"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Exchequer",
									"Table": "GeneralLedgerCategory"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Avery/Children Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AH1_Avery')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_AH1_Homes-AH2_Homes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy data from the Homes table on AH1 to the Homes table on AH2. The integration truncates the table on AH2 and inserts all data again.",
				"activities": [
					{
						"name": "Copy Homes Data",
						"description": "Copies the data in the Homes table on AH1 to the Homes table on AH2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate AH2 Homes table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "SET IDENTITY_INSERT Homes ON",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Homename",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Homename",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Intranet",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 4
										},
										"sink": {
											"name": "Intranet",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 4
										}
									},
									{
										"source": {
											"name": "IntranetNew",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "IntranetNew",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Exch_Code",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Exch_Code",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "CH_Code",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "CH_Code",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "company",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "company",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "homeadd1",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "homeadd1",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "homeadd2",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "homeadd2",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "homeadd3",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "homeadd3",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "homeadd4",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "homeadd4",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "homeadd5",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "homeadd5",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "hometell",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "hometell",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "code",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "code",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Beds",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 4
										},
										"sink": {
											"name": "Beds",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 4
										}
									},
									{
										"source": {
											"name": "Category",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Category",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "hometype",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "hometype",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Newbuild",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Newbuild",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Group",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Group",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Subgroup",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Subgroup",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Division",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Division",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Divisional",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Divisional",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Regional",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Regional",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Regional_Support",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Regional_Support",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Manager",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Manager",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "CSM",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "CSM",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "CSM2",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "CSM2",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Divisional_Email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Divisional_Email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "regional_email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "regional_email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "regional_support_email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "regional_support_email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Manager_Email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Manager_Email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Deputy_Email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Deputy_Email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "CSM_Email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "CSM_Email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "CSM_Email2",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "CSM_Email2",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "agency_email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "agency_email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "agencu_email2",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "agencu_email2",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Regional_Cover_email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Regional_Cover_email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "admin_email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "admin_email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "admin_assistant_email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "admin_assistant_email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "reg_admin_email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "reg_admin_email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "reg_admin_deputy_email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "reg_admin_deputy_email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Housekeeper_Email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Housekeeper_Email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Chef_Email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Chef_Email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "home_maint_email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "home_maint_email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "hospitality_email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "hospitality_email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "sales_ledger_email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "sales_ledger_email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "reg_estates_email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "reg_estates_email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Food_Safety",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										},
										"sink": {
											"name": "Food_Safety",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										}
									},
									{
										"source": {
											"name": "Food_Safety_date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Food_Safety_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Home_Manager_rating",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Home_Manager_rating",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "FTE_hours",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 5
										},
										"sink": {
											"name": "FTE_hours",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 5
										}
									},
									{
										"source": {
											"name": "Local_Page_URL",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Local_Page_URL",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Food_budget_PPPD",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 5
										},
										"sink": {
											"name": "Food_budget_PPPD",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 5
										}
									},
									{
										"source": {
											"name": "ChecksType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ChecksType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Procurement_Name",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Procurement_Name",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "agency_select",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "agency_select",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "agency_select2",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "agency_select2",
											"type": "String",
											"physicalType": "nchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH1_Avery_Homes",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_Avery_Homes",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "INSERT_IDENTITY OFF",
						"description": "Reset the Insert Identity to be OFF",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Copy Homes Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AH2_Avery",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "SET IDENTITY_INSERT Homes OFF"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Truncate AH2 Homes table",
						"description": "Truncates the Homes table on the AH2 server, clearing it of data and resetting the IDENTITY seed",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AH2_Avery",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE Homes"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "EXEC PopulateHomes FromvHome",
						"description": "Avery.PopulateHomes$FromvHome Deletes data from the Avery.Homes table while the AH1 is master. And re-populates it data from the dbo.Homes table",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "INSERT_IDENTITY OFF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Avery].[PopulateHomes$FromvHome]"
						},
						"linkedServiceName": {
							"referenceName": "AH2_Avery",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Avery/Children Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-06-13T14:07:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AH1_Avery_Homes')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_Avery_Homes')]",
				"[concat(variables('factoryId'), '/linkedServices/AH2_Avery')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_AH1_Occupancy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copies the Occupancy Data from the AH1 to TRANSFORM DB and Avery DB on AH2",
				"activities": [
					{
						"name": "Upsert to AH2 TRANSFORM",
						"description": "Using the view vPowerAppOccupancy on AH1 Avery as the source, upserts the data using the ID field to Avery.PowerAppOccupancy in TRANSFORM DB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Home",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Home",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "HomeID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "HomeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Private_Occupancy",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Private_Occupancy",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Other_Occupancy",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Other_Occupancy",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Occupancy",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Total_Occupancy",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "DateToday",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "DateToday",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "InRespite_LA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "InRespite_LA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "InRespite_Private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "InRespite_Private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "InLA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "InLA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "In_Private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "In_Private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "TransfLA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "TransfLA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Tranfprivate",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Tranfprivate",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Outchange_of_needs_la",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Outchange_of_needs_la",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "outchange_of_needs_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "outchange_of_needs_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "out_respite_la",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "out_respite_la",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "out_respite_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "out_respite_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "out_AD_LA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "out_AD_LA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Out_AD_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Out_AD_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "outother_la",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "outother_la",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "outother_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "outother_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "budget",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 6
										},
										"sink": {
											"name": "budget",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 6
										}
									},
									{
										"source": {
											"name": "budgetinc",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 10
										},
										"sink": {
											"name": "budgetinc",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 10
										}
									},
									{
										"source": {
											"name": "total_ad",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "total_ad",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "total_rip",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "total_rip",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Closed",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Closed",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "respites",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "respites",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH1_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "vPowerAppOccupancy"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Avery",
									"Table": "PowerAppOccupancy"
								}
							}
						]
					},
					{
						"name": "Upsert to AH2 Avery",
						"description": "Using the view vPowerAppOccupancy on AH1 Avery as the source, upserts the data using the ID field to Avery.PowerAppOccupancy in Avery DB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Upsert to AH2 TRANSFORM",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Home",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Home",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "HomeID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "HomeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Private_Occupancy",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Private_Occupancy",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Other_Occupancy",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Other_Occupancy",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Occupancy",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Total_Occupancy",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "DateToday",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "DateToday",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "InRespite_LA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "InRespite_LA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "InRespite_Private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "InRespite_Private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "InLA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "InLA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "In_Private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "In_Private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "TransfLA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "TransfLA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Tranfprivate",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Tranfprivate",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Outchange_of_needs_la",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Outchange_of_needs_la",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "outchange_of_needs_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "outchange_of_needs_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "out_respite_la",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "out_respite_la",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "out_respite_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "out_respite_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "out_AD_LA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "out_AD_LA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Out_AD_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Out_AD_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "outother_la",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "outother_la",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "outother_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "outother_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "budget",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 6
										},
										"sink": {
											"name": "budget",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 6
										}
									},
									{
										"source": {
											"name": "budgetinc",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 10
										},
										"sink": {
											"name": "budgetinc",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 10
										}
									},
									{
										"source": {
											"name": "total_ad",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "total_ad",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "total_rip",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "total_rip",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Closed",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Closed",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "respites",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "respites",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH1_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "vPowerAppOccupancy"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Avery",
									"Table": "PowerAppOccupancy"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Avery/Children Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-07-11T14:31:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AH1_Avery')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_Avery')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Agency_HomeName')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Populates and keeps the home name table in the Agency DB up to date.",
				"activities": [
					{
						"name": "Copy from Avery DB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\n    HomeID,\n    IntranetID,\n    HomeName\nFROM\n    Avery.Home",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"HomeID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "HomeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "HomeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "IntranetID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "IntranetID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "HomeName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Avery",
									"Table": "Home"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_Agency",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "Homename"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Agency"
				},
				"annotations": [],
				"lastPublishTime": "2024-07-15T10:56:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AH2_Avery')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_Agency')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Agency_WAC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Pipeline used to build data used for average costs and ranking or agencies and rate using WAC.",
				"activities": [
					{
						"name": "AgencyShiftClean table",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_ClearAndPopulate_AgencyShiftClean",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "AgencyRanking",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Wait 10",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_ClearAndPopulate_AgencyRanking",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Wait 10",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "AgencyShiftClean table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 10
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Agency"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_ClearAndPopulate_AgencyShiftClean')]",
				"[concat(variables('factoryId'), '/pipelines/PL_ClearAndPopulate_AgencyRanking')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Artisan')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Pipeline to move Artisan Data to the Artisan SQL Server",
				"activities": [
					{
						"name": "Home Details",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Artisan_Homes",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "AEMS Data",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Home Details",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Artisan_AEMS_Enquiries",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Occupancy Data",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "AEMS Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Artisan_Occupancy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Artisan Debt",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Occupancy Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Artisan_Debt",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Artisan budget",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Artisan Debt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Artisan_budget",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Artisan HomeDetails",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Artisan budget",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Artisan_vHomeDetails",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Artisan RLS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Artisan HomeDetails",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Artisan_vRLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Artisan"
				},
				"annotations": [],
				"lastPublishTime": "2024-07-02T10:33:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_Artisan_Homes')]",
				"[concat(variables('factoryId'), '/pipelines/PL_Artisan_AEMS_Enquiries')]",
				"[concat(variables('factoryId'), '/pipelines/PL_Artisan_Occupancy')]",
				"[concat(variables('factoryId'), '/pipelines/PL_Artisan_Debt')]",
				"[concat(variables('factoryId'), '/pipelines/PL_Artisan_budget')]",
				"[concat(variables('factoryId'), '/pipelines/PL_Artisan_vHomeDetails')]",
				"[concat(variables('factoryId'), '/pipelines/PL_Artisan_vRLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Artisan_AEMS_Enquiries')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copies across the Artisan AEM data",
				"activities": [
					{
						"name": "Enquiries",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE AEMS.AEMS_Enquiries",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AEMS_ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "AEMS_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "aems_version",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "aems_version",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "homeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "homeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "uploadedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "uploadedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "managerEmailed",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "managerEmailed",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiryStatus",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiryStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiryID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiryID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "initialEnquiry",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "initialEnquiry",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "enquirerSalutation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerSalutation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerFirstName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerFirstName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerLastName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerLastName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerSalutationTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerSalutationTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerLastNameTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerLastNameTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerFirstNameTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerFirstNameTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiryDate",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiryDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerRelationshipToResident",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerRelationshipToResident",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "en_areacode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "en_areacode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerTelephone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerTelephone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_mobile",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_mobile",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerEmail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerEmail",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerAddress",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquirerAddress",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquirerAddressOne",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerAddressOne",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerAddressTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerAddressTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerAddressThree",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerAddressThree",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_postcode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_postcode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_postcode_two",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_postcode_two",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentSalutation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentSalutation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentFirstName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentFirstName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentLastName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentLastName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentDOB",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentDOB",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentSalutationTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentSalutationTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentFirstNameTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentFirstNameTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentLastNameTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentLastNameTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentDOBTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentDOBTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentNOK",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentNOK",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentAddress",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "residentAddress",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "residentAddressOne",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentAddressOne",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentAddressTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentAddressTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentAddressThree",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentAddressThree",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentPostcode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentPostcode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentTelephone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentTelephone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentCareCategory",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentCareCategory",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentFundingCategory",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentFundingCategory",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentCareCategoryTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentCareCategoryTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "funding_total",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "funding_total",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentFunding",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentFunding",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentFundingTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentFundingTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiryDetails",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquiryDetails",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquiryType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiryType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "responseTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "responseTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "responseCurrentStatus",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "responseCurrentStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "responseNeeded",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "responseNeeded",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "responseAmountTried",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "responseAmountTried",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "followUpDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "followUpDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "followUpReason",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "followUpReason",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "uploadToCH",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "uploadToCH",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "admissionDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "admissionDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "enquiryClosed",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiryClosed",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "managerContacted",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "managerContacted",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "homeVisit",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "homeVisit",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "assessmentBooked",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "assessmentBooked",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "assesmentComplete",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "assesmentComplete",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "admission",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "admission",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "homeVisitBooked",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "homeVisitBooked",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "admissionBooked",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "admissionBooked",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "video_booked",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "video_booked",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "video_complete",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "video_complete",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "homeVisitRequested",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "homeVisitRequested",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "assesmentRequested",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "assesmentRequested",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "newEnquiry",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "newEnquiry",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "cameFrom",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "cameFrom",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirer_address",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquirer_address",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquirer_postcode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirer_postcode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "lng",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "lng",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "lat",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "lat",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirer_area",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirer_area",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirer_county",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirer_county",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_surname",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_surname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_county",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_county",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_relation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_relation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_telephone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_telephone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_mobile",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_mobile",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_address",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_address",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "resident_county",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "resident_county",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_Salutation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_Salutation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "newsletter_receive",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "newsletter_receive",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "newsletter_email",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "newsletter_email",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_urgent",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_urgent",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "optOut",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "optOut",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "type_news",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "type_news",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "type_mag",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "type_mag",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "type_other",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "type_other",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "gp_name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "gp_name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "gp_address",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "gp_address",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "gp_telephone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "gp_telephone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "gp_requested",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "gp_requested",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "gp_received",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "gp_received",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "website",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "website",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "brochure",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "brochure",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "brochure_requestID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "brochure_requestID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "entryMethod",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "entryMethod",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "current_action_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "current_action_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "column_hash",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "column_hash",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "receiveMarketing",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "receiveMarketing",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "willTopUp",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "willTopUp",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquiry_entered_from",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_entered_from",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_closed_reason",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_closed_reason",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_deleted",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_deleted",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_weight",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_weight",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "AEMS",
									"Table": "vArtisanEnquiries"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AveryArtisan_Artisan",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "AEMS",
									"Table": "AEMS_Enquiries"
								}
							}
						]
					},
					{
						"name": "Actions",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Enquiries",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE AEMS.AEMS_Enquiries_Actions",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AEMS_ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "AEMS_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_setBy",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquiry_setBy",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquiry_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_dateRequired",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "enquiry_dateRequired",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "enquiry_reason",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquiry_reason",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquiry_contact",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquiry_contact",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquiry_actionComplete",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_actionComplete",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_actionInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "enquiry_actionInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "enquiry_actionCompleteDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "enquiry_actionCompleteDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "enquiry_actionCompleteBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_actionCompleteBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_homeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_homeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_missed",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_missed",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_missedEmail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_missedEmail",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_missedEmailDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "enquiry_missedEmailDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "enquiry_initialContact",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_initialContact",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_flag",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_flag",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_critical",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_critical",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_details",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquiry_details",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquiry_picked_up",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_picked_up",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_assigned_to",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_assigned_to",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_assigned_when",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "enquiry_assigned_when",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "enquiry_action_call_handler",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_action_call_handler",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_new",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_new",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "AEMS",
									"Table": "vArtisanEnquiries_Actions"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AveryArtisan_Artisan",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "AEMS",
									"Table": "AEMS_Enquiries_Actions"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Artisan/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-07-02T10:29:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]",
				"[concat(variables('factoryId'), '/datasets/DS_AveryArtisan_Artisan')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Artisan_Debt')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Pwrbi_Debt2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Intranet",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Intranet",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "resident_no",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "resident_no",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "resident_name",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "resident_name",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "account_no",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "account_no",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "funder",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "funder",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "transaction_location",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "transaction_location",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "transaction_date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "transaction_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "transaction_type",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "transaction_type",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "transaction_ref1",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "transaction_ref1",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "transaction_ref2",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "transaction_ref2",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "transaction_value",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 10
										},
										"sink": {
											"name": "transaction_value",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 10
										}
									},
									{
										"source": {
											"name": "transaction_bal",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 10
										},
										"sink": {
											"name": "transaction_bal",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 10
										}
									},
									{
										"source": {
											"name": "res_status",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "res_status",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "res_lastdidate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "res_lastdidate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "month_end",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "month_end",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "IntranetNew",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "IntranetNew",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH1_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "vArtisanDebt"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AveryArtisan_Artisan",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Artisan",
									"Table": "Pwrbi_Debt2"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Artisan/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AH1_Avery')]",
				"[concat(variables('factoryId'), '/datasets/DS_AveryArtisan_Artisan')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Artisan_Homes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy Across Artisan Home details to the Artisan DB. (Uses the old AH1 table structure and data)",
				"activities": [
					{
						"name": "Upsert Artisan Details",
						"description": "Updates details from AH2 to the Artisan DB for the the Artisan Homes",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Homename",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Homename",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Intranet",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 4
										},
										"sink": {
											"name": "Intranet",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 4
										}
									},
									{
										"source": {
											"name": "IntranetNew",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "IntranetNew",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Exch_Code",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Exch_Code",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "CH_Code",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "CH_Code",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "company",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "company",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "homeadd1",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "homeadd1",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "homeadd2",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "homeadd2",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "homeadd3",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "homeadd3",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "homeadd4",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "homeadd4",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "homeadd5",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "homeadd5",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "hometell",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "hometell",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "code",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "code",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Beds",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 4
										},
										"sink": {
											"name": "Beds",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 4
										}
									},
									{
										"source": {
											"name": "Category",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Category",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "hometype",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "hometype",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Newbuild",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Newbuild",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Group",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Group",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Subgroup",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Subgroup",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Division",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Division",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Divisional",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Divisional",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Regional",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Regional",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Regional_Support",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Regional_Support",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Manager",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Manager",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "CSM",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "CSM",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "CSM2",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "CSM2",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Divisional_Email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Divisional_Email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "regional_email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "regional_email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "regional_support_email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "regional_support_email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Manager_Email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Manager_Email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Deputy_Email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Deputy_Email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "CSM_Email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "CSM_Email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "CSM_Email2",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "CSM_Email2",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "agency_email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "agency_email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "agencu_email2",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "agencu_email2",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Regional_Cover_email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Regional_Cover_email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "admin_email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "admin_email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "admin_assistant_email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "admin_assistant_email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "reg_admin_email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "reg_admin_email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "reg_admin_deputy_email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "reg_admin_deputy_email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Housekeeper_Email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Housekeeper_Email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Chef_Email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Chef_Email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "home_maint_email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "home_maint_email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "hospitality_email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "hospitality_email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "sales_ledger_email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "sales_ledger_email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "reg_estates_email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "reg_estates_email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Food_Safety",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										},
										"sink": {
											"name": "Food_Safety",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										}
									},
									{
										"source": {
											"name": "Food_Safety_date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Food_Safety_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Home_Manager_rating",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Home_Manager_rating",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "FTE_hours",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 5
										},
										"sink": {
											"name": "FTE_hours",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 5
										}
									},
									{
										"source": {
											"name": "Local_Page_URL",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Local_Page_URL",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Food_budget_PPPD",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 5
										},
										"sink": {
											"name": "Food_budget_PPPD",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 5
										}
									},
									{
										"source": {
											"name": "ChecksType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ChecksType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Procurement_Name",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Procurement_Name",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "agency_select",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "agency_select",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "agency_select2",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "agency_select2",
											"type": "String",
											"physicalType": "nchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Avery",
									"Table": "vArtisanHomes"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AveryArtisan_Artisan",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Artisan",
									"Table": "Homes"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Artisan/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-07-05T10:28:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AH2_Avery')]",
				"[concat(variables('factoryId'), '/datasets/DS_AveryArtisan_Artisan')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Artisan_Occupancy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copies across the Artisan Occupancy Data from AH1 to Artisan DB",
				"activities": [
					{
						"name": "Occupancy Upsert",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Home",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Home",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "HomeID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "HomeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "IntranetID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 4
										},
										"sink": {
											"name": "IntranetID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Private_Occupancy",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Private_Occupancy",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Other_Occupancy",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Other_Occupancy",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Occupancy",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Total_Occupancy",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "DateToday",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "DateToday",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "InRespite_LA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "InRespite_LA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "InRespite_Private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "InRespite_Private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "InLA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "InLA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "In_Private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "In_Private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "TransfLA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "TransfLA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Tranfprivate",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Tranfprivate",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Outchange_of_needs_la",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Outchange_of_needs_la",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "outchange_of_needs_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "outchange_of_needs_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "out_respite_la",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "out_respite_la",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "out_respite_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "out_respite_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "out_AD_LA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "out_AD_LA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Out_AD_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Out_AD_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "outother_la",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "outother_la",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "outother_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "outother_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "budget",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 6
										},
										"sink": {
											"name": "budget",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 6
										}
									},
									{
										"source": {
											"name": "budgetinc",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 10
										},
										"sink": {
											"name": "budgetinc",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 10
										}
									},
									{
										"source": {
											"name": "total_ad",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "total_ad",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "total_rip",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "total_rip",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Closed",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Closed",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "respites",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "respites",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH1_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "vArtisanOccupancy"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AveryArtisan_Artisan",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Artisan",
									"Table": "PWRBI_OCC"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Artisan/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-07-09T15:51:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AH1_Avery')]",
				"[concat(variables('factoryId'), '/datasets/DS_AveryArtisan_Artisan')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Artisan_budget')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Budget",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Intranet",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 3
										},
										"sink": {
											"name": "Intranet",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 3
										}
									},
									{
										"source": {
											"name": "GLCODE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 5
										},
										"sink": {
											"name": "GLCODE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 5
										}
									},
									{
										"source": {
											"name": "Period",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Period",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Budget_desc",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Budget_desc",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 12
										},
										"sink": {
											"name": "amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 12
										}
									},
									{
										"source": {
											"name": "intranetnew",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "intranetnew",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH1_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "vArtisanBudget"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AveryArtisan_Artisan",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Artisan",
									"Table": "Budget"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Artisan/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AH1_Avery')]",
				"[concat(variables('factoryId'), '/datasets/DS_AveryArtisan_Artisan')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Artisan_vHomeDetails')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy vArtisanHomeDetails",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"HomeID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "HomeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "HomeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "IntranetID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "IntranetID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "HomeName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HomeTypeName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeTypeName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BedCount",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BedCount",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Group",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Group",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SubGroup",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SubGroup",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Division",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Division",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DivisionAltName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DivisionAltName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Postcode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Postcode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ExchCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ExchCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CHCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CHCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CareBloxHomeid",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CareBloxHomeid",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CBCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CBCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HomeManager",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeManager",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ManagerEmail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ManagerEmail",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DeputyEmail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DeputyEmail",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AdminEmail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AdminEmail",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CSMEmail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CSMEmail",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RegionalDirector",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RegionalDirector",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RegionalDirectorEmail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RegionalDirectorEmail",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OpsDirector",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OpsDirector",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OpsDirectorEmail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OpsDirectorEmail",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Avery",
									"Table": "vArtisanHomeDetails"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AveryArtisan_Artisan",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Artisan",
									"Table": "HomeDetails"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Artisan/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AH2_Avery')]",
				"[concat(variables('factoryId'), '/datasets/DS_AveryArtisan_Artisan')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Artisan_vRLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Artisan RLS data",
				"activities": [
					{
						"name": "Artisan vRLS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \n    H.[HomeID]\n    ,H.[IntranetID]\n    ,H.[HomeName]\n    ,[HomeData]\n    ,[RegionData]\n    ,[DivisionData]\n    ,[HomeSubGroupData]\n    ,[AllData]\nFROM \n    [Avery].[vRLS] AS R\n  \n    INNER JOIN Avery.Home AS H\n        ON H.HomeID = R.HomeID\nWHERE\n    H.HomeSubGroupID = 2",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"HomeID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "HomeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "HomeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "IntranetID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "IntranetID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "HomeName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HomeData",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeData",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RegionData",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RegionData",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DivisionData",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DivisionData",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HomeSubGroupData",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeSubGroupData",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AllData",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AllData",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AveryArtisan_Artisan",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Artisan",
									"Table": "RLS"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Artisan/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AH2_Avery')]",
				"[concat(variables('factoryId'), '/datasets/DS_AveryArtisan_Artisan')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Avery_RLS_TRANSFORM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy RLS view to TRANSFORM DB",
				"activities": [
					{
						"name": "Avery RLS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"HomeID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "HomeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "HomeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "IntranetID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "IntranetID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "HomeName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HomeData",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeData",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RegionData",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RegionData",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DivisionData",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DivisionData",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HomeSubGroupData",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeSubGroupData",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AllData",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AllData",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Avery",
									"Table": "vRLS"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Avery",
									"Table": "RLS"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "RLS"
				},
				"annotations": [],
				"lastPublishTime": "2024-07-24T08:35:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AH2_Avery')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Bill_Profile_With_FundSource')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Export Profile and Fundsource",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT DISTINCT\r\n\tP.PRO_CODE AS profile_code\r\n\t,P.PRODESC AS profile_description\r\n\t,CONTACT.CONTACT_REF AS oCnta_Det_Ref\r\n\t,CONCAT(RTRIM(CONTACT.FORENAMES), RTRIM(CONTACT.SURNAME)) AS FundSourceName\t\r\nFROM \r\n\tFUNDSRC_HD AS ACC\r\n\r\n\tLEFT JOIN PROFILES AS P\r\n\t\tON P.PRO_REF = ACC.PRO_REF\r\n\r\n\tLEFT JOIN CONTACT_HD AS CONTACT\r\n\t\tON CONTACT.CONTACT_REF = ACC.CNTA_DET_REF\r\n\r\n\tLEFT JOIN CALENDAR_HD AS CALENDAR\r\n\t\tON CALENDAR.CAL_REF = ACC.CAL_REF\r\n\t\t\r\n\tLEFT JOIN RESIDENT AS R\r\n\t\tON R.RES_REF = ACC.RES_REF\r\n\r\n\tLEFT JOIN Room_Dt AS Rooms\r\n\t\tON Rooms.Room_Ref = R.Room_Ref\r\nWHERE\r\n\tP.FSTYPE = 401\r\n\t--AND R.STATUS IN (25028, 25029)\r\n\tAND Rooms.LOC_REF IN (\r\n\t\t112,\r\n\t\t113,\r\n\t\t114,\r\n\t\t115,\r\n\t\t117,\r\n\t\t122,\r\n\t\t123,\r\n\t\t124,\r\n\t\t125,\r\n\t\t134,\r\n\t\t138,\r\n\t\t139,\r\n\t\t140,\r\n\t\t141,\r\n\t\t142,\r\n\t\t145,\r\n\t\t146,\r\n\t\t147,\r\n\t\t148,\r\n\t\t149,\r\n\t\t150,\r\n\t\t151,\r\n\t\t152,\r\n\t\t153,\r\n\t\t154,\r\n\t\t155,\r\n\t\t156,\r\n\t\t157,\r\n\t\t158,\r\n\t\t159,\r\n\t\t160,\r\n\t\t161,\r\n\t\t162,\r\n\t\t163,\r\n\t\t164,\r\n\t\t165,\r\n\t\t166,\r\n\t\t167,\r\n\t\t168,\r\n\t\t169,\r\n\t\t170,\r\n\t\t171,\r\n\t\t172,\r\n\t\t173,\r\n\t\t180,\r\n\t\t181\r\n\t\t)",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_IP",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('LA Billing Profiles and FundSource - ', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Yardi/CHIP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_OnPrem_CH_IP')]",
				"[concat(variables('factoryId'), '/datasets/DS_Yardi_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_Courses')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download Courses Data",
						"description": "Connects to Myrus API Courses end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Courses File Name",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_Live_API",
								"type": "DatasetReference",
								"parameters": {
									"Date": {
										"value": "@variables('API_Date')",
										"type": "Expression"
									},
									"Endpoint": "courses"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UsersFileName')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set Courses File Name",
						"description": "Sets the name of the file to be used in the sink data set",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Date for API Call",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UsersFileName",
							"value": {
								"value": "@concat('Courses', '$', formatDateTime(utcNow(), 'dd-MM-yyyy'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Date for API Call",
						"description": "Sets the API query date to previous day at 11:59:59 to capture any changes made since",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "API_Date",
							"value": {
								"value": "@concat(formatDateTime(subtractFromTime(utcNow(), 1, 'Day'), 'yyyyMMdd'), '115959')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Download Failure",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Download Courses Data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('Download Courses Data').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "Download Courses Data"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"UsersFileName": {
						"type": "String"
					},
					"API_Date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-03T15:30:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_BroadShield_Live_API')]",
				"[concat(variables('factoryId'), '/datasets/DS_BroadShield_JSON')]",
				"[concat(variables('factoryId'), '/pipelines/UT_Send_Email_Param')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_Download_AllData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download Coursesdata",
						"description": "Connects to Myrus API Courses end point and downloads data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_Live_API_AllData",
								"type": "DatasetReference",
								"parameters": {
									"EndPoint": "courses"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON_AllData",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "AllCoursesData$20241002"
								}
							}
						]
					},
					{
						"name": "Download Users data",
						"description": "Connects to Myrus API user end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Download Coursesdata",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_Live_API_AllData",
								"type": "DatasetReference",
								"parameters": {
									"EndPoint": "users"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON_AllData",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "AllUsersData$20241002"
								}
							}
						]
					},
					{
						"name": "Download User Course data",
						"description": "Connects to Myrus API user-course end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Date for Usercourse endpoint",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:08:00",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_Live_API",
								"type": "DatasetReference",
								"parameters": {
									"Date": {
										"value": "@variables('DateString')",
										"type": "Expression"
									},
									"Endpoint": "user-courses"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "AllUser_CoursesData$20241002"
								}
							}
						]
					},
					{
						"name": "Set Date for Usercourse endpoint",
						"description": "Sets the date to be the 1st of the current year and assigns it to the API dataset",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Download Users data",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "DateString",
							"value": "20210401090000"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"DateString": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-02T09:31:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_BroadShield_Live_API_AllData')]",
				"[concat(variables('factoryId'), '/datasets/DS_BroadShield_JSON_AllData')]",
				"[concat(variables('factoryId'), '/datasets/DS_BroadShield_Live_API')]",
				"[concat(variables('factoryId'), '/datasets/DS_BroadShield_JSON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_JSON_SQL_AllData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Users JSON data to SQL table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Upsert DateTime",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "UpsertDateTime",
										"value": {
											"value": "@variables('Upsert_UTCDateTime')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"UserID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['userID']"
										},
										"sink": {
											"name": "UserID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['forename']"
										},
										"sink": {
											"name": "Forename",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['surname']"
										},
										"sink": {
											"name": "Surname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['employeeNumber']"
										},
										"sink": {
											"name": "EmployeeNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['location']"
										},
										"sink": {
											"name": "UserLocation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['jobRole']"
										},
										"sink": {
											"name": "JobRole",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['status']"
										},
										"sink": {
											"name": "UserStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['createdDateTime']"
										},
										"sink": {
											"name": "CreatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['lastUpdatedDateTime']"
										},
										"sink": {
											"name": "APILastUpdatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['UpsertDateTime']"
										},
										"sink": {
											"name": "UpsertDateTime",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['users']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_JSON_AllData",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "AllUsersData$20241002"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Broadshield",
									"Table": "Users"
								}
							}
						]
					},
					{
						"name": "Courses JSON data to SQL table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Users JSON data to SQL table",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "UpsertDateTime",
										"value": {
											"value": "@variables('Upsert_UTCDateTime')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"CourseID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['courseID']"
										},
										"sink": {
											"name": "CourseID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['courseName']"
										},
										"sink": {
											"name": "CourseName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['courseCode']"
										},
										"sink": {
											"name": "CourseCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['courseMandation']"
										},
										"sink": {
											"name": "CourseMandation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['courseExpiry']"
										},
										"sink": {
											"name": "CourseExpiry",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['status']"
										},
										"sink": {
											"name": "CourseStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['createdDateTime']"
										},
										"sink": {
											"name": "CreatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['lastUpdatedDateTime']"
										},
										"sink": {
											"name": "APILastUpdatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['UpsertDateTime']"
										},
										"sink": {
											"name": "UpsertDateTime",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['courses']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_JSON_AllData",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "AllCoursesData$20241002"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Broadshield",
									"Table": "Course"
								}
							}
						]
					},
					{
						"name": "UserCourses JSON data to SQL table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Courses JSON data to SQL table",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "UpsertDateTime",
										"value": {
											"value": "@variables('Upsert_UTCDateTime')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"AssignmentID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['assignmentID']"
										},
										"sink": {
											"name": "AssignmentID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['userID']"
										},
										"sink": {
											"name": "UserID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['courseID']"
										},
										"sink": {
											"name": "CourseID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['assignmentStatus']"
										},
										"sink": {
											"name": "AssignmentStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['assignmentMandation']"
										},
										"sink": {
											"name": "AssignmentMandation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['startedDate']"
										},
										"sink": {
											"name": "StartedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['assessmentStatus']"
										},
										"sink": {
											"name": "AssessmentStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['completionDate']"
										},
										"sink": {
											"name": "CompletionDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['expiryDate']"
										},
										"sink": {
											"name": "ExpiryDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['assignedDate']"
										},
										"sink": {
											"name": "AssignedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['lastUpdatedDateTime']"
										},
										"sink": {
											"name": "APILastUpdatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['UpsertDateTime']"
										},
										"sink": {
											"name": "UpsertDateTime",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['usercourses']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_JSON_AllData",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "AllUser-CoursesData$20241002"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Broadshield",
									"Table": "UserCourses"
								}
							}
						]
					},
					{
						"name": "Set Upsert DateTime",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Upsert_UTCDateTime",
							"value": {
								"value": "@utcNow('yyyy-MM-dd hh:mm:ss')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Upsert_UTCDateTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-02T15:38:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_BroadShield_JSON_AllData')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_JSON_SQL_Current')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Updates the Broadshield tables that store the current status of the data from the API using files taken from previous Day",
				"activities": [
					{
						"name": "Users JSON data to Current table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Users Filename",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "UpsertDateTime",
										"value": {
											"value": "@variables('UpsertDateTime')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"UserID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['userID']"
										},
										"sink": {
											"name": "UserID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['forename']"
										},
										"sink": {
											"name": "Forename",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['surname']"
										},
										"sink": {
											"name": "Surname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['employeeNumber']"
										},
										"sink": {
											"name": "EmployeeNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['location']"
										},
										"sink": {
											"name": "UserLocation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['jobRole']"
										},
										"sink": {
											"name": "JobRole",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['status']"
										},
										"sink": {
											"name": "UserStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['createdDateTime']"
										},
										"sink": {
											"name": "CreatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['lastUpdatedDateTime']"
										},
										"sink": {
											"name": "APILastUpdatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['UpsertDateTime']"
										},
										"sink": {
											"name": "UpsertDateTime",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['users']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_JSON_PrevDay",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UsersFilename')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Broadshield",
									"Table": "Users"
								}
							}
						]
					},
					{
						"name": "Set Users Filename",
						"description": "Used to set the filename for the file we want to connect to in the dataset (Source)",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set UpsertDateTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UsersFilename",
							"value": {
								"value": "@concat('Users', '$', variables('YesterdayDate'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Courses JSON data to Current table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Courses Filename",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "UpsertDateTime",
										"value": {
											"value": "@variables('UpsertDateTime')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"CourseID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['courseID']"
										},
										"sink": {
											"name": "CourseID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['courseName']"
										},
										"sink": {
											"name": "CourseName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['courseCode']"
										},
										"sink": {
											"name": "CourseCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['courseMandation']"
										},
										"sink": {
											"name": "CourseMandation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['courseExpiry']"
										},
										"sink": {
											"name": "CourseExpiry",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['status']"
										},
										"sink": {
											"name": "CourseStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['createdDateTime']"
										},
										"sink": {
											"name": "CreatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['lastUpdatedDateTime']"
										},
										"sink": {
											"name": "APILastUpdatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['UpsertDateTime']"
										},
										"sink": {
											"name": "UpsertDateTime",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['courses']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_JSON_PrevDay",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('CoursesFilename')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Broadshield",
									"Table": "Course"
								}
							}
						]
					},
					{
						"name": "Set Courses Filename",
						"description": "Used to set the filename for the file we want to connect to in the dataset (Source)",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Users JSON data to Current table",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "CoursesFilename",
							"value": {
								"value": "@concat('Courses', '$', variables('YesterdayDate'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "UserCourses JSON data to Current table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set UserCourses Filename",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "UpsertDateTime",
										"value": {
											"value": "@variables('UpsertDateTime')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"AssignmentID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['assignmentID']"
										},
										"sink": {
											"name": "AssignmentID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['userID']"
										},
										"sink": {
											"name": "UserID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['courseID']"
										},
										"sink": {
											"name": "CourseID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['assignmentStatus']"
										},
										"sink": {
											"name": "AssignmentStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['assignmentMandation']"
										},
										"sink": {
											"name": "AssignmentMandation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['startedDate']"
										},
										"sink": {
											"name": "StartedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['assessmentStatus']"
										},
										"sink": {
											"name": "AssessmentStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['completionDate']"
										},
										"sink": {
											"name": "CompletionDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['expiryDate']"
										},
										"sink": {
											"name": "ExpiryDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['assignedDate']"
										},
										"sink": {
											"name": "AssignedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['lastUpdatedDateTime']"
										},
										"sink": {
											"name": "APILastUpdatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['UpsertDateTime']"
										},
										"sink": {
											"name": "UpsertDateTime",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['usercourses']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_JSON_PrevDay",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UserCourseFilename')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Broadshield",
									"Table": "UserCourses"
								}
							}
						]
					},
					{
						"name": "Set UserCourses Filename",
						"description": "Used to set the filename for the file we want to connect to in the dataset (Source)",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Courses JSON data to Current table",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UserCourseFilename",
							"value": {
								"value": "@concat('UserCourses', '$', variables('YesterdayDate'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Yesterday Date",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "YesterdayDate",
							"value": {
								"value": "@formatDateTime(subtractFromTime(utcNow(), 1, 'Day'), 'dd-MM-yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set UpsertDateTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Yesterday Date",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UpsertDateTime",
							"value": {
								"value": "@utcNow('yyyy-MM-dd hh:mm:ss')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"UsersFilename": {
						"type": "String"
					},
					"CoursesFilename": {
						"type": "String"
					},
					"UserCourseFilename": {
						"type": "String"
					},
					"YesterdayDate": {
						"type": "String"
					},
					"UpsertDateTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-03T09:24:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_BroadShield_JSON_PrevDay')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_JSON_SQL_History')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Updates the Broadshield tables that store the history and changes from the API using files taken from previous Days. Data from the json files is inserted into staging tables, then compared to the history tables. When there is a change the record is inserted into history table. This is done this way as future dates/records appear in the JSON files. These future records would be inserted every day, even if there was no change.",
				"activities": [
					{
						"name": "Users JSON data to Users Stage table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Users Filename",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "InsertDateTime",
										"value": {
											"value": "@variables('InsertDateTime')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['userID']"
										},
										"sink": {
											"name": "UserID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['forename']"
										},
										"sink": {
											"name": "Forename",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['surname']"
										},
										"sink": {
											"name": "Surname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['employeeNumber']"
										},
										"sink": {
											"name": "EmployeeNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['location']"
										},
										"sink": {
											"name": "UserLocation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['jobRole']"
										},
										"sink": {
											"name": "JobRole",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['status']"
										},
										"sink": {
											"name": "UserStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['createdDateTime']"
										},
										"sink": {
											"name": "CreatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['lastUpdatedDateTime']"
										},
										"sink": {
											"name": "APILastUpdatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['InsertDateTime']"
										},
										"sink": {
											"name": "InsertDateTime",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['users']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_JSON_PrevDay",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UsersFilename')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Broadshield",
									"Table": "StgUsers"
								}
							}
						]
					},
					{
						"name": "Set Users Filename",
						"description": "Used to set the filename for the file we want to connect to in the dataset (Source)",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set InsertDateTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UsersFilename",
							"value": {
								"value": "@concat('Users', '$', variables('YesterdayDate'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Courses JSON data to Courses Stage table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Courses Filename",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "InsertDateTime",
										"value": {
											"value": "@variables('InsertDateTime')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['courseID']"
										},
										"sink": {
											"name": "CourseID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['courseName']"
										},
										"sink": {
											"name": "CourseName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['courseCode']"
										},
										"sink": {
											"name": "CourseCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['courseMandation']"
										},
										"sink": {
											"name": "CourseMandation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['courseExpiry']"
										},
										"sink": {
											"name": "CourseExpiry",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['status']"
										},
										"sink": {
											"name": "CourseStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['createdDateTime']"
										},
										"sink": {
											"name": "CreatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['lastUpdatedDateTime']"
										},
										"sink": {
											"name": "APILastUpdatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['InsertDateTime']"
										},
										"sink": {
											"name": "InsertDateTime",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['courses']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_JSON_PrevDay",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('CoursesFilename')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Broadshield",
									"Table": "StgCourse"
								}
							}
						]
					},
					{
						"name": "Set Courses Filename",
						"description": "Used to set the filename for the file we want to connect to in the dataset (Source)",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Users JSON data to Users Stage table",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "CoursesFilename",
							"value": {
								"value": "@concat('Courses', '$', variables('YesterdayDate'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "UserCourses JSON data to UserCourse Stage table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set UserCourses Filename",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "InsertDateTime",
										"value": {
											"value": "@variables('InsertDateTime')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"AssignmentID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['assignmentID']"
										},
										"sink": {
											"name": "AssignmentID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['userID']"
										},
										"sink": {
											"name": "UserID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['courseID']"
										},
										"sink": {
											"name": "CourseID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['assignmentStatus']"
										},
										"sink": {
											"name": "AssignmentStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['assignmentMandation']"
										},
										"sink": {
											"name": "AssignmentMandation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['startedDate']"
										},
										"sink": {
											"name": "StartedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['assessmentStatus']"
										},
										"sink": {
											"name": "AssessmentStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['completionDate']"
										},
										"sink": {
											"name": "CompletionDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['expiryDate']"
										},
										"sink": {
											"name": "ExpiryDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['assignedDate']"
										},
										"sink": {
											"name": "AssignedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['lastUpdatedDateTime']"
										},
										"sink": {
											"name": "APILastUpdatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['InsertDateTime']"
										},
										"sink": {
											"name": "InsertDateTime",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['usercourses']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_JSON_PrevDay",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UserCourseFilename')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Broadshield",
									"Table": "StgUserCourses"
								}
							}
						]
					},
					{
						"name": "Set UserCourses Filename",
						"description": "Used to set the filename for the file we want to connect to in the dataset (Source)",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Courses JSON data to Courses Stage table",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UserCourseFilename",
							"value": {
								"value": "@concat('UserCourses', '$', variables('YesterdayDate'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Yesterday Date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Clear Stg Tables Pre",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "YesterdayDate",
							"value": {
								"value": "@formatDateTime(subtractFromTime(utcNow(), 1, 'Day'), 'dd-MM-yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set InsertDateTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Yesterday Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "InsertDateTime",
							"value": {
								"value": "@utcNow('yyyy-MM-dd hh:mm:ss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Clear Stg Tables Pre",
						"description": "Truncates the stage tables, resetting the Identity Column prior to staging to ensure tables are empty",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Broadshield].[ClearStgTables]"
						},
						"linkedServiceName": {
							"referenceName": "AH2_TRANSFORM_DB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Create History Records",
						"description": "Checks for any new records to be added to the history tables and any changes that need to be added. Records are inserted to keep a history",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "UserCourses JSON data to UserCourse Stage table",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Broadshield].[CreateHistoryRecords]"
						},
						"linkedServiceName": {
							"referenceName": "AH2_TRANSFORM_DB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Clear Stg Tables Post",
						"description": "Clear Stg tables post ",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Create History Records",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Broadshield].[ClearStgTables]"
						},
						"linkedServiceName": {
							"referenceName": "AH2_TRANSFORM_DB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"UsersFilename": {
						"type": "String"
					},
					"CoursesFilename": {
						"type": "String"
					},
					"UserCourseFilename": {
						"type": "String"
					},
					"YesterdayDate": {
						"type": "String"
					},
					"InsertDateTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-03T15:08:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_BroadShield_JSON_PrevDay')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]",
				"[concat(variables('factoryId'), '/linkedServices/AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_UAT_Courses')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download Coursesdata",
						"description": "Connects to Myrus API Courses end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Courses File Name",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_UAT_API",
								"type": "DatasetReference",
								"parameters": {
									"Date": {
										"value": "@variables('API_Date')",
										"type": "Expression"
									},
									"EndPoint": "courses"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UsersFileName')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set Courses File Name",
						"description": "Sets the name of the file to be used in the sink data set",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Date for API Call",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UsersFileName",
							"value": {
								"value": "@concat('Courses', '$', formatDateTime(utcNow(), 'dd-MM-yyyy'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Date for API Call",
						"description": "Sets the date to be 30 days prior to today",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "API_Date",
							"value": {
								"value": "@formatDateTime(subtractFromTime(utcNow(), 30, 'Day'), 'yyyyMMddHHmmss')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"UsersFileName": {
						"type": "String"
					},
					"API_Date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/UAT"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-26T09:59:30Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_BroadShield_UAT_API')]",
				"[concat(variables('factoryId'), '/datasets/DS_BroadShield_JSON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_UAT_DownloadAllData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download Coursesdata",
						"description": "Connects to Myrus API Courses end point and downloads data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_UAT_API_AllData",
								"type": "DatasetReference",
								"parameters": {
									"EndPoint": "courses"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "UAT_AllCourseData"
								}
							}
						]
					},
					{
						"name": "Download Users data",
						"description": "Connects to Myrus API user end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Download Coursesdata",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_UAT_API_AllData",
								"type": "DatasetReference",
								"parameters": {
									"EndPoint": "users"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "UAT_AllusersData"
								}
							}
						]
					},
					{
						"name": "Download User Course data",
						"description": "Connects to Myrus API user-course end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Download Users data",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_UAT_API_AllData",
								"type": "DatasetReference",
								"parameters": {
									"EndPoint": "user-courses"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "UAT_Alluser-coursesData"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Broadshield/UAT"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-26T09:42:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_BroadShield_UAT_API_AllData')]",
				"[concat(variables('factoryId'), '/datasets/DS_BroadShield_JSON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_UAT_UserCourses')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download User Course data",
						"description": "Connects to Myrus API user-course end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set User Courses File Name",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_UAT_API",
								"type": "DatasetReference",
								"parameters": {
									"Date": {
										"value": "@variables('API_Date')",
										"type": "Expression"
									},
									"EndPoint": "user-courses"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UsersFileName')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set User Courses File Name",
						"description": "Sets the name of the file to be used in the sink data set",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Date for API Call",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UsersFileName",
							"value": {
								"value": "@concat('UserCourses', '$', formatDateTime(utcNow(), 'dd-MM-yyyy'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Date for API Call",
						"description": "Sets the date to be 30 days prior to today",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "API_Date",
							"value": {
								"value": "@formatDateTime(subtractFromTime(utcNow(), 30, 'Day'), 'yyyyMMddHHmmss')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"UsersFileName": {
						"type": "String"
					},
					"API_Date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/UAT"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-26T09:59:30Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_BroadShield_UAT_API')]",
				"[concat(variables('factoryId'), '/datasets/DS_BroadShield_JSON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_UAT_Users')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download Users data",
						"description": "Connects to Myrus API user end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Users File Name",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_UAT_API",
								"type": "DatasetReference",
								"parameters": {
									"Date": {
										"value": "@variables('API_Date')",
										"type": "Expression"
									},
									"EndPoint": "users"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UsersFileName')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set Users File Name",
						"description": "Sets the name of the file to be used in the sink data set",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Date for API Call",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UsersFileName",
							"value": {
								"value": "@concat('Users', '$', formatDateTime(utcNow(), 'dd-MM-yyyy'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Date for API Call",
						"description": "Sets the date to be 30 days prior to today",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "API_Date",
							"value": {
								"value": "@formatDateTime(subtractFromTime(utcNow(), 30, 'Day'), 'yyyyMMddHHmmss')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"UsersFileName": {
						"type": "String"
					},
					"API_Date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/UAT"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-26T09:59:30Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_BroadShield_UAT_API')]",
				"[concat(variables('factoryId'), '/datasets/DS_BroadShield_JSON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_UserCourses')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download User Course data",
						"description": "Connects to Myrus API user-course end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set User Courses File Name",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:15:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_Live_API",
								"type": "DatasetReference",
								"parameters": {
									"Date": {
										"value": "@variables('API_Date')",
										"type": "Expression"
									},
									"Endpoint": "user-courses"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UsersFileName')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set User Courses File Name",
						"description": "Sets the name of the file to be used in the sink data set",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Date for API Call",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UsersFileName",
							"value": {
								"value": "@concat('UserCourses', '$', formatDateTime(utcNow(), 'dd-MM-yyyy'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Date for API Call",
						"description": "Sets the API query date to previous day at 11:59:59 to capture any changes made since",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "API_Date",
							"value": {
								"value": "@concat(formatDateTime(subtractFromTime(utcNow(), 1, 'Day'), 'yyyyMMdd'), '115959')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Download Failure",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Download User Course data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('Download User Course Data').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "Download User Course Data"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"UsersFileName": {
						"type": "String"
					},
					"API_Date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-03T15:30:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_BroadShield_Live_API')]",
				"[concat(variables('factoryId'), '/datasets/DS_BroadShield_JSON')]",
				"[concat(variables('factoryId'), '/pipelines/UT_Send_Email_Param')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_Users')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download Users data",
						"description": "Connects to Myrus API user end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Users File Name",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_Live_API",
								"type": "DatasetReference",
								"parameters": {
									"Date": {
										"value": "@variables('API_Date')",
										"type": "Expression"
									},
									"Endpoint": "users"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UsersFileName')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set Users File Name",
						"description": "Sets the name of the file to be used in the sink data set",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Date for API Call",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UsersFileName",
							"value": {
								"value": "@concat('Users', '$', formatDateTime(utcNow(), 'dd-MM-yyyy'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Date for API Call",
						"description": "Sets the API query date to previous day at 11:59:59 to capture any changes made since",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "API_Date",
							"value": {
								"value": "@concat(formatDateTime(subtractFromTime(utcNow(), 1, 'Day'), 'yyyyMMdd'), '115959')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Download Failure",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Download Users data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('Download Users Data').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "Download Users Data"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"UsersFileName": {
						"type": "String"
					},
					"API_Date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-03T15:30:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_BroadShield_Live_API')]",
				"[concat(variables('factoryId'), '/datasets/DS_BroadShield_JSON')]",
				"[concat(variables('factoryId'), '/pipelines/UT_Send_Email_Param')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Broadshield_Download_Data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Downloads data from Broadshields API each evening @ 11:45",
				"activities": [
					{
						"name": "Download Users",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_BroadShield_Users",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Download Courses",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Download Users",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_BroadShield_Courses",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Download UserCourses",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Download Courses",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_BroadShield_UserCourses",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Broadshield"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-03T15:41:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_BroadShield_Users')]",
				"[concat(variables('factoryId'), '/pipelines/PL_BroadShield_Courses')]",
				"[concat(variables('factoryId'), '/pipelines/PL_BroadShield_UserCourses')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Broadshield_Process_Data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Uses the daily Json files from Broadshield API to update the Current table with an Upsert operation. And add new/updated records to the History tables.",
				"activities": [
					{
						"name": "Update Current data",
						"description": "Upserts data from the JSON files to the current tables",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_BroadShield_JSON_SQL_Current",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Create History records",
						"description": "Inserts any new or updated records into the history tables.",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Update Current data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_BroadShield_JSON_SQL_History",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Broadshield"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-08T10:01:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_BroadShield_JSON_SQL_Current')]",
				"[concat(variables('factoryId'), '/pipelines/PL_BroadShield_JSON_SQL_History')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CH_Allocation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Transfers the allocation data from CH to Transform_DB",
				"activities": [
					{
						"name": "Copy Data to STG",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT\r\n\tAllocations.[AL_DET_REF]\r\n\t,Allocations.[AL_ACCOUNT] AS AccNo\r\n\t,Allocations.[AL_CREDATT] AS CreatedAt\r\n\t,Allocations.[AL_DATE] AS TransactionDate\r\n\t,Allocations.[AL_PAYDAY] AS DateAllocated\r\n\t,Allocations.[AL_PAYIND]\r\n\t,Allocations.[AL_POSTREF] AS POST_REF\r\n\t,Allocations.[AL_REF1] AS Reference1\r\n\t,Allocations.[AL_REF2] AS Reference2\r\n\t,Allocations.[AL_TYPE] \r\n\t,CASE \r\n\t\tWHEN Allocations.[AL_TYPE] = 'A' THEN 'Adjustment - System'\r\n\t\tWHEN Allocations.[AL_TYPE] = 'C' THEN 'Credit'\r\n\t\tWHEN Allocations.[AL_TYPE] = 'I' THEN 'Invoice'\r\n\t\tWHEN Allocations.[AL_TYPE] = 'J' THEN 'Adjustment - User'\r\n\t\tWHEN Allocations.[AL_TYPE] = 'R' THEN 'Receipt'\r\n\t\tWHEN Allocations.[AL_TYPE] = 'N' THEN 'Adjustment - System'\r\n\t\tELSE ''\r\n\tEND AS TransactionType\r\n\t,Allocations.[AL_VAL] AS AllocationValue\r\n\t,Allocations.[MEMO] AS AllocationMemo\r\nFROM \r\n\tInvAlloc AS Allocations WITH (NOLOCK)",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE ColdHarbour.STGAllocations",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AL_DET_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "AL_DET_REF",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "AccNo",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "AccNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedAt",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedAt",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "TransactionDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "TransactionDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "DateAllocated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateAllocated",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "AL_PAYIND",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "AL_PAYIND",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "POST_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "POST_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AL_TYPE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "AL_TYPE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Reference1",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "Reference1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Reference2",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "Reference2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TransactionType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TransactionType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AllocationValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 9,
											"precision": 19
										},
										"sink": {
											"name": "AllocationValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 9,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "AllocationMemo",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "AllocationMemo",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_IP",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "ColdHarbour",
									"Table": "STGAllocations"
								}
							}
						]
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Copy Data to STG",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					},
					{
						"name": "Upsert",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"AL_DET_REF"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AL_DET_REF",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "AL_DET_REF",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "AccNo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AccNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedAt",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedAt",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "TransactionDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "TransactionDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "DateAllocated",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "DateAllocated",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "AL_PAYIND",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AL_PAYIND",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "POST_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "POST_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Reference1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Reference1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Reference2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Reference2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AL_TYPE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AL_TYPE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TransactionType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TransactionType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AllocationValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 9,
											"precision": 19
										},
										"sink": {
											"name": "AllocationValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 9,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "AllocationMemo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AllocationMemo",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "ColdHarbour",
									"Table": "STGAllocations"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "ColdHarbour",
									"Table": "Allocations"
								}
							}
						]
					},
					{
						"name": "Clear STG table",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Upsert",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AH2_TRANSFORM_DB",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE ColdHarbour.STGAllocations"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Cold Harbour/Children Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_OnPrem_CH_IP')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]",
				"[concat(variables('factoryId'), '/linkedServices/AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CH_AnalysisCodes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UPSERT Analysis Codes",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT\t \r\n\tNominal_Code.AltAccount AS AnalysisCode, \r\n\tNominal_Code.Description AS AnalysisDescription, \r\n\tNominal_Code.Account\r\nFROM\t\t \r\n\tNominal_Code (NOLOCK) \r\nWHERE\t \r\n\tNominal_Code.RecType = 'Elephant' \r\n\tAND Nominal_Code.UseFlag <> 'X' \r\n\tAND Nominal_Code.AltAccount != ''\r\n\tAND (SiteFilter = 0 OR Noml_Ref IN (SELECT LinkKey FROM Site_Join (NOLOCK) WHERE upper(LinkTable) = 'NOMINAL_CODE' AND Site_Ref = 151)) ORDER BY Nominal_Code.Account",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"AnalysisCode"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AnalysisCode",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "AnalysisCode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AnalysisDescription",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "AnalysisDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Account",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "Account",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_IP",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "ColdHarbour",
									"Table": "AnalysisCodes"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Cold Harbour/Children Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_OnPrem_CH_IP')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CH_Billing_Profiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Extract Local Auth Profiles",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Clear LocalAuthProfiles Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT \r\n    Site.SiteId\r\n\t,Site.SiteName\r\n\t,Profiles.Pro_code AS profile_code\r\n    ,Profiles.Prodesc AS profile_description\r\n    ,Chsysdec.Description AS account_type\r\n    ,Profiles.Pro_ref\r\n    ,Profiles.Billdays AS bill_days_or_nights\r\n    ,Profiles.Billdeath AS bill_day_of_death\r\n    ,Profiles.Billdod AS bill_day_of_discharge\r\n    ,Profiles.Billdoa AS bill_day_of_admission\r\n    ,Profiles.Invprint\r\n    ,Profiles.Invdoc\r\n    ,Profiles.Soflag AS standing_order\r\n    ,Profiles.Noticeper AS notice_period\r\n    ,Profiles.Nperanal AS notice_period_analysis_code\r\n    ,Profiles.Npervatr AS notice_period_vat_code\r\n    ,Profiles.Defrate AS default_charge_rate\r\n    ,Profiles.Chgper AS charge_period\r\n    ,Profiles.Feesanal AS analysis_code\r\n    ,Profiles.Feesdesc AS fees_description\r\n    ,Profiles.FeesVatC AS vat_code\r\n    ,Profiles.BillAbs AS bill_while_temp_absent\r\n    ,Profiles.Autocredit AS automatic_credit\r\n    ,Profiles.PenBooks AS attach_pension_books\r\n    ,Profiles.UserMemo\r\n    ,Profiles.NoInvDec\r\n    ,Profiles.sg_BankAcc\r\n    ,Profiles.UseFlag\r\n    ,Profiles.OOSExtraContrib\r\n\r\nFROM \r\n\tProfiles (NOLOCK)\r\n\r\n    JOIN Chsysdec (NOLOCK) -- Lookup table for values?\r\n        ON Chsysdec.Decode_Ref = Profiles.FsType\r\n\r\n    JOIN Site (NOLOCK)\r\n        ON Site.Site_Ref IN (\r\n                                SELECT Site_Ref\r\n                                FROM Site_Join (NOLOCK)\r\n                                WHERE Site_Join.LinkKey = Profiles.Pro_Ref\r\n                                      AND upper(Site_Join.LinkTable) = 'PROFILES'\r\n                            )\r\n           OR Profiles.SiteFilter = 0\r\nWHERE \r\n\tProfiles.FSTYPE = 401 --Local Auth\r\n\t--AND Site.SITEID IN (\r\n\t--071,\r\n--072,\r\n--073,\r\n--074,\r\n--075,\r\n--078,\r\n--079,\r\n--086,\r\n--089,\r\n--088,\r\n--091,\r\n--092,\r\n--090,\r\n--095,\r\n--096,\r\n--097,\r\n--098,\r\n--099,\r\n--100,\r\n--101,\r\n--102,\r\n--103,\r\n--104,\r\n--105,\r\n--106,\r\n--107,\r\n--108,\r\n--109,\r\n--110,\r\n--111,\r\n--112,\r\n--113,\r\n--114,\r\n--115,\r\n--116,\r\n--117,\r\n--118,\r\n--119,\r\n--120,\r\n--121,\r\n--122,\r\n--123,\r\n--127,\r\n--128\r\n--)",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_IP",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "LocalAuthProfiles"
								}
							}
						]
					},
					{
						"name": "Export to CSV file",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Extract Local Auth Profiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \n    H.Home_Ref\n    --,P.SiteId\n    ,SiteName\n    ,profile_code\n    ,profile_description\n    ,account_type\n    ,Pro_ref\n    ,bill_days_or_nights\n    ,bill_day_of_death\n    ,bill_day_of_discharge\n    ,bill_day_of_admission\n    --,Invprint\n    --,Invdoc\n    ,standing_order\n    ,notice_period\n    ,notice_period_analysis_code\n    ,notice_period_vat_code\n    ,default_charge_rate\n    ,charge_period\n    ,analysis_code\n    ,fees_description\n    ,vat_code\n    ,bill_while_temp_absent\n    ,automatic_credit\n    ,attach_pension_books\n    --,UserMemo\n    --,NoInvDec\n    ,sg_BankAcc\n    --,UseFlag\n    --,OOSExtraContrib\nFROM \n    dbo.LocalAuthProfiles AS P\n\n    LEFT JOIN ColdHarbourHomeID AS H\n        ON H.SITEID = P.SiteId",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('LA Billing Profiles - ', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Clear LocalAuthProfiles Table",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AH2_YardiStage",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE dbo.LocalAuthProfiles"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Yardi/CHIP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_OnPrem_CH_IP')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_YardiStage')]",
				"[concat(variables('factoryId'), '/datasets/DS_Yardi_CSV')]",
				"[concat(variables('factoryId'), '/linkedServices/AH2_YardiStage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CH_DirectDebitData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Direct Debit to Stage",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT\n\tDIRECTD_DT.DDDT_REF,\n\tDirectD_Hd.DDHD_REF,\n\tFundSrc_Hd.AccNo,\n    Resident.Res_Code,\n\tDirectD_DT.INVOICE_NO AS InvoiceNo,\n    DirectD_Dt.DDTranType AS DDTypeID,\n\tCASE \n\t\tWHEN DirectD_Dt.DDTranType = 1 THEN 'New DD'\n\t\tWHEN DirectD_Dt.DDTranType = 17 THEN 'Standard DD'\n\t\tWHEN DirectD_Dt.DDTranType = 18 THEN 'Cancel DD'\n\t\tWHEN DirectD_Dt.DDTranType = 19 THEN 'Change of value'\n\t\tELSE ''\n\tEND AS DDTranType,\n    DirectD_Dt.Amount AS DDAmount,\n    isnull(DirectD_Dt.Due_Date, DirectD_Dt.Inv_Date) AS DueDate,\n    DirectD_Dt.Submitted AS SubmittedDate,\n    DirectD_Dt.Allocated AS AllocationStatus,\n    DirectD_Hd.BatchNo,\n\tS.SITEID\nFROM \n\tDirectD_Dt (NOLOCK)\n    \n    JOIN DirectD_Hd (NOLOCK)\n        ON DirectD_Hd.DDHd_Ref = DirectD_Dt.DDHd_Ref\n\n    JOIN FundSrc_Hd (NOLOCK)\n\t\tON FundSrc_Hd.FS_Ref = DirectD_Dt.FS_Ref\n\n\tJOIN Resident (NOLOCK)\n\t\tON Resident.Res_Ref = FundSrc_Hd.Res_Ref\n\t\t\n\tJOIN Site AS S(NOLOCK)\n        ON S.Site_Ref = DIRECTD_HD.Site_Ref   ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE ColdHarbour.STGDirectDebits",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DDDT_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DDDT_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DDHD_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DDHD_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AccNo",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "AccNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Res_Code",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "RES_CODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "InvoiceNo",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "InvoiceNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DDTypeID",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DDTypeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DDTranType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DDTranType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DDAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 9,
											"precision": 19
										},
										"sink": {
											"name": "DDAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 9,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "DueDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DueDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "SubmittedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "SubmittedDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "AllocationStatus",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "AllocationStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BatchNo",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BatchNo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SITEID",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "SITEID",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_IP",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "ColdHarbour",
									"Table": "STGDirectDebits"
								}
							}
						]
					},
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Direct Debit to Stage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\n    DD.[SITEID]\n    ,H.HOME_REF\n    ,H.HomeName\n    ,DD.DDDT_REF\n    ,DD.[DDHD_REF]\n    ,DD.[AccNo]\n    ,DD.[RES_CODE]\n    ,DD.[InvoiceNo]\n    ,DD.[DDTypeID]\n    ,DD.[DDTranType]\n    ,DD.[DDAmount]\n    ,DD.[DueDate]\n    ,DD.[SubmittedDate]\n    ,DD.[AllocationStatus]\n    ,DD.[BatchNo]\nFROM \n    ColdHarbour.STGDirectDebits AS DD\n\n    LEFT JOIN GRG.HOME AS H\n        ON H.SiteID = DD.SiteID",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"DDDT_REF"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "ColdHarbour",
									"Table": "DirectDebits"
								}
							}
						]
					},
					{
						"name": "Clear Stage Table",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AH2_TRANSFORM_DB",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE ColdHarbour.STGDirectDebits"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Cold Harbour/Children Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_OnPrem_CH_IP')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]",
				"[concat(variables('factoryId'), '/linkedServices/AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CH_PostedTransactions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copies the posted transactions from On Prem CH to Transform",
				"activities": [
					{
						"name": "Copy to Stage",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT \n\tInvPosting.POST_REF,\n\tSite.SiteId AS siteid,\n\tSite.SiteName as sitename, \n\tP.PRODESC AS AccProfile,\n\tCONCAT(RTRIM(CONTACT.FORENAMES), RTRIM(CONTACT.SURNAME)) AS FundSourceName,\n\tInvPosting.account_No AS AccNo, \n\tR.RES_CODE AS RES_CODE,\n\tInvPosting.CRE_DATET AS CreatedAt,\n\tInvPosting.DUE_DATE AS DueDate,\n\tInvPosting.INV_DATE AS TransactionDate,\n\tCASE \n\t\tWHEN InvPosting.Tran_Type = 'U' THEN 'Receipt - To account'\n\t\tWHEN InvPosting.Tran_Type = 'I' THEN 'Invoice'\n\t\tWHEN InvPosting.Tran_Type = 'C' THEN 'Credit'\n\t\tWHEN InvPosting.Tran_Type = 'J' THEN 'Adjustment'\n\t\tWHEN InvPosting.Tran_Type = 'R' THEN 'Receipt - To transaction'\n\t\tWHEN InvPosting.Tran_Type = 'N' THEN 'System Receipt'\n\t\tELSE ''\n\tEND AS TransactionType,\n\tInvPosting.Ref1 AS Reference1, \n\tInvPosting.Ref2 AS Reference2, \n\tInvPosting.Value AS TransactionValue, \n\tInvPosting.Balance AS TransactionBalance\n\t,INVPOSTING.TRAN_TYPE\n\t,INVPOSTING.AN_CODE1 AS AnalysisCode\n\t,INVPOSTING.USERCOMM AS UserComment\nFROM \n\tInvPosting WITH (NOLOCK)\n\t\n\tLEFT JOIN FUNDSRC_HD AS ACC WITH (NOLOCK)\n\t\tON ACC.ACCNO = InvPosting.ACCOUNT_NO\n\t\tAND ACC.ENDDATE IS NULL\n\n\tLEFT JOIN CONTACT_HD AS CONTACT WITH (NOLOCK) \n\t\tON CONTACT.CONTACT_REF = ACC.CNTA_DET_REF\n\n\tLEFT JOIN PROFILES AS P WITH (NOLOCK)\n\t\tON P.PRO_REF = ACC.PRO_REF\n\n\tLEFT JOIN RESIDENT AS R WITH (NOLOCK)\n\t\tON R.RES_REF = INVPOSTING.RES_REF\n\n\tLEFT JOIN Site WITH (NOLOCK)\n\t\tON Site.Site_Ref = InvPosting.Site_Ref",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE ColdHarbour.STGPostedTransactions",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "POST_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "POST_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "siteid",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "SiteID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "sitename",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "SiteName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccProfile",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "AccProfile",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FundSourceName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FundSourceName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccNo",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "AccNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RES_CODE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "RES_CODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedAt",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedAt",
											"type": "Date",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "DueDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DueDate",
											"type": "Date",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "TransactionDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "TransactionDate",
											"type": "Date",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "TransactionType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TransactionType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Reference1",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "Reference1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Reference2",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "Reference2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TransactionValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 9,
											"precision": 19
										},
										"sink": {
											"name": "TransactionValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 9,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "TransactionBalance",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 9,
											"precision": 19
										},
										"sink": {
											"name": "TransactionBalance",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 9,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "AnalysisCode",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "AnalysisCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserComment",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "UserComment",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_IP",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "ColdHarbour",
									"Table": "STGPostedTransactions"
								}
							}
						]
					},
					{
						"name": "Upsert to PostedTransactions",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\n    STGPostedTransactions.POST_REF\n    ,STGPostedTransactions.SiteID\n    ,HOME.HOME_REF\n    ,STGPostedTransactions.SiteName\n    ,STGPostedTransactions.AccProfile\n    ,STGPostedTransactions.FundSourceName\n    ,STGPostedTransactions.AccNo\n    ,STGPostedTransactions.RES_CODE\n    ,STGPostedTransactions.CreatedAt\n    ,STGPostedTransactions.DueDate\n    ,STGPostedTransactions.TransactionDate\n    ,STGPostedTransactions.TransactionType\n    ,STGPostedTransactions.Reference1\n    ,STGPostedTransactions.Reference2\n    ,STGPostedTransactions.TransactionValue\n    ,STGPostedTransactions.TransactionBalance\n    ,STGPostedTransactions.AnalysisCode\n    ,STGPostedTransactions.UserComment\nFROM \n    ColdHarbour.STGPostedTransactions\n\n    LEFT JOIN GRG.HOME\n        ON HOME.SiteID = STGPostedTransactions.SiteID",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"POST_REF"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "POST_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "POST_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SiteID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SiteID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SiteName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SiteName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccProfile",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AccProfile",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FundSourceName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FundSourceName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccNo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AccNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RES_CODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RES_CODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedAt",
											"type": "Date",
											"physicalType": "date"
										},
										"sink": {
											"name": "CreatedAt",
											"type": "Date",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "DueDate",
											"type": "Date",
											"physicalType": "date"
										},
										"sink": {
											"name": "DueDate",
											"type": "Date",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "TransactionDate",
											"type": "Date",
											"physicalType": "date"
										},
										"sink": {
											"name": "TransactionDate",
											"type": "Date",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "TransactionType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TransactionType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Reference1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Reference1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Reference2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Reference2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TransactionValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 9,
											"precision": 19
										},
										"sink": {
											"name": "TransactionValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 9,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "TransactionBalance",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 9,
											"precision": 19
										},
										"sink": {
											"name": "TransactionBalance",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 9,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "AnalysisCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AnalysisCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserComment",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserComment",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "ColdHarbour",
									"Table": "PostedTransactions"
								}
							}
						]
					},
					{
						"name": "Wait",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Copy to Stage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					},
					{
						"name": "Clear STG table",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Upsert to PostedTransactions",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AH2_TRANSFORM_DB",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE ColdHarbour.STGPostedTransactions"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Cold Harbour/Children Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_OnPrem_CH_IP')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]",
				"[concat(variables('factoryId'), '/linkedServices/AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CH_Residents')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Resident data from GRG",
				"activities": [
					{
						"name": "Copy Residents data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE ColdHarbour.Residents",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_GRG",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "Resident"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "ColdHarbour",
									"Table": "Residents"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Avery"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_OnPrem_CH_GRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_Avery')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CH_Snapshot')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Posted Transactions Snapshot",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set SnapshotDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "SnapShotDate",
										"value": {
											"value": "@variables('SnapshotDate')",
											"type": "Expression"
										}
									},
									{
										"name": "SnapShotTaken",
										"value": {
											"value": "@formatDateTime(utcNow(), 'yyyy-MM-dd HH:mm:ss')",
											"type": "Expression"
										}
									}
								],
								"sqlReaderQuery": {
									"value": "SELECT *\nFROM\n    ColdHarbour.PostedTransactions\nWHERE\n    TransactionDate <= '@{variables('SnapshotDate')}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SnapShotDate",
											"type": "String"
										},
										"sink": {
											"name": "SnapshotDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "SnapShotTaken",
											"type": "String"
										},
										"sink": {
											"name": "SnapShotTaken",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "POST_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "POST_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SiteID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SiteID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SiteName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SiteName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccProfile",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AccProfile",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FundSourceName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FundSourceName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AccNo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AccNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RES_CODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RES_CODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedAt",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "CreatedAt",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "DueDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "DueDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "TransactionDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "TransactionDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "TransactionType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TransactionType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Reference1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Reference1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Reference2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Reference2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TransactionValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 9,
											"precision": 19
										},
										"sink": {
											"name": "TransactionValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 9,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "TransactionBalance",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 9,
											"precision": 19
										},
										"sink": {
											"name": "TransactionBalance",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 9,
											"precision": 19
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "ColdHarbour",
									"Table": "PostedTransactionsSnapshot"
								}
							}
						]
					},
					{
						"name": "Set SnapshotDate",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "SnapshotDate",
							"value": {
								"value": "@formatDateTime(addDays(utcNow(), -1), 'yyyy-MM-dd')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"SnapshotDate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Cold Harbour/Children Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CH_TransactionData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Runs the pipelines to copy across posted transactions and Allocations",
				"activities": [
					{
						"name": "Posted Transactions",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_CH_PostedTransactions",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Allocations",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Posted Transactions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_CH_Allocation",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Direct Debits",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Allocations",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_CH_DirectDebitData",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Cold Harbour"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_CH_PostedTransactions')]",
				"[concat(variables('factoryId'), '/pipelines/PL_CH_Allocation')]",
				"[concat(variables('factoryId'), '/pipelines/PL_CH_DirectDebitData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CQC_CopyAPI_Responses')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copies the API responses from the file share",
				"activities": [
					{
						"name": "Copy merged location files",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@Concat('Merged_LocationAPIfile', '*', '.json')",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Fileshare",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CQC_locationresponses_file_Binary",
								"type": "DatasetReference",
								"parameters": {
									"FileType": "merged"
								}
							}
						]
					},
					{
						"name": "Copy Original location API files",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy merged location files",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@Concat('LocationAPIfile_', '*', '.json')",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Fileshare",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CQC_locationresponses_file_Binary",
								"type": "DatasetReference",
								"parameters": {
									"FileType": "original"
								}
							}
						]
					},
					{
						"name": "Remove json files from fileshare",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy Original provider API files",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_PolestarStorageAcc_Fileshare",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureFileStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "*.json",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Copy merged provider files",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Original location API files",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@Concat('Merged_ProviderAPIfile', '*', '.json')",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Fileshare",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CQC_providerresponses_file_Binary",
								"type": "DatasetReference",
								"parameters": {
									"FileType": "merged"
								}
							}
						]
					},
					{
						"name": "Copy Original provider API files",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy merged provider files",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@Concat('ProviderAPIfile_', '*', '.json')",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Fileshare",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CQC_providerresponses_file_Binary",
								"type": "DatasetReference",
								"parameters": {
									"FileType": "original"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "CQC/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PolestarStorageAcc_Fileshare')]",
				"[concat(variables('factoryId'), '/datasets/DS_CQC_locationresponses_file_Binary')]",
				"[concat(variables('factoryId'), '/datasets/DS_CQC_providerresponses_file_Binary')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CQC_Proces_API_Results')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Runs pipelines to copy files from file share, then process them into SQL tables.",
				"activities": [
					{
						"name": "Copy Files to Azure storage",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_CQC_CopyAPI_Responses",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Process Location Details",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Copy Files to Azure storage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_CQC_Upsert_Location",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Process Provider details",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Process Location Details",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_CQC_Upsert_Provider",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Update Home ratings",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Process Provider details",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_CQC_Upsert_HomeAssessment",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "CQC"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_CQC_CopyAPI_Responses')]",
				"[concat(variables('factoryId'), '/pipelines/PL_CQC_Upsert_Location')]",
				"[concat(variables('factoryId'), '/pipelines/PL_CQC_Upsert_Provider')]",
				"[concat(variables('factoryId'), '/pipelines/PL_CQC_Upsert_HomeAssessment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CQC_Required_Files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Create and copy files to the fileshare that the Python script uses.",
				"activities": [
					{
						"name": "Create-update Locations file",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT location_id AS LocationID, home_name AS HomeName FROM reports.cqc_rating ORDER BY 2 ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"filePattern": "arrayOfObjects"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CQC_HomeLocationList",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy json file to Fileshare",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Create-update Locations file",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureFileStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_CQC_HomeLocationList",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PolestaStorageAcc_Fileshare_Json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy custom Location schema to fileshare",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy json file to Fileshare",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureFileStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_CQC_CustomLocationJSONSchema",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PolestaStorageAcc_Fileshare_Json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Create-update Provider file",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy custom Location schema to fileshare",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT provider_id AS providerID FROM reports.cqc_rating ORDER BY 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"filePattern": "arrayOfObjects"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CQC_ProviderList",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy Provider file to fileshare",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Create-update Provider file",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureFileStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_CQC_ProviderList",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PolestaStorageAcc_Fileshare_Json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy Custom Provider schema to to fileshare",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Provider file to fileshare",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureFileStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_CQC_CustomProviderJSONSchema",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PolestaStorageAcc_Fileshare_Json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "CQC/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]",
				"[concat(variables('factoryId'), '/datasets/DS_CQC_HomeLocationList')]",
				"[concat(variables('factoryId'), '/datasets/DS_PolestaStorageAcc_Fileshare_Json')]",
				"[concat(variables('factoryId'), '/datasets/DS_CQC_CustomLocationJSONSchema')]",
				"[concat(variables('factoryId'), '/datasets/DS_CQC_ProviderList')]",
				"[concat(variables('factoryId'), '/datasets/DS_CQC_CustomProviderJSONSchema')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CQC_Upsert_HomeAssessment')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Using the location files to add assessment details.",
				"activities": [
					{
						"name": "Set DateTime",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "DateTime",
							"value": {
								"value": "@utcNow('yyyy-MM-dd hh:mm:ss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get File List",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Set DateTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_CQC_Merged_Location_File",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "For Each File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get File List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get File List').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Upsert to HomeCurretRating_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "SourceFileName",
													"value": {
														"value": "@item().Name",
														"type": "Expression"
													}
												},
												{
													"name": "RowTimeStamp",
													"value": {
														"value": "@variables('DateTime')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFileName": {
													"value": "@item().Name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "upsert",
											"upsertSettings": {
												"useTempDB": true,
												"keys": [
													"LocationID"
												]
											},
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['locationId']"
													},
													"sink": {
														"name": "LocationID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['providerId']"
													},
													"sink": {
														"name": "ProviderID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['name']"
													},
													"sink": {
														"name": "HomeName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['onspdLatitude']"
													},
													"sink": {
														"name": "Latitude",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "$['onspdLongitude']"
													},
													"sink": {
														"name": "Longitude",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "$['postalCode']"
													},
													"sink": {
														"name": "PostCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['numberOfBeds']"
													},
													"sink": {
														"name": "NumberOfBeds",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['localAuthority']"
													},
													"sink": {
														"name": "LocalAuthority",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['lastInspection']['date']"
													},
													"sink": {
														"name": "LastInspectionDate",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['lastReport']['publicationDate']"
													},
													"sink": {
														"name": "LastReportDate",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['currentRatings']['overall']['rating']"
													},
													"sink": {
														"name": "OverallRating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['currentRatings']['overall']['keyQuestionRatings'][0]['name']"
													},
													"sink": {
														"name": "KeyQuestion1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['currentRatings']['overall']['keyQuestionRatings'][0]['rating']"
													},
													"sink": {
														"name": "KeyQuestion1Rating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['currentRatings']['overall']['keyQuestionRatings'][1]['name']"
													},
													"sink": {
														"name": "KeyQuestion2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['currentRatings']['overall']['keyQuestionRatings'][1]['rating']"
													},
													"sink": {
														"name": "KeyQuestion2Rating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['currentRatings']['overall']['keyQuestionRatings'][2]['name']"
													},
													"sink": {
														"name": "KeyQuestion3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['currentRatings']['overall']['keyQuestionRatings'][2]['rating']"
													},
													"sink": {
														"name": "KeyQuestion3Rating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['currentRatings']['overall']['keyQuestionRatings'][3]['name']"
													},
													"sink": {
														"name": "KeyQuestion4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['currentRatings']['overall']['keyQuestionRatings'][3]['rating']"
													},
													"sink": {
														"name": "KeyQuestion4Rating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['currentRatings']['overall']['keyQuestionRatings'][4]['name']"
													},
													"sink": {
														"name": "KeyQuestion5",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['currentRatings']['overall']['keyQuestionRatings'][4]['rating']"
													},
													"sink": {
														"name": "KeyQuestion5Rating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['assessmentPlanPublishedDateTime']"
													},
													"sink": {
														"name": "AssessmentPublishedDate",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['assessmentPlanId']"
													},
													"sink": {
														"name": "AssesementPlanID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['title']"
													},
													"sink": {
														"name": "AssessmentTitle",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['assessmentDate']"
													},
													"sink": {
														"name": "AssessmentDate",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['rating']"
													},
													"sink": {
														"name": "AssessmentRating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['narrative']"
													},
													"sink": {
														"name": "AssessmentNarrative",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['keyQuestionRatings'][0]['name']"
													},
													"sink": {
														"name": "AssessmentKeyQuestion1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['keyQuestionRatings'][0]['rating']"
													},
													"sink": {
														"name": "AssessmentKeyQuestion1Rating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['keyQuestionRatings'][1]['name']"
													},
													"sink": {
														"name": "AssessmentKeyQuestion2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['keyQuestionRatings'][1]['rating']"
													},
													"sink": {
														"name": "AssessmentKeyQuestion2Rating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['keyQuestionRatings'][2]['name']"
													},
													"sink": {
														"name": "AssessmentKeyQuestion3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['keyQuestionRatings'][2]['rating']"
													},
													"sink": {
														"name": "AssessmentKeyQuestion3Rating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['keyQuestionRatings'][3]['name']"
													},
													"sink": {
														"name": "AssessmentKeyQuestion4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['keyQuestionRatings'][3]['rating']"
													},
													"sink": {
														"name": "AssessmentKeyQuestion4Rating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['keyQuestionRatings'][4]['name']"
													},
													"sink": {
														"name": "AssessmentKeyQuestion5",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['keyQuestionRatings'][4]['rating']"
													},
													"sink": {
														"name": "AssessmentKeyQuestion5Rating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['SourceFileName']"
													},
													"sink": {
														"name": "SourceFileName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['RowTimeStamp']"
													},
													"sink": {
														"name": "RowTimeStamp",
														"type": "DateTime"
													}
												}
											],
											"collectionReference": ""
										}
									},
									"inputs": [
										{
											"referenceName": "DS_CQC_Merged_Location_File",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_AH2_TRANSFORM_DB",
											"type": "DatasetReference",
											"parameters": {
												"Schema": "cqc",
												"Table": "HomeCurrentRating"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Post Upsert proc",
						"description": "Executes a procedure that tidies a few of the columns. Sets them to Null where blank",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "For Each File",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[cqc].[PostUpdate$HomeCurrentRating]"
						},
						"linkedServiceName": {
							"referenceName": "AH2_TRANSFORM_DB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"DateTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CQC/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_CQC_Merged_Location_File')]",
				"[concat(variables('factoryId'), '/linkedServices/AH2_TRANSFORM_DB')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CQC_Upsert_Location')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Using the location files to add location details.",
				"activities": [
					{
						"name": "Set DateTime",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "DateTime",
							"value": {
								"value": "@utcNow('yyyy-MM-dd hh:mm:ss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get File List",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Set DateTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_CQC_Merged_Location_File",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "For Each File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get File List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get File List').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Upsert to Location",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "SourceFileName",
													"value": {
														"value": "@item().Name",
														"type": "Expression"
													}
												},
												{
													"name": "RowTimeStamp",
													"value": {
														"value": "@variables('DateTime')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFileName": {
													"value": "@item().Name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "upsert",
											"upsertSettings": {
												"useTempDB": true,
												"keys": [
													"LocationID"
												]
											},
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['locationId']"
													},
													"sink": {
														"name": "LocationID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['providerId']"
													},
													"sink": {
														"name": "ProviderID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['name']"
													},
													"sink": {
														"name": "LocationName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['registrationStatus']"
													},
													"sink": {
														"name": "RegistrationStatus",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['registrationDate']"
													},
													"sink": {
														"name": "RegistrationDate",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['deregistrationDate']"
													},
													"sink": {
														"name": "DeregistrationDate",
														"type": "DateTime"
													}
												}
											],
											"collectionReference": ""
										}
									},
									"inputs": [
										{
											"referenceName": "DS_CQC_Merged_Location_File",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_AH2_TRANSFORM_DB",
											"type": "DatasetReference",
											"parameters": {
												"Schema": "cqc",
												"Table": "Location"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Post Upsert proc",
						"description": "Executes a procedure that tidies a few of the columns. Sets them to Null where blank",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "For Each File",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[cqc].[PostUpdate$HomeCurrentRating]"
						},
						"linkedServiceName": {
							"referenceName": "AH2_TRANSFORM_DB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"DateTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CQC/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_CQC_Merged_Location_File')]",
				"[concat(variables('factoryId'), '/linkedServices/AH2_TRANSFORM_DB')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CQC_Upsert_Provider')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set DateTime",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "DateTime",
							"value": {
								"value": "@utcNow('yyyy-MM-dd hh:mm:ss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get File List",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Set DateTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_CQC_Merged_Provider_File",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "For Each File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get File List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get File List').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Upsert to Provider Table",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFileName": {
													"value": "@item().Name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "upsert",
											"upsertSettings": {
												"useTempDB": true,
												"keys": [
													"ProviderID"
												]
											},
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['providerId']"
													},
													"sink": {
														"name": "ProviderID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['name']"
													},
													"sink": {
														"name": "ProviderName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['brandId']"
													},
													"sink": {
														"name": "BrandID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['brandName']"
													},
													"sink": {
														"name": "BrandName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['registrationStatus']"
													},
													"sink": {
														"name": "RegistrationStatus",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['registrationDate']"
													},
													"sink": {
														"name": "RegistrationDate",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['deregistrationDate']"
													},
													"sink": {
														"name": "DeregistrationDate",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['companiesHouseNumber']"
													},
													"sink": {
														"name": "CompaniesHouseNo",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['postalAddressLine1']"
													},
													"sink": {
														"name": "Address1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['postalAddressLine2']"
													},
													"sink": {
														"name": "Address2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['postalAddressTownCity']"
													},
													"sink": {
														"name": "City",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['postalAddressCounty']"
													},
													"sink": {
														"name": "County",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['postalCode']"
													},
													"sink": {
														"name": "Postcode",
														"type": "String"
													}
												}
											],
											"collectionReference": ""
										}
									},
									"inputs": [
										{
											"referenceName": "DS_CQC_Merged_Provider_File",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_AH2_TRANSFORM_DB",
											"type": "DatasetReference",
											"parameters": {
												"Schema": "cqc",
												"Table": "Provider"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"DateTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CQC/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_CQC_Merged_Provider_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CareBlox-Fileshare')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy care blox zip files to file share",
				"activities": [
					{
						"name": "Copy Zip files",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureFileStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_careblox_Binary",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Fileshare",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Careblox/Children Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-10T11:21:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PolestarStorageAcc_careblox_Binary')]",
				"[concat(variables('factoryId'), '/datasets/DS_PolestarStorageAcc_Fileshare')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CareBlox-SQL-upsert')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "UPSERT from Stage tables to final tables in SQL DB",
				"activities": [
					{
						"name": "tblRoles",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "tblTypes",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"RoleID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "RoleID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "RoleID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RoleName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "RoleName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Department",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "Department",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Code",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AvailableToGroup",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "AvailableToGroup",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZStorage_careblox_parquet_file",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "tblRoles$",
									"DateString": {
										"value": "@variables('DateString')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Careblox_Roles",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "tblTypes",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set DateString",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "TypeID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "TypeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TypeName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "TypeName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TypeDescription",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "TypeDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PayGroup",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "PayGroup",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StarCode",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "StarCode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "OffDutyGroup",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "OffDutyGroup",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "IsDefault",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "IsDefault",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "IsDefaultMultiplier",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "IsDefaultMultiplier",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CSLCode",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "CSLCode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "IsDefault2",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "IsDefault2",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "IsDefault3",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "IsDefault3",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Rosterable",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "Rosterable",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PayType",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "PayType",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "AvailableToGroup",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "AvailableToGroup",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZStorage_careblox_parquet_file",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "tblTypes$",
									"DateString": {
										"value": "@variables('DateString')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZStorage_careblox_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Upsert to TtblEmpJobs",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "tblRoles",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\n    stgtblEmpJobs.JobAutoId,\n    stgtblEmpJobs.EmployeeID,\n    stgtblEmpJobs.ContractedHours,\n    stgtblEmpJobs.Department,\n    stgtblEmpJobs.Role,\n    stgtblEmpJobs.JobNo,\n    DATEADD(s, StartDate, '1970-01-01 00:00:00') AS StartDate,\n    stgtblEmpJobs.Holidays,\n    stgtblEmpJobs.HolidayFull,\n    stgtblEmpJobs.SentToUnit,\n    stgtblEmpJobs.BreakRule,\n    stgtblEmpJobs.ContractID,\n    stgtblEmpJobs.Deleted,\n    DATEADD(s, StartDate, '1970-01-01 00:00:00') AS LastUpdate,\n    stgtblEmpJobs.WorkingArrangements,\n    stgtblEmpJobs.VHEnabled,\n    stgtblEmpJobs.VHBalance,\n    NULL AS VHBalanceDate,\n    stgtblEmpJobs.SicknessThreshold,\n    stgtblEmpJobs.SourceFileName\nFROM \n    CareBlox.STGtblEmpJobs",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"JobAutoID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "JobAutoId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "JobAutoID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ContractedHours",
											"type": "Single",
											"physicalType": "real"
										},
										"sink": {
											"name": "ContractedHours",
											"type": "Single",
											"physicalType": "real"
										}
									},
									{
										"source": {
											"name": "Department",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "Department",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "Role",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "Role",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "JobNo",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "JobNo",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "StartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "StartDate",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									},
									{
										"source": {
											"name": "Holidays",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Holidays",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "HolidayFull",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "HolidayFull",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "BreakRule",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "BreakRule",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "ContractID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ContractID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Deleted",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Deleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "LastUpdate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "LastUpdate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "WorkingArrangements",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkingArrangements",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "VHEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "VHEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "VHBalance",
											"type": "Single",
											"physicalType": "real"
										},
										"sink": {
											"name": "VHBalance",
											"type": "Single",
											"physicalType": "real"
										}
									},
									{
										"source": {
											"name": "SicknessThreshold",
											"type": "Single",
											"physicalType": "real"
										},
										"sink": {
											"name": "SicknessThreshold",
											"type": "Single",
											"physicalType": "real"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Query",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Careblox_EmpJobs",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Upsert to tblEmployees",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Upsert to TtblEmpJobs",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \n    EmployeeAutoID,\n    EmployeeID,\n    Title,\n    Forename,\n    Middlename,\n    Surname,\n    LocationID,\n    AddressLine1,\n    AddressLine2,\n    AddressLine3,\n    AddressLine4,\n    AddressLine5,\n    PostCode,\n    Country,\n    Telephone,\n    Mobile,\n    Email,\n    CASE \n        WHEN BirthDate < 0 THEN DATEADD(DAY, -(ABS(BirthDate) / 86400), '1970-01-01') --Convert EPOCH number to a positive with ABS(). Divide by 86400 seconds in a day. Subtract this from 1970-01-01\n        ELSE DATEADD(s, BirthDate, '1970-01-01 00:00:00') \n    END AS BirthDate,\n    CountryOfBirth,\n    YearOfEntry,\n    DATEADD(s, DateStarted, '1970-01-01 00:00:00') AS DateStarted,\n    DATEADD(s, LeavingDate, '1970-01-01 00:00:00') AS LeavingDate,\n    LeavingEnteredBy,\n    DATEADD(s, LeavingEnteredOn, '1970-01-01 00:00:00') AS LeavingEnteredOn,\n    Gender,\n    NINumber,\n    EthnicOrigin,\n    Religion,\n    Disability,\n    Nationality,\n    Dependants,\n    AccountNumber,\n    AccountName,\n    SortCode,\n    BankName,\n    BankBranch,\n    BuildingSocRef,\n    MaritalStatus,\n    PayMethod,\n    UploadAsNewStarter,\n    NeedsUploading,\n    HasLeft,\n    PackageID,\n    ImportPackageID,\n    ContractedHours,\n    DefaultPayRate,\n    LeavingReason,\n    LeavingDestination,\n    IncludeInNextPay,\n    OnSick,\n    Export,\n    SageID,\n    TATagID,\n    BankStaff,\n    PostCodeSearch,\n    WorkingTimeWaiver,\n    SentToUnit,\n    BatchID,\n    EmployeeType,\n    HolidayMonthStart,\n    CreatedByID,\n    CreatedByName,\n    DATEADD(s, CreatedDate, '1970-01-01 00:00:00') AS CreatedDate,\n    ShortDisplayName,\n    DisplayColour,\n    ApproverName,\n    ApproverID,\n    IsApprover,\n    TAApprover,\n    RosterUnitList,\n    PrimaryRosterUnit,\n    PortalEnabled,\n    PortalPassword,\n    NoticePeriod,\n    DATEADD(s, DataUpgradedDate, '1970-01-01 00:00:00') AS DataUpgradedDate,\n    DataUpgradedBy,\n    SourceFileName\n  FROM \n    CareBlox.STGtblEmployees",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"EmployeeAutoID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EmployeeAutoID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "EmployeeAutoID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Title",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Title",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Forename",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Forename",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Middlename",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Middlename",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Surname",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Surname",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AddressLine1",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AddressLine1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AddressLine2",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AddressLine2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AddressLine3",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AddressLine3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AddressLine4",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AddressLine4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AddressLine5",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AddressLine5",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PostCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PostCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Country",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Country",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Telephone",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Telephone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Mobile",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Mobile",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Email",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Email",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BirthDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "BirthDate",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									},
									{
										"source": {
											"name": "CountryOfBirth",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CountryOfBirth",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "YearOfEntry",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "YearOfEntry",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DateStarted",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateStarted",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									},
									{
										"source": {
											"name": "LeavingDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "LeavingDate",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									},
									{
										"source": {
											"name": "LeavingEnteredBy",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "LeavingEnteredBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LeavingEnteredOn",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "LeavingEnteredOn",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Gender",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NINumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "NINumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EthnicOrigin",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EthnicOrigin",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Religion",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Religion",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Disability",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Disability",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Nationality",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Nationality",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Dependants",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "Dependants",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccountName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AccountName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SortCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SortCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BankName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BankName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BankBranch",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BankBranch",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BuildingSocRef",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BuildingSocRef",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MaritalStatus",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MaritalStatus",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PayMethod",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PayMethod",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UploadAsNewStarter",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "UploadAsNewStarter",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "NeedsUploading",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "NeedsUploading",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "HasLeft",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "HasLeft",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PackageID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PackageID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ImportPackageID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ImportPackageID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ContractedHours",
											"type": "Single",
											"physicalType": "real"
										},
										"sink": {
											"name": "ContractedHours",
											"type": "Single",
											"physicalType": "real"
										}
									},
									{
										"source": {
											"name": "DefaultPayRate",
											"type": "Single",
											"physicalType": "real"
										},
										"sink": {
											"name": "DefaultPayRate",
											"type": "Single",
											"physicalType": "real"
										}
									},
									{
										"source": {
											"name": "LeavingReason",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LeavingReason",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LeavingDestination",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LeavingDestination",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IncludeInNextPay",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IncludeInNextPay",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "OnSick",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "OnSick",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "Export",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Export",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SageID",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "SageID",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "TATagID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TATagID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BankStaff",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "BankStaff",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PostCodeSearch",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PostCodeSearch",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkingTimeWaiver",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "WorkingTimeWaiver",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "BatchID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BatchID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmployeeType",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "EmployeeType",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "HolidayMonthStart",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "HolidayMonthStart",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreatedByID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CreatedByID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreatedByName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedByName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ShortDisplayName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ShortDisplayName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DisplayColour",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DisplayColour",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ApproverName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ApproverName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ApproverID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ApproverID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsApprover",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsApprover",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "TAApprover",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TAApprover",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RosterUnitList",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RosterUnitList",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PrimaryRosterUnit",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PrimaryRosterUnit",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PortalEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "PortalEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PortalPassword",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PortalPassword",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "NoticePeriod",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "NoticePeriod",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "DataUpgradedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DataUpgradedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DataUpgradedBy",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DataUpgradedBy",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Query",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Careblox_Employees",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Upsert to tblPayrollData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Upsert to tblEmployees",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\n    PayrollID,\n    EmployeeID,\n    EmployeeName,\n    LocationID,\n    RoleID,\n    Role,\n    TypeID,\n    Type,\n    Rate,\n    Units,\n    Comment,\n    DATEADD(s, EnteredDate, '1970-01-01 00:00:00') AS EnteredDate,\n    EnteredBy,\n    EnteredByName,\n    PeriodNo,\n    HasVariance,\n    MonthSplit,\n    Comitted,\n    DATEADD(s, ApprovedDate, '1970-01-01 00:00:00') AS ApprovedDate,\n    ApprovedBy,\n    ApprovedByName,\n    ImportedFromTA,\n    WorkedLocationID,\n    BatchID,\n    DATEADD(s, ItemDate, '1970-01-01 00:00:00') AS ItemDate,\n    SourceFileName\nFROM \n    CareBlox.STGtblPayrollData",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"PayrollID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "PayrollID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PayrollID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EmployeeName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EmployeeName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RoleID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RoleID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Role",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Role",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TypeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TypeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Rate",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "Rate",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "Units",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Units",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Comment",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Comment",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EnteredDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "EnteredDate",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									},
									{
										"source": {
											"name": "EnteredBy",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EnteredBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EnteredByName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EnteredByName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PeriodNo",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PeriodNo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "HasVariance",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "HasVariance",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "MonthSplit",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MonthSplit",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Comitted",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Comitted",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ApprovedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ApprovedDate",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									},
									{
										"source": {
											"name": "ApprovedBy",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ApprovedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ApprovedByName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ApprovedByName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ImportedFromTA",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "ImportedFromTA",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "WorkedLocationID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkedLocationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BatchID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BatchID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ItemDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ItemDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Query",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Careblox_Payroll",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "tblPeriods",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Upsert to tblPayrollData",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \n    PeriodID,\n    CurrentPeriodNum,\n    DATEADD(s, DateCreated, '1970-01-01 00:00:00') AS DateCreated,\n    LocationID,\n    DateRange,\n    GeneratedPayroll,\n    CONCAT(SUBSTRING(DateRange, 7, 4), '-', SUBSTRING(DateRange, 4, 2), '-', SUBSTRING(DateRange, 1, 2)) AS FromDate,\n    CONCAT(SUBSTRING(DateRange, 20, 4), '-', SUBSTRING(DateRange, 17, 2), '-', SUBSTRING(DateRange, 14, 2)) AS ToDate,\n    SourceFileName\nFROM \n    CareBlox.STGtblPeriods\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"PeriodID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "PeriodID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PeriodID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CurrentPeriodNum",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CurrentPeriodNum",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DateCreated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateCreated",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									},
									{
										"source": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DateRange",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DateRange",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "GeneratedPayroll",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "GeneratedPayroll",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "FromDate",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FromDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "ToDate",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ToDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Query",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Careblox_Periods",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "tblRates",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "tblPeriods",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \n    RatesAutoID,\n    EmployeeID,\n    RoleID,\n    TypeID,\n    Rate,\n    IsDefault,\n    SentToUnit,\n    Deleted,\n    DATEADD(s, LastUpdate, '1970-01-01 00:00:00') AS LastUpdate,\n    SourceFileName\nFROM \n    CareBlox.STGtblRates",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"RatesAutoID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "RatesAutoID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RatesAutoID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RoleID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RoleID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TypeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TypeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Rate",
											"type": "Decimal",
											"physicalType": "smallmoney",
											"scale": 4,
											"precision": 10
										},
										"sink": {
											"name": "Rate",
											"type": "Decimal",
											"physicalType": "smallmoney",
											"scale": 4,
											"precision": 10
										}
									},
									{
										"source": {
											"name": "IsDefault",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsDefault",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Deleted",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Deleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "LastUpdate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "LastUpdate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Query",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Careblox_Rates",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "tblShifts",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "tblRates",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \n    ShiftID,\n    HomeID,\n    EmployeeID,\n    RoleID,\n    DATEADD(s, ShiftStart, '1970-01-01 00:00:00') AS ShiftStart,\n    DATEADD(s, ShiftEnd, '1970-01-01 00:00:00') AS ShiftEnd,\n    PayRate,\n    Department,\n    Type,\n    SentToUnit,\n    Deleted,\n    RosterUnitID,\n    CreatedBy,\n    DATEADD(s, CreatedDate, '1970-01-01 00:00:00') AS CreatedDate,\n    DeletedBy,\n    DATEADD(s, DeletedDate, '1970-01-01 00:00:00') AS DeletedDate,\n    ITG_SourceID,\n    ITG_SourceName,\n    ITG_Status,\n    RosterType,\n    SourceFileName\nFROM \n    CareBlox.STGtblShifts",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ShiftID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ShiftID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ShiftID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "HomeID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RoleID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RoleID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ShiftStart",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ShiftStart",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ShiftEnd",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ShiftEnd",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "PayRate",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PayRate",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Department",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Department",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Deleted",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Deleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "RosterUnitID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RosterUnitID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DeletedBy",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DeletedBy",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DeletedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DeletedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ITG_SourceID",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "ITG_SourceID",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "ITG_SourceName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ITG_SourceName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ITG_Status",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "ITG_Status",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "RosterType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RosterType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Query",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Careblox_Shifts",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "tblTAData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "tblShifts",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\n    LocalID,\n    TAID,\n    EmployeeID,\n    HomeID,\n    RoleID,\n    ShiftID,\n    TAStatus,\n    DATEADD(s, TADateIn, '1970-01-01 00:00:00') AS TADateIn,\n    DATEADD(s, ActualDateIn, '1970-01-01 00:00:00') AS ActualDateIn,\n    DATEADD(s, ConfirmedDateIn, '1970-01-01 00:00:00') AS ConfirmedDateIn,\n    EarlyInFlag,\n    EarlyInComment,\n    LateInFlag,\n    LateInComment,\n    DATEADD(s, TADateOut, '1970-01-01 00:00:00') AS TADateOut,\n    DATEADD(s, ActualDateOut, '1970-01-01 00:00:00') AS ActualDateOut,\n    DATEADD(s, ConfirmedDateOut, '1970-01-01 00:00:00') AS ConfirmedDateOut,\n    EarlyOutFlag,\n    EarlyOutComment,\n    LateOutFlag,\n    LateOutComment,\n    ManagerApprovalRequiredIn,\n    ManagerApprovalRequiredOut,\n    RecordedMinutes,\n    TATagID,\n    ImageFilename,\n    Imported,\n    SrcUnit,\n    ExternalWorkerName,\n    SourceFileName\nFROM \n    CareBlox.STGtblTAData",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"LocalID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "LocalID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LocalID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TAID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TAID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HomeID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RoleID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RoleID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ShiftID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ShiftID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TAStatus",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TAStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TADateIn",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "TADateIn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ActualDateIn",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ActualDateIn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ConfirmedDateIn",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ConfirmedDateIn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "EarlyInFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "EarlyInFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "EarlyInComment",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EarlyInComment",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LateInFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "LateInFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "LateInComment",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LateInComment",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TADateOut",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "TADateOut",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ActualDateOut",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ActualDateOut",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ConfirmedDateOut",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ConfirmedDateOut",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "EarlyOutFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "EarlyOutFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "EarlyOutComment",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EarlyOutComment",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LateOutFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "LateOutFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "LateOutComment",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LateOutComment",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ManagerApprovalRequiredIn",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "ManagerApprovalRequiredIn",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "ManagerApprovalRequiredOut",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "ManagerApprovalRequiredOut",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "RecordedMinutes",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "RecordedMinutes",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "TATagID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TATagID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ImageFilename",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ImageFilename",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Imported",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Imported",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "SrcUnit",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SrcUnit",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ExternalWorkerName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ExternalWorkerName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Query",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Careblox_TAData",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Set DateString",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "DateString",
							"value": {
								"value": "@utcNow('dd-MM-yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Upsert to TtblEmpJobs Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Upsert to TtblEmpJobs",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('Upsert to TtblEmpJobs').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "Upsert to TtblEmpJobs"
							}
						}
					},
					{
						"name": "tblTypes Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "tblTypes",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('tblTypes').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "tblTypes"
							}
						}
					},
					{
						"name": "tblRoles Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "tblRoles",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('tblRoles').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "tblRoles"
							}
						}
					},
					{
						"name": "Upsert to tblEmployees Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Upsert to tblEmployees",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('Upsert to tblEmployees').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "Upsert to tblEmployees"
							}
						}
					},
					{
						"name": "Upsert to tblPayrollData Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Upsert to tblPayrollData",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('Upsert to tblPayrollData').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "Upsert to tblPayrollData"
							}
						}
					},
					{
						"name": "tblPeriods Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "tblPeriods",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('tblPeriods').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "tblPeriods"
							}
						}
					},
					{
						"name": "tblRates Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "tblRates",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('tblRates').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "tblRates"
							}
						}
					},
					{
						"name": "tblShifts Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "tblShifts",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('tblShifts').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "tblShifts"
							}
						}
					},
					{
						"name": "tblTAData Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "tblTAData",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('tblTAData').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "tblTAData"
							}
						}
					},
					{
						"name": "tblCalender",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "tblTAData",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\n    UniqueID\n    ,EmployeeID\n    ,DATEADD(SECOND, StartDate % 86400, DATEADD(DAY, StartDate / 86400, '1970-01-01 00:00:00')) AS StartDate\n    ,EmployeeName\n    ,DATEADD(SECOND, EndDate % 86400, DATEADD(DAY, EndDate / 86400, '1970-01-01 00:00:00')) AS EndDate\n    ,Status\n    ,LocationID\n    ,StartDetails\n    ,EndDetails\n    ,DATEADD(SECOND, EnteredOn % 86400, DATEADD(DAY, EnteredOn / 86400, '1970-01-01 00:00:00')) AS EnteredOn\n    ,DATEADD(SECOND, UpdatedOn % 86400, DATEADD(DAY, UpdatedOn / 86400, '1970-01-01 00:00:00')) AS UpdatedOn\n    ,EnteredBy\n    ,UpdatedBy\n    ,Export\n    ,ShowAlert\n    ,Department\n    ,RosterID\n    ,Role\n    ,DaysTaken\n    ,EnteredByID\n    ,BatchId\n    ,AbsenceCode\n    ,AbsenceCategory\n    ,BradfordFactorInclude\n    ,Reviewed\n    ,UpdatedByID\n    ,UpdateType\n    ,DATEADD(SECOND, ExpectedEndDate % 86400, DATEADD(DAY, ExpectedEndDate / 86400, '1970-01-01 00:00:00')) AS ExpectedEndDate\n    ,ActivityID\n    ,ActivityLocationID\n    ,SentToUnit\n    ,SourceFileName\nFROM \n    CareBlox.STGtblCalender",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"UniqueID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "UniqueID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "UniqueID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StartDate",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										},
										"sink": {
											"name": "StartDate",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									},
									{
										"source": {
											"name": "EmployeeName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EmployeeName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EndDate",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										},
										"sink": {
											"name": "EndDate",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StartDetails",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "StartDetails",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EndDetails",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EndDetails",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EnteredOn",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										},
										"sink": {
											"name": "EnteredOn",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									},
									{
										"source": {
											"name": "UpdatedOn",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										},
										"sink": {
											"name": "UpdatedOn",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									},
									{
										"source": {
											"name": "EnteredBy",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EnteredBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UpdatedBy",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UpdatedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Export",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Export",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ShowAlert",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ShowAlert",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Department",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Department",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RosterID",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "RosterID",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "Role",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Role",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DaysTaken",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "DaysTaken",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "EnteredByID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "EnteredByID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BatchId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BatchId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AbsenceCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AbsenceCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AbsenceCategory",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AbsenceCategory",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BradfordFactorInclude",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "BradfordFactorInclude",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Reviewed",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Reviewed",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "UpdatedByID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "UpdatedByID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "UpdateType",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "UpdateType",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "ExpectedEndDate",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										},
										"sink": {
											"name": "ExpectedEndDate",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									},
									{
										"source": {
											"name": "ActivityID",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "ActivityID",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "ActivityLocationID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ActivityLocationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Query",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Careblox_Calender",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "tblCalender Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "tblCalender",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('tblCalender').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "tblCalender"
							}
						}
					},
					{
						"name": "tblAbsenceCodes",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "tblCalender",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"AbsenceCode"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AbsenceID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "AbsenceID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AbsenceCode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AbsenceCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AbsenceCode2",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AbsenceCode2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AbsenceGroupDescription",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AbsenceGroupDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AbsenceGroupCode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AbsenceGroupCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AbsenceDescription",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AbsenceDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AbsenceListOrder",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "AbsenceListOrder",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "UseBradfordFactor",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "UseBradfordFactor",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PayTypeNameStub",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "PayTypeNameStub",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ExportToPayroll",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "ExportToPayroll",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Active",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "Active",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PayTypeNameStubSalary",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "PayTypeNameStubSalary",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZStorage_careblox_parquet_file",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "tblAbsenceCodes$",
									"DateString": {
										"value": "@variables('DateString')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Careblox_AbsenceCodes",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "tblAbsenceCodes Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "tblAbsenceCodes",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('tblAbsenceCodes').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "tblAbsenceCodes"
							}
						}
					},
					{
						"name": "tblTypes Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "tblTypes Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "tblTypes Error",
							"errorCode": "101"
						}
					},
					{
						"name": "tblRoles Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "tblRoles Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "tblRoles Error",
							"errorCode": "tblRoles Error101"
						}
					},
					{
						"name": "Upsert to TtblEmpJobs Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "Upsert to TtblEmpJobs Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "Upsert to TtblEmpJobs Error",
							"errorCode": "101"
						}
					},
					{
						"name": "Upsert to tblEmployees Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "Upsert to tblEmployees Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "Upsert to tblEmployees Error",
							"errorCode": "101"
						}
					},
					{
						"name": "Upsert to tblPayrollData Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "Upsert to tblPayrollData Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "Upsert to tblPayrollData Error",
							"errorCode": "101"
						}
					},
					{
						"name": "FtblPeriods Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "tblPeriods Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "tblPeriods Error",
							"errorCode": "101"
						}
					},
					{
						"name": "tblRates Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "tblRates Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "tblRates Error",
							"errorCode": "101"
						}
					},
					{
						"name": "tblShifts Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "tblShifts Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "tblShifts Error",
							"errorCode": "101"
						}
					},
					{
						"name": "tblTAData Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "tblTAData Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "tblTAData Error",
							"errorCode": "101"
						}
					},
					{
						"name": "tblCalender Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "tblCalender Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "tblCalender Error",
							"errorCode": "101"
						}
					},
					{
						"name": "tblAbsenceCodes Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "tblAbsenceCodes Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "tblAbsenceCodes Error",
							"errorCode": "101"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"DateString": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Careblox/Children Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-02T09:32:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZStorage_careblox_parquet_file')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB_Careblox_Roles')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZStorage_careblox_parquet')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB_Query')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB_Careblox_EmpJobs')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB_Careblox_Employees')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB_Careblox_Payroll')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB_Careblox_Periods')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB_Careblox_Rates')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB_Careblox_Shifts')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB_Careblox_TAData')]",
				"[concat(variables('factoryId'), '/pipelines/UT_Send_Email_Param')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB_Careblox_Calender')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB_Careblox_AbsenceCodes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CareBlox-bak-Files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Downloads .bak files from the CareBlox FTP",
				"activities": [
					{
						"name": "Download FTP Files",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set FileName Wildcard",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.00:15:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FtpReadSettings",
									"recursive": false,
									"wildcardFileName": {
										"value": "@variables('FileName')",
										"type": "Expression"
									},
									"useBinaryTransfer": true,
									"deleteFilesAfterCompletion": false,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"blockSizeInMB": 50
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_CareBlox_FTP_Files",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_careblox_Binary",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Set Todays Date",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Today",
							"value": {
								"value": "@formatDateTime(utcNow(), 'yyyy_M_d')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set FileName Wildcard",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Todays Date",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "FileName",
							"value": {
								"value": "@concat('AveryCare*lox*_',variables('Today'), '_*.zip')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"FileName": {
						"type": "String"
					},
					"Today": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Careblox/Children Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-10T11:21:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_CareBlox_FTP_Files')]",
				"[concat(variables('factoryId'), '/datasets/DS_PolestarStorageAcc_careblox_Binary')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CareBlox-parquet-copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copies Parquet files from file share to azure blob storage. Then deletes the files on the file share.",
				"activities": [
					{
						"name": "Copy Careblox Parquet files",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.parquet",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Fileshare_Parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZStorage_careblox_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy Careblox Parquet files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_PolestarStorageAcc_Fileshare_Parquet",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureFileStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "*.parquet",
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Careblox/Children Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-26T11:05:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PolestarStorageAcc_Fileshare_Parquet')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZStorage_careblox_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CareBlox-parquet-load-STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Load data from the parquet files to the stage (STG) tables in SQL TRANSFORM DB",
				"activities": [
					{
						"name": "STGtblEmpJobs",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set DateString",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "JobAutoID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "JobAutoID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ContractedHours",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "ContractedHours",
											"type": "Single",
											"physicalType": "real"
										}
									},
									{
										"source": {
											"name": "Department",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "Department",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "Role",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "Role",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "JobNo",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "JobNo",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "StartDate",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "StartDate",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Holidays",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "Holidays",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "HolidayFull",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "HolidayFull",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "BreakRule",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "BreakRule",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "ContractID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "ContractID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Deleted",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "Deleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "LastUpdate",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "LastUpdate",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "WorkingArrangements",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "WorkingArrangements",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "VHEnabled",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "VHEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "VHBalance",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "VHBalance",
											"type": "Single",
											"physicalType": "real"
										}
									},
									{
										"source": {
											"name": "VHBalanceDate",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "VHBalanceDate",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SicknessThreshold",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "SicknessThreshold",
											"type": "Single",
											"physicalType": "real"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZStorage_careblox_parquet_file",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "tblEmpJobs$",
									"DateString": {
										"value": "@variables('DateString')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_CareBlox_stg",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "stgtblEmpJobs"
								}
							}
						]
					},
					{
						"name": "STGtblEmployees",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STGtblEmpJobs",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EmployeeAutoID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "EmployeeAutoID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Title",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Title",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Forename",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Forename",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Middlename",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Middlename",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Surname",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Surname",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AddressLine1",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AddressLine1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AddressLine2",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AddressLine2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AddressLine3",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AddressLine3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AddressLine4",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AddressLine4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AddressLine5",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AddressLine5",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PostCode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "PostCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Country",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Country",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Telephone",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Telephone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Mobile",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Mobile",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Email",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Email",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BirthDate",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "BirthDate",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CountryOfBirth",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CountryOfBirth",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "YearOfEntry",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "YearOfEntry",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DateStarted",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "DateStarted",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LeavingDate",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "LeavingDate",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LeavingEnteredBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "LeavingEnteredBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LeavingEnteredOn",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "LeavingEnteredOn",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Gender",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NINumber",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "NINumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EthnicOrigin",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EthnicOrigin",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Religion",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Religion",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Disability",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Disability",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Nationality",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Nationality",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Dependants",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "Dependants",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccountName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AccountName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SortCode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SortCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BankName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "BankName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BankBranch",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "BankBranch",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BuildingSocRef",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "BuildingSocRef",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MaritalStatus",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "MaritalStatus",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PayMethod",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "PayMethod",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UploadAsNewStarter",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "UploadAsNewStarter",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "NeedsUploading",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "NeedsUploading",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "HasLeft",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "HasLeft",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PackageID",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "PackageID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ImportPackageID",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "ImportPackageID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ContractedHours",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "ContractedHours",
											"type": "Single",
											"physicalType": "real"
										}
									},
									{
										"source": {
											"name": "DefaultPayRate",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "DefaultPayRate",
											"type": "Single",
											"physicalType": "real"
										}
									},
									{
										"source": {
											"name": "LeavingReason",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "LeavingReason",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LeavingDestination",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "LeavingDestination",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IncludeInNextPay",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "IncludeInNextPay",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "OnSick",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "OnSick",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "Export",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "Export",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SageID",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "SageID",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "TATagID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "TATagID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BankStaff",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "BankStaff",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PostCodeSearch",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "PostCodeSearch",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkingTimeWaiver",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "WorkingTimeWaiver",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "BatchID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "BatchID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmployeeType",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "EmployeeType",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "HolidayMonthStart",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "HolidayMonthStart",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreatedByID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "CreatedByID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreatedByName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedByName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ShortDisplayName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ShortDisplayName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DisplayColour",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "DisplayColour",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ApproverName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ApproverName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ApproverID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ApproverID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsApprover",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "IsApprover",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "TAApprover",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "TAApprover",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RosterUnitList",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "RosterUnitList",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PrimaryRosterUnit",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "PrimaryRosterUnit",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PortalEnabled",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "PortalEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PortalPassword",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "PortalPassword",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "NoticePeriod",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "NoticePeriod",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "DataUpgradedDate",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "DataUpgradedDate",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DataUpgradedBy",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "DataUpgradedBy",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZStorage_careblox_parquet_file",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "tblEmployees$",
									"DateString": {
										"value": "@variables('DateString')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_CareBlox_stg",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "STGtblEmployees"
								}
							}
						]
					},
					{
						"name": "STGtblPayrollData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STGtblEmployees",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "PayrollID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "PayrollID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EmployeeName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EmployeeName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RoleID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "RoleID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Role",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Role",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TypeID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "TypeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Rate",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "Rate",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "Units",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "Units",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Comment",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Comment",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EnteredDate",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "EnteredDate",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "EnteredBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EnteredBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EnteredByName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EnteredByName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PeriodNo",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "PeriodNo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "HasVariance",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "HasVariance",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "MonthSplit",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "MonthSplit",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Comitted",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "Comitted",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ApprovedDate",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "ApprovedDate",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "ApprovedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ApprovedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ApprovedByName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ApprovedByName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ImportedFromTA",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "ImportedFromTA",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "WorkedLocationID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "WorkedLocationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BatchID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "BatchID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ItemDate",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "ItemDate",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZStorage_careblox_parquet_file",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "tblPayrollData$",
									"DateString": {
										"value": "@variables('DateString')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_CareBlox_stg",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "STGtblPayrollData"
								}
							}
						]
					},
					{
						"name": "STGtblPeriods",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STGtblPayrollData",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "PeriodID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "PeriodID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CurrentPeriodNum",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "CurrentPeriodNum",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DateCreated",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "DateCreated",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DateRange",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "DateRange",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "GeneratedPayroll",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "GeneratedPayroll",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZStorage_careblox_parquet_file",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "tblPeriods$",
									"DateString": {
										"value": "@variables('DateString')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_CareBlox_stg",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "STGtblPeriods"
								}
							}
						]
					},
					{
						"name": "STGtblRates",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STGtblPeriods",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "RatesAutoID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "RatesAutoID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RoleID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "RoleID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TypeID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "TypeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Rate",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "Rate",
											"type": "Decimal",
											"physicalType": "smallmoney",
											"scale": 4,
											"precision": 10
										}
									},
									{
										"source": {
											"name": "IsDefault",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "IsDefault",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Deleted",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "Deleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "LastUpdate",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "LastUpdate",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZStorage_careblox_parquet_file",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "tblRates$",
									"DateString": {
										"value": "@variables('DateString')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_CareBlox_stg",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "STGtblRates"
								}
							}
						]
					},
					{
						"name": "STGtblShifts",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STGtblRates",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ShiftID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "ShiftID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "HomeID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "HomeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RoleID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "RoleID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ShiftStart",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "ShiftStart",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "ShiftEnd",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "ShiftEnd",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "PayRate",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "PayRate",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Department",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "Department",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Deleted",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "Deleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "RosterUnitID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "RosterUnitID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "DeletedBy",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "DeletedBy",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DeletedDate",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "DeletedDate",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "ITG_SourceID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "ITG_SourceID",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "ITG_SourceName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ITG_SourceName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ITG_Status",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "ITG_Status",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "RosterType",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "RosterType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZStorage_careblox_parquet_file",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "tblShifts$",
									"DateString": {
										"value": "@variables('DateString')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_CareBlox_stg",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "STGtblShifts"
								}
							}
						]
					},
					{
						"name": "STGtblTAData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STGtblShifts",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "LocalID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "LocalID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TAID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "TAID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HomeID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "HomeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RoleID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "RoleID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ShiftID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "ShiftID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TAStatus",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "TAStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TADateIn",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "TADateIn",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "ActualDateIn",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "ActualDateIn",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "ConfirmedDateIn",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "ConfirmedDateIn",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "EarlyInFlag",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "EarlyInFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "EarlyInComment",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EarlyInComment",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LateInFlag",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "LateInFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "LateInComment",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "LateInComment",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TADateOut",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "TADateOut",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "ActualDateOut",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "ActualDateOut",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "ConfirmedDateOut",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "ConfirmedDateOut",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "EarlyOutFlag",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "EarlyOutFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "EarlyOutComment",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EarlyOutComment",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LateOutFlag",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "LateOutFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "LateOutComment",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "LateOutComment",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ManagerApprovalRequiredIn",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "ManagerApprovalRequiredIn",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "ManagerApprovalRequiredOut",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "ManagerApprovalRequiredOut",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "RecordedMinutes",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "RecordedMinutes",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "TATagID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "TATagID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ImageFilename",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ImageFilename",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Imported",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "Imported",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "SrcUnit",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "SrcUnit",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ExternalWorkerName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ExternalWorkerName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZStorage_careblox_parquet_file",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "tblTAData$",
									"DateString": {
										"value": "@variables('DateString')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_CareBlox_stg",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "STGtblTAData"
								}
							}
						]
					},
					{
						"name": "tblHome",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STGtblTAData",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"AutoHMID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AutoHMID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "AutoHMID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "HomeID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "HomeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HomeName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "HomeName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HomeEmail",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "HomeEmail",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Address1",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Address1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Address2",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Address2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Address3",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Address3",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Address4",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Address4",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PostCode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "PostCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Telephone",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Telephone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Fax",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Fax",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SageCode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SageCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DepartmentCode",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "DepartmentCode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Withdrawn",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "Withdrawn",
											"type": "Boolean",
											"physicalType": "bit"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZStorage_careblox_parquet_file",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "tblHome$",
									"DateString": {
										"value": "@variables('DateString')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "CareBlox",
									"Table": "tblHome"
								}
							}
						]
					},
					{
						"name": "Set DateString",
						"description": "Sets the date string used for Dataset property",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "DateString",
							"value": {
								"value": "@utcNow('dd-MM-yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "STGtblEmpJobs Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "STGtblEmpJobs",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('STGtblEmpJobs').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "STGtblEmpJobs"
							}
						}
					},
					{
						"name": "STGtblEmployees Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "STGtblEmployees",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('STGtblEmployees').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "STGtblEmployees"
							}
						}
					},
					{
						"name": "STGtblPayrollData Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "STGtblPayrollData",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('STGtblPayrollData').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "STGtblPayrollData"
							}
						}
					},
					{
						"name": "STGtblPeriods Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "STGtblPeriods",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('STGtblPeriods').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "STGtblPeriods"
							}
						}
					},
					{
						"name": "STGtblRates Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "STGtblRates",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('STGtblRates').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "STGtblRates"
							}
						}
					},
					{
						"name": "STGtblShifts Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "STGtblShifts",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('STGtblShifts').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "STGtblShifts"
							}
						}
					},
					{
						"name": "STGtblTAData Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "STGtblTAData",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('STGtblTAData').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "STGtblTAData"
							}
						}
					},
					{
						"name": "tblHome Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "tblHome",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('tblHome').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "tblHome"
							}
						}
					},
					{
						"name": "STGtblCalender",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "tblHome",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "UniqueID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "UniqueID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StartDate",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "StartDate",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "EmployeeName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EmployeeName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EndDate",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "EndDate",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StartDetails",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "StartDetails",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EndDetails",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "EndDetails",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EnteredOn",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "EnteredOn",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "UpdatedOn",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "UpdatedOn",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "EnteredBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EnteredBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UpdatedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "UpdatedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Export",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "Export",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ShowAlert",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "ShowAlert",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Department",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "Department",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RosterID",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "RosterID",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "Role",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "Role",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DaysTaken",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "DaysTaken",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "EnteredByID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "EnteredByID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BatchId",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "BatchId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AbsenceCode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AbsenceCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AbsenceCategory",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AbsenceCategory",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BradfordFactorInclude",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "BradfordFactorInclude",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Reviewed",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "Reviewed",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "UpdatedByID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "UpdatedByID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "UpdateType",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "UpdateType",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "ExpectedEndDate",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "ExpectedEndDate",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "ActivityID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "ActivityID",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "ActivityLocationID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ActivityLocationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZStorage_careblox_parquet_file",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "tblCalender$",
									"DateString": {
										"value": "@variables('DateString')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_CareBlox_stg",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "stgtblCalender"
								}
							}
						]
					},
					{
						"name": "tblCalender Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "STGtblCalender",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('STGtblCalender').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "STGtblCalender"
							}
						}
					},
					{
						"name": "STGtblEmpJobs Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "STGtblEmpJobs Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "STGtblEmpJobs Error",
							"errorCode": "101"
						}
					},
					{
						"name": "STGtblEmployees Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "STGtblEmployees Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "STGtblEmployees Error",
							"errorCode": "101"
						}
					},
					{
						"name": "STGtblPayrollData Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "STGtblPayrollData Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "STGtblPayrollData Failure",
							"errorCode": "101"
						}
					},
					{
						"name": "STGtblPeriods Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "STGtblPeriods Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "STGtblPeriods Error",
							"errorCode": "101"
						}
					},
					{
						"name": "STGtblRates Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "STGtblRates Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "STGtblRates Error",
							"errorCode": "101"
						}
					},
					{
						"name": "STGtblShifts Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "STGtblShifts Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "STGtblShifts Error",
							"errorCode": "101"
						}
					},
					{
						"name": "STGtblTAData Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "STGtblTAData Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "STGtblTAData Failure",
							"errorCode": "101"
						}
					},
					{
						"name": "tblHome Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "tblHome Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "tblHome Error",
							"errorCode": "101"
						}
					},
					{
						"name": "tblCalender Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "tblCalender Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "tblCalender Error",
							"errorCode": "101"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"DateString": {
						"type": "String"
					},
					"vStepFailed": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Careblox/Children Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-01T11:08:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZStorage_careblox_parquet_file')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB_CareBlox_stg')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]",
				"[concat(variables('factoryId'), '/pipelines/UT_Send_Email_Param')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CareBlox_Clear_STGTables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Clear STG tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[CareBlox].[ClearStageTables]"
						},
						"linkedServiceName": {
							"referenceName": "AH2_TRANSFORM_DB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Careblox/Children Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-12T08:10:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CareBlox_Data_Load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copies the Parquet files from the Azure file share to Azure blob storage. Then copies data from the files and loads into the TRANSFROM_DB. Everyday at 3pm",
				"activities": [
					{
						"name": "Copy Files to Blob Storage",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Clear Stage Tables_copy1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_CareBlox-parquet-copy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Import data to Stage tables",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Copy Files to Blob Storage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_CareBlox-parquet-load-STG",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Upsert to tables",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Import data to Stage tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_CareBlox-SQL-upsert",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Clear Stage Tables",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Upsert to tables",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_CareBlox_Clear_STGTables",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Clear Stage Tables_copy1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_CareBlox_Clear_STGTables",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Careblox"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-26T11:05:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_CareBlox-parquet-copy')]",
				"[concat(variables('factoryId'), '/pipelines/PL_CareBlox-parquet-load-STG')]",
				"[concat(variables('factoryId'), '/pipelines/PL_CareBlox-SQL-upsert')]",
				"[concat(variables('factoryId'), '/pipelines/PL_CareBlox_Clear_STGTables')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CareBlox_Delete_Files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "removes files older than 30 days in the careblox container",
				"activities": [
					{
						"name": "Delete Careblox bak files",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_CareBlox_Container",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"modifiedDatetimeStart": {
									"value": "@addDays(utcNow(), -40 )",
									"type": "Expression"
								},
								"modifiedDatetimeEnd": {
									"value": "@addDays(utcNow(), -30 )",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Date": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-09-17T11:21:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_CareBlox_Container')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CareBlox_Download')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download bak files from FTP",
						"description": "Download the zipped bak files from FTP",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_CareBlox-bak-Files",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Copy Bak files to Fileshare",
						"description": "Copy today's downloaded bak files",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Wait 15",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_CareBlox-Fileshare",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Wait 15",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Download bak files from FTP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 15
						}
					},
					{
						"name": "Copy Bak files to Fileshare Failure",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Copy Bak files to Fileshare",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": "Pipeline failed",
								"Colour": {
									"value": "Red",
									"type": "Expression"
								},
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "Copy Bak files to Fileshare"
							}
						}
					},
					{
						"name": "Download bak files from FTP Failure",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Download bak files from FTP",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": "Pipeline failed",
								"Colour": {
									"value": "Red",
									"type": "Expression"
								},
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "Download bak files from FTP"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Careblox"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-01T10:23:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_CareBlox-bak-Files')]",
				"[concat(variables('factoryId'), '/pipelines/PL_CareBlox-Fileshare')]",
				"[concat(variables('factoryId'), '/pipelines/UT_Send_Email_Param')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Careblox_TblHR')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy to stage",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set DateString",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE CareBlox.stgtblHR_Records",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZStorage_careblox_parquet_file",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "tblHR_Records$",
									"DateString": "@variables('DateString')"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Careblox",
									"Table": "stgtblHR_Records"
								}
							}
						]
					},
					{
						"name": "Set DateString",
						"description": "Sets the date string used for Dataset property",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "DateString",
							"value": {
								"value": "@utcNow('dd-MM-yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Upsert Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy to stage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\r\n    [HRRecordID]\r\n    ,[EmployeeID]\r\n    ,[HomeID]\r\n    ,[HRChecklistID]\r\n    ,[ItemGroupID]\r\n    ,[ItemName]\r\n    ,[ItemStatus]\r\n    ,[ItemValue1]\r\n    ,[ItemValue2]\r\n    ,[ItemReference]\r\n    ,[ItemNotes]\r\n    ,DATEADD(s, ReviewDueDate, '1970-01-01 00:00:00') AS [ReviewDueDate]\r\n    ,DATEADD(SECOND, ItemExpires / 1000000.0, CAST('1970-01-01 00:00:00' AS datetime2)) AS [ItemExpires]\r\n    ,DATEADD(ss, RequestedDate, '1970-01-01 00:00:00') AS [RequestedDate]\r\n    ,DATEADD(ss, ReceivedDate, '1970-01-01 00:00:00') AS [ReceivedDate]\r\n    ,DATEADD(ss, CreatedDate, '1970-01-01 00:00:00') AS [CreatedDate]\r\n    ,[CreatedByID]\r\n    ,DATEADD(ss, [ClosedDate], '1970-01-01 00:00:00') AS [ClosedDate]\r\n    ,[ClosedByID]\r\n    ,DATEADD(ss, LastUpdatedDate, '1970-01-01 00:00:00') AS [LastUpdatedDate]\r\n    ,[LastUpdatedByID]\r\n    ,[Deleted]\r\nFROM \r\n    CareBlox.stgtblHR_Records",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"HRRecordID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "HRRecordID",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "HRRecordID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HomeID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "HomeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HRChecklistID",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "HRChecklistID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ItemGroupID",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "ItemGroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ItemName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ItemName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ItemStatus",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ItemStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ItemValue1",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ItemValue1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ItemValue2",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ItemValue2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ItemReference",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ItemReference",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ItemNotes",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ItemNotes",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReviewDueDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ReviewDueDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ItemExpires",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "ItemExpires",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "RequestedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "RequestedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ReceivedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ReceivedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedByID",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "CreatedByID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ClosedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ClosedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ClosedByID",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "ClosedByID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LastUpdatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "LastUpdatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "LastUpdatedByID",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "LastUpdatedByID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Deleted",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Deleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Careblox",
									"Table": "tblHR_Records"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"DateString": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Careblox/Children Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZStorage_careblox_parquet_file')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_ClearAndPopulate_AgencyRanking')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Exec Stored Proc",
						"description": "Execute the ClearAndPopulate$AgencyRanking procedure to clear and populate the AgencyRanking table.",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AH2_Agency",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "EXEC ClearAndPopulate$AgencyRanking"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Agency/Children Pipeline"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH2_Agency')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_ClearAndPopulate_AgencyShiftClean')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Exec Stored Proc",
						"description": "Execute the ClearAndPopulate$AgencyShiftsClean procedure to clear and populate the Agency Shifts Clean table.",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AH2_Agency",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "EXEC ClearAndPopulate$AgencyShiftsClean"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Agency/Children Pipeline"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH2_Agency')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_ColdHarbour_Barclays_DD')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Exports the DD report for the 3 homes that bank with Barclays. Saves to container which is monitored by a logic app, which will save to share point.",
				"activities": [
					{
						"name": "Lookup Home details",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DS_Polestar_storage_csv",
								"type": "DatasetReference",
								"parameters": {
									"Container": "user",
									"FileName": "DDReportDetails.csv"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Home",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Home details",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Home details').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Export DD Reports",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "WITH DirectDebitData AS (\n\tSELECT \n\t\tCONCAT(RTRIM(Contact_Hd_Res.Forenames), ' ', RTRIM(Contact_Hd_Res.Surname)) AS [Debtor Name],\n\t\tREPLACE(CASE\n\t\t\tWHEN DirectD_Dt.BkSortCode != '' THEN\n\t\t\t\tDirectD_Dt.BkSortCode\n\t\t\tELSE\n\t\t\t\tisnull(Contact_Hd_FS.BkSortCode, space(8))\n\t\tEND, '-', '') AS [Debtor Sort Code],\n\t\tCASE\n\t\t\tWHEN DirectD_Dt.BankAcc != '' THEN\n\t\t\t\tRTRIM(DirectD_Dt.BankAcc)\n\t\t\tELSE\n\t\t\t\tRTRIM(FundSrc_Hd.BankAcc)\n\t\tEND AS [Debtor Account Number],\n\t\tRTRIM(Resident.Res_Code) AS [Collection Details],\n\t\tDirectD_Dt.Amount,\n\t\tCAST(DirectD_Dt.Amount AS NUMERIC(18, 2)) AS [Debtor Amount],\n\t\tCASE \n\t\t\tWHEN DirectD_Dt.DDTranType = '17' THEN '17 - Standard Ongoing Collection'\n\t\t\tWHEN DirectD_Dt.DDTranType = '01' THEN '01 - First Collection'\n\t\t\tWHEN DirectD_Dt.DDTranType = '18' THEN '18 - '\n\t\t\tWHEN DirectD_Dt.DDTranType = '19' THEN '19 - '\n\t\t\tELSE DirectD_Dt.DDTranType\n\t\tEND AS [Transaction Type],\n\n\t\tDirectD_Dt.DDHd_Ref,\n\t\tDirectD_Dt.DDDT_REF,\n\t\tDirectD_Dt.DUE_DATE\n\tFROM \n\t\tDirectD_Dt (NOLOCK)\n\t\tJOIN DirectD_Hd (NOLOCK)\n\t\t\tON DirectD_Hd.DDHd_Ref = DirectD_Dt.DDHd_Ref\n\t\t\t   AND DirectD_Hd.BatchNo\n\t\t\t   BETWEEN 0 AND 9999999999\n\t\tJOIN FundSrc_Hd (NOLOCK)\n\t\t\tLEFT JOIN Contact_Dt AS Contact_Dt_FS (NOLOCK)\n\t\t\t\tJOIN Contact_Hd AS Contact_Hd_FS (NOLOCK)\n\t\t\t\t\tON Contact_Hd_FS.Contact_Ref = Contact_Dt_FS.Contact_Ref\n\t\t\t\tON Contact_Dt_FS.Cnta_Det_Ref = FundSrc_Hd.Bank_Det_Ref\n\t\t\tJOIN Resident (NOLOCK)\n\t\t\t\tJOIN Contact_Dt AS Contact_Dt_Res (NOLOCK)\n\t\t\t\t\tJOIN Contact_Hd AS Contact_Hd_Res (NOLOCK)\n\t\t\t\t\t\tON Contact_Hd_Res.Contact_Ref = Contact_Dt_Res.Contact_Ref\n\t\t\t\t\tON Contact_Dt_Res.Cnta_Det_Ref = Resident.Cnta_Det_Ref\n\t\t\t\tJOIN Room_Dt (NOLOCK)\n\t\t\t\t\tJOIN Locations (NOLOCK)\n\t\t\t\t\t\tJOIN Site (NOLOCK)\n\t\t\t\t\t\t\tON Site.Site_Ref = Locations.Site_Ref\n\t\t\t\t\t\tON Locations.Loc_Ref = Room_Dt.Loc_Ref\n\t\t\t\t\tON Room_Dt.Room_Ref = Resident.Room_Ref\n\t\t\t\tON Resident.Res_Ref = FundSrc_Hd.Res_Ref\n\t\t\tON FundSrc_Hd.FS_Ref = DirectD_Dt.FS_Ref\n\tWHERE \n\t\tDirectD_Dt.Due_Date\n\t\tBETWEEN '17530101' AND '29991231'\n\t\tAND DirectD_Dt.Allocated != 'X'\n\t\tand DirectD_Dt.Submitted IS NULL\n\t\tand DirectD_Dt.DDTranType IN ( '01', '17', '18', '19' )\n\t\tAND Locations.Site_Ref = @{item().Site_ref}\n)\nSELECT \n\tDirectDebitData.[Debtor Name],\n\tDirectDebitData.[Debtor Sort Code],\n\tDirectDebitData.[Debtor Account Number],\n\tDirectDebitData.[Collection Details],\n\tSUM(DirectDebitData.[Debtor Amount]) AS [Debtor Amount],\n\tDirectDebitData.[Transaction Type]\n\n\t--,DirectDebitData.DUE_DATE\nFROM\n\tDirectDebitData\n--WHERE\n--\tDirectDebitData.[Collection Details] = 'MM0182'\nGROUP BY\n\tDirectDebitData.DDHd_Ref,\n\tDirectDebitData.DUE_DATE,\n\tDirectDebitData.[Debtor Name],\n\tDirectDebitData.[Debtor Sort Code],\n\tDirectDebitData.[Debtor Account Number],\n\tDirectDebitData.[Collection Details],\n\tDirectDebitData.[Transaction Type]",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_OnPrem_CH_IP",
											"type": "DatasetReference",
											"parameters": {
												"Schema": "n/a",
												"Table": "n/a"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_Polestar_storage_csv_NoQuotes",
											"type": "DatasetReference",
											"parameters": {
												"Container": "user",
												"FileName": {
													"value": "@concat(item().HomeName, ' - DD - ',formatDateTime(utcNow(), 'MMM yyyy'), '.txt')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Cold Harbour"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Polestar_storage_csv')]",
				"[concat(variables('factoryId'), '/datasets/DS_OnPrem_CH_IP')]",
				"[concat(variables('factoryId'), '/datasets/DS_Polestar_storage_csv_NoQuotes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_ColdHarbour_Rooms')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Extracts the Rooms from the Polestar DB on AH2, to a table in Avery DB on AH2",
				"activities": [
					{
						"name": "Rooms",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ROOM_REF"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ROOM_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ROOM_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ROOM_CAT",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ROOM_CAT",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ROOM_CAT_DESC",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ROOM_CAT_DESC",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ROOM_CODE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ROOM_CODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ROOM_DESC",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ROOM_DESC",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ROOM_NO_BEDS",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ROOM_NO_BEDS",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CHARGEPERIOD",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CHARGEPERIOD",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CURRENTRATE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 12
										},
										"sink": {
											"name": "CURRENTRATE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 12
										}
									},
									{
										"source": {
											"name": "RATEDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "RATEDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "USEFLAG",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "USEFLAG",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_Polestar",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "Rooms"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "ColdHarbour",
									"Table": "Rooms"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Avery/Children Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-05T11:40:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AH2_Polestar')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_Avery')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_ColdHarbour_RoomsWithInHomeResidents')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copies data from the view in Polestar to Avery DB. Lists all rooms in CH and the active resident record assigned to that home",
				"activities": [
					{
						"name": "Refresh Data",
						"description": "Truncates table in Avery DB and Inserts data from Polestar DB using the view.",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \n    [ROOM_REF]\n    ,[ROOM_CODE]\n    ,[ROOM_DESC]\n    ,[USEFLAG]\n    ,[HOME_REF]\n    ,[RES_REF]\n    ,[RES_CODE]\n    ,[ResidentStatus]\n    ,[Firstname]\n    ,[Surname]\n    ,[AdmissionAnalysis]\n    ,[AdmissionType]\n    ,[ResidentAdmissionReason]\n    ,[AnalysisGroup]\n    ,ResidentsAssigned\nFROM \n    [dbo].[vRoomsWithInHomeResidentDetails]\nORDER BY\n    Home_Ref ASC,\n    ROOM_Ref ASC",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE ColdHarbour.RoomsWithInHomeResidentDetails",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ROOM_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ROOM_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ROOM_CODE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ROOM_CODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ROOM_DESC",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ROOM_DESC",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "USEFLAG",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "USEFLAG",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RES_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RES_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RES_CODE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "RES_CODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ResidentStatus",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ResidentStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Firstname",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Firstname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Surname",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Surname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AdmissionAnalysis",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AdmissionAnalysis",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AdmissionType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AdmissionType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ResidentAdmissionReason",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ResidentAdmissionReason",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AnalysisGroup",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AnalysisGroup",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ResidentsAssigned",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ResidentsAssigned",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_Polestar",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "ColdHarbour",
									"Table": "RoomsWithInHomeResidentDetails"
								}
							}
						]
					},
					{
						"name": "Update Room Occupancy",
						"description": "Updates the Pricing.Room tables occupancy using the refreshed data",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Refresh Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Pricing].[Update$RoomOccupancyFromCH]"
						},
						"linkedServiceName": {
							"referenceName": "AH2_Avery",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Avery/Children Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-10T09:21:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AH2_Polestar')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_Avery')]",
				"[concat(variables('factoryId'), '/linkedServices/AH2_Avery')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Exchequer_Budget')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "YE Mar Budget 1 Staging",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"additionalColumns": [
									{
										"name": "BudgetType",
										"value": {
											"value": "1",
											"type": "Expression"
										}
									},
									{
										"name": "YearEnd",
										"value": {
											"value": "'Mar'",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"parallelCopies": 8,
							"dataIntegrationUnits": 16,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BudgetType",
											"type": "String"
										},
										"sink": {
											"name": "BudgetType",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "YearEnd",
											"type": "String"
										},
										"sink": {
											"name": "YearEnd",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ExchCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ExchCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "GLCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GLCode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "GLDesc",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GLDesc",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period1Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period1Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period1Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period1Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period2Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period2Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period2Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period2Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period3Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period3Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period3Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period3Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period4Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period4Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period4Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period4Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period5Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period5Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period5Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period5Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period6Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period6Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period6Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period6Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period7Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period7Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period7Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period7Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period8Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period8Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period8Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period8Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period9Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period9Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period9Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period9Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period10Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period10Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period10Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period10Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period11Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period11Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period11Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period11Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period12Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period12Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period12Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period12Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Exchequer_Excel_YE_Mar_Budget1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Exchequer",
									"Table": "STGBudgets"
								}
							}
						]
					},
					{
						"name": "Upsert Budget1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Budget 2 Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "WITH BudgetData AS(\nSELECT \n    H.IntranetID,\n    S.BudgetType,\n    S.ExchCode,\n    S.GLCode,\n    S.GLDesc,\n    P.BudgetDate,\n    S.YearEnd,\n    TRY_CAST(P.Amount AS NUMERIC(18,5)) AS BudgetAmount\nFROM \n    Exchequer.STGBudgets AS S\n\n    LEFT JOIN Avery.HomeDetails H\n        ON H.ExchCode = S.ExchCode\n\n    CROSS APPLY (VALUES\n        (S.Period1Date, S.Period1Value),\n        (S.Period2Date, S.Period2Value),\n        (S.Period3Date, S.Period3Value),\n        (S.Period4Date, S.Period4Value),\n        (S.Period5Date, S.Period5Value),\n        (S.Period6Date, S.Period6Value),\n        (S.Period7Date, S.Period7Value),\n        (S.Period8Date, S.Period8Value),\n        (S.Period9Date, S.Period9Value),\n        (S.Period10Date, S.Period10Value),\n        (S.Period11Date, S.Period11Value),\n        (S.Period12Date, S.Period12Value)\n    ) AS P(BudgetDate, Amount)\n\nWHERE \n    S.ExchCode IS NOT NULL\n    AND P.BudgetDate IS NOT NULL\n)\n\nSELECT \n    CAST(\n        CAST(BudgetData.IntranetID AS VARCHAR(4)) + \n        CAST(BudgetData.BudgetType AS VARCHAR(1)) +\n        CAST(BudgetData.GLCode AS VARCHAR(6)) + \n        CONVERT(VARCHAR(8), CAST(BudgetData.BudgetDate AS DATE), 112) \n    AS BIGINT) AS BudgetCompositeKey,\n    *\nFROM\n    BudgetData\nORDER BY\n    IntranetID ASC,\n    GLCode ASC,\n    BudgetDate ASC,\n    BudgetType ASC",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"parallelCopies": 8,
							"dataIntegrationUnits": 16,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BudgetCompositeKey",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "BudgetCompositeKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IntranetID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "IntranetID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BudgetType",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "BudgetType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ExchCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ExchCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "GLCode",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GLCode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "GLDesc",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "GLDesc",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BudgetDate",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BudgetDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "YearEnd",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "YearEnd",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BudgetAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 5,
											"precision": 18
										},
										"sink": {
											"name": "BudgetAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 5,
											"precision": 18
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Exchequer",
									"Table": "Budgets"
								}
							}
						]
					},
					{
						"name": "YE Dec Budget 1 Staging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "YE Mar Budget 1 Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"additionalColumns": [
									{
										"name": "BudgetType",
										"value": {
											"value": "1",
											"type": "Expression"
										}
									},
									{
										"name": "YearEnd",
										"value": {
											"value": "'Dec'",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"parallelCopies": 8,
							"dataIntegrationUnits": 16,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BudgetType",
											"type": "String"
										},
										"sink": {
											"name": "BudgetType",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "YearEnd",
											"type": "String"
										},
										"sink": {
											"name": "YearEnd",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ExchCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ExchCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "GLCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GLCode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "GLDesc",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GLDesc",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period1Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period1Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period1Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period1Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period2Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period2Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period2Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period2Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period3Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period3Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period3Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period3Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period4Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period4Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period4Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period4Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period5Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period5Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period5Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period5Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period6Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period6Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period6Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period6Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period7Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period7Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period7Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period7Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period8Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period8Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period8Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period8Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period9Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period9Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period9Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period9Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period10Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period10Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period10Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period10Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period11Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period11Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period11Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period11Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period12Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period12Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period12Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period12Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Exchequer_Excel_YE_Dec_Budget1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Exchequer",
									"Table": "STGBudgets"
								}
							}
						]
					},
					{
						"name": "Budget 2 Staging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "YE Dec Budget 1 Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"additionalColumns": [
									{
										"name": "BudgetType",
										"value": {
											"value": "2",
											"type": "Expression"
										}
									},
									{
										"name": "YearEnd",
										"value": {
											"value": "'Dec'",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"parallelCopies": 8,
							"dataIntegrationUnits": 16,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BudgetType",
											"type": "String"
										},
										"sink": {
											"name": "BudgetType",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "YearEnd",
											"type": "String"
										},
										"sink": {
											"name": "YearEnd",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ExchCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ExchCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "GLCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GLCode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "GLDesc",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GLDesc",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period1Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period1Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period1Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period1Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period2Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period2Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period2Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period2Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period3Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period3Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period3Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period3Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period4Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period4Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period4Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period4Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period5Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period5Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period5Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period5Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period6Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period6Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period6Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period6Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period7Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period7Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period7Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period7Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period8Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period8Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period8Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period8Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period9Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period9Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period9Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period9Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period10Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period10Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period10Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period10Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period11Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period11Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period11Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period11Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period12Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period12Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period12Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period12Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Exchequer_Excel_YE_Dec_Budget1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Exchequer",
									"Table": "STGBudgets"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Budget1": {
						"type": "String",
						"defaultValue": "Budget1"
					},
					"Budget2": {
						"type": "String",
						"defaultValue": "Budget2"
					}
				},
				"folder": {
					"name": "Exchequer/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Exchequer_Excel_YE_Mar_Budget1')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]",
				"[concat(variables('factoryId'), '/datasets/DS_Exchequer_Excel_YE_Dec_Budget1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Exchequer_CompanyAccessAudit')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Transfer File to Blob Storage",
						"description": "Copies the file generated on the VM from the file share to container in Blob Storage",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Exchequer_Fileshare",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load CSV file to DB table",
						"description": "Inserts the records in the csv file to the Avery DB on AH2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Transfer File to Blob Storage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Insert_ExchequerCompanyAccess",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Exchequer"
				},
				"annotations": [],
				"lastPublishTime": "2024-06-27T14:27:51Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_Exchequer_Fileshare')]",
				"[concat(variables('factoryId'), '/pipelines/PL_Insert_ExchequerCompanyAccess')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Exchequer_Fileshare')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Moves the exported csv file from the Azure File Share to Azure Storage Container. The file contains list of Exchequer companies and the users with access to it",
				"activities": [
					{
						"name": "Copy CSV",
						"description": "Copy CSV file to Exchequer Azure Container",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Fileshare_Exchequer",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Exchequer",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete File from File Share",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy CSV",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_PolestarStorageAcc_Fileshare_Exchequer",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureFileStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Exchequer/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-06-26T11:47:51Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PolestarStorageAcc_Fileshare_Exchequer')]",
				"[concat(variables('factoryId'), '/datasets/DS_PolestarStorageAcc_Exchequer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "removes files from provided container in the date range provided",
				"activities": [
					{
						"name": "Delete Careblox bak files",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Polestar_Storage",
								"type": "DatasetReference",
								"parameters": {
									"Container": "other"
								}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "PolestarStorageAcc",
									"type": "LinkedServiceReference"
								},
								"path": "other"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"modifiedDatetimeStart": "2024-05-01T00:00:00.000Z",
								"modifiedDatetimeEnd": "2025-01-31T00:00:00.000Z",
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Date": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-09-17T11:21:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Polestar_Storage')]",
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Fusion_Move_Files_To_VM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Moves files loaded to the Fusion Container in the averyblob storage account, to the averyblobfileshare. So they can be copied off the file share to a location on the VM",
				"activities": [
					{
						"name": "Copy container files to Fileshare",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFileName": "*.zip",
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureFileStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Averyblob_Fusion",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AveryblobFileShare",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Archive files",
						"description": "Moves the files to archive folder in the container",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy container files to Fileshare",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFileName": "*.zip",
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Averyblob_Fusion",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Averyblob_Fusion_Archive",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Fusion"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Averyblob_Fusion')]",
				"[concat(variables('factoryId'), '/datasets/AveryblobFileShare')]",
				"[concat(variables('factoryId'), '/datasets/Averyblob_Fusion_Archive')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Fusion_Residents')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Resident Data Json",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['ServiceUser_ID']"
										},
										"sink": {
											"name": "ServiceUser_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Home_ID']"
										},
										"sink": {
											"name": "Home_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['room_ID']"
										},
										"sink": {
											"name": "room_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CC_HID']"
										},
										"sink": {
											"name": "CC_HID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CC_ClientID']"
										},
										"sink": {
											"name": "CC_ClientID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Title']"
										},
										"sink": {
											"name": "Title",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Forename']"
										},
										"sink": {
											"name": "Forename",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Surname']"
										},
										"sink": {
											"name": "Surname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DateOfBirth']"
										},
										"sink": {
											"name": "DateOfBirth",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DateIn']"
										},
										"sink": {
											"name": "DateIn",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DateOut']"
										},
										"sink": {
											"name": "DateOut",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['careCategory']"
										},
										"sink": {
											"name": "careCategory",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['fundingType']"
										},
										"sink": {
											"name": "fundingType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['fees']"
										},
										"sink": {
											"name": "fees",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['deleted']"
										},
										"sink": {
											"name": "deleted",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['sex']"
										},
										"sink": {
											"name": "sex",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['maritalStatus']"
										},
										"sink": {
											"name": "maritalStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nationality']"
										},
										"sink": {
											"name": "nationality",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ni_num']"
										},
										"sink": {
											"name": "ni_num",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['NHS']"
										},
										"sink": {
											"name": "NHS",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nhs_Expiry']"
										},
										"sink": {
											"name": "nhs_Expiry",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nickname']"
										},
										"sink": {
											"name": "nickname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['status']"
										},
										"sink": {
											"name": "status",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['residencyType']"
										},
										"sink": {
											"name": "residencyType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['dependency']"
										},
										"sink": {
											"name": "dependency",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['alertCode']"
										},
										"sink": {
											"name": "alertCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['admittedFrom']"
										},
										"sink": {
											"name": "admittedFrom",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['admittedFrom_Ad1']"
										},
										"sink": {
											"name": "admittedFrom_Ad1",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['admittedFrom_Ad2']"
										},
										"sink": {
											"name": "admittedFrom_Ad2",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['admittedFrom_Ad3']"
										},
										"sink": {
											"name": "admittedFrom_Ad3",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['admittedFrom_Ad4']"
										},
										"sink": {
											"name": "admittedFrom_Ad4",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['admittedFrom_PC']"
										},
										"sink": {
											"name": "admittedFrom_PC",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['admittedFrom_Tel']"
										},
										"sink": {
											"name": "admittedFrom_Tel",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['admissionCode']"
										},
										"sink": {
											"name": "admissionCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ResContractSigned']"
										},
										"sink": {
											"name": "ResContractSigned",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['finalFundingDate']"
										},
										"sink": {
											"name": "finalFundingDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['dischargeCode']"
										},
										"sink": {
											"name": "dischargeCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['dischargeLocation']"
										},
										"sink": {
											"name": "dischargeLocation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['dateOfDeath']"
										},
										"sink": {
											"name": "dateOfDeath",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['timeOfDeath']"
										},
										"sink": {
											"name": "timeOfDeath",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['doctorName']"
										},
										"sink": {
											"name": "doctorName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['deathCause']"
										},
										"sink": {
											"name": "deathCause",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ceaseInvoicing']"
										},
										"sink": {
											"name": "ceaseInvoicing",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['eye_colour']"
										},
										"sink": {
											"name": "eye_colour",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['height_cm']"
										},
										"sink": {
											"name": "height_cm",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['height_m']"
										},
										"sink": {
											"name": "height_m",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['hair_colour']"
										},
										"sink": {
											"name": "hair_colour",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['hair_length']"
										},
										"sink": {
											"name": "hair_length",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['eye_wear']"
										},
										"sink": {
											"name": "eye_wear",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['hearing_aid']"
										},
										"sink": {
											"name": "hearing_aid",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['facial_hair']"
										},
										"sink": {
											"name": "facial_hair",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['occupation']"
										},
										"sink": {
											"name": "occupation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['allergies']"
										},
										"sink": {
											"name": "allergies",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['important_information']"
										},
										"sink": {
											"name": "important_information",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['deathNotes']"
										},
										"sink": {
											"name": "deathNotes",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ClientNumber']"
										},
										"sink": {
											"name": "ClientNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ClientID']"
										},
										"sink": {
											"name": "ClientID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['su_med_history']"
										},
										"sink": {
											"name": "su_med_history",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['su_med_likes']"
										},
										"sink": {
											"name": "su_med_likes",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['su_med_social']"
										},
										"sink": {
											"name": "su_med_social",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['su_med_allergies']"
										},
										"sink": {
											"name": "su_med_allergies",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['su_DL_requirements']"
										},
										"sink": {
											"name": "su_DL_requirements",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['su_evac_notes']"
										},
										"sink": {
											"name": "su_evac_notes",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['care_hours']"
										},
										"sink": {
											"name": "care_hours",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DNAR']"
										},
										"sink": {
											"name": "DNAR",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['respectTEP']"
										},
										"sink": {
											"name": "respectTEP",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['respectTEP_date']"
										},
										"sink": {
											"name": "respectTEP_date",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DOLS']"
										},
										"sink": {
											"name": "DOLS",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DOLSDate']"
										},
										"sink": {
											"name": "DOLSDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DOLSExpiry']"
										},
										"sink": {
											"name": "DOLSExpiry",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DOLSRenewal']"
										},
										"sink": {
											"name": "DOLSRenewal",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DNARExpiry']"
										},
										"sink": {
											"name": "DNARExpiry",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['EndOfLife']"
										},
										"sink": {
											"name": "EndOfLife",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DPLNumber']"
										},
										"sink": {
											"name": "DPLNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Religion']"
										},
										"sink": {
											"name": "Religion",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['su_funeral_wishes']"
										},
										"sink": {
											"name": "su_funeral_wishes",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['admissionreason_notes']"
										},
										"sink": {
											"name": "admissionreason_notes",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['KeyCareWorker']"
										},
										"sink": {
											"name": "KeyCareWorker",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['KeyNurseWorker']"
										},
										"sink": {
											"name": "KeyNurseWorker",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['financial_notes']"
										},
										"sink": {
											"name": "financial_notes",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['hospital_num']"
										},
										"sink": {
											"name": "hospital_num",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['target_weight']"
										},
										"sink": {
											"name": "target_weight",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['target_fluid']"
										},
										"sink": {
											"name": "target_fluid",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['gdpr_consent_sent']"
										},
										"sink": {
											"name": "gdpr_consent_sent",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['gdpr_consent_received']"
										},
										"sink": {
											"name": "gdpr_consent_received",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['su_lang']"
										},
										"sink": {
											"name": "su_lang",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['susexuality']"
										},
										"sink": {
											"name": "susexuality",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['UseBedRails']"
										},
										"sink": {
											"name": "UseBedRails",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['expectedRate']"
										},
										"sink": {
											"name": "expectedRate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['expectedFundingType']"
										},
										"sink": {
											"name": "expectedFundingType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['adrt']"
										},
										"sink": {
											"name": "adrt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['FNCAppliedFor']"
										},
										"sink": {
											"name": "FNCAppliedFor",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['TermsAndConditions']"
										},
										"sink": {
											"name": "TermsAndConditions",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ProofOfFunding']"
										},
										"sink": {
											"name": "ProofOfFunding",
											"type": "String"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Fusion_Resident_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "FusionResident"
								}
							}
						]
					},
					{
						"name": "Homes Data",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['Home_ID']"
										},
										"sink": {
											"name": "Home_ID"
										}
									},
									{
										"source": {
											"path": "$['NameOfHome']"
										},
										"sink": {
											"name": "NameOfHome"
										}
									},
									{
										"source": {
											"path": "$['dateOpened']"
										},
										"sink": {
											"name": "dateOpened"
										}
									},
									{
										"source": {
											"path": "$['Comp_ID']"
										},
										"sink": {
											"name": "Comp_ID"
										}
									},
									{
										"source": {
											"path": "$['AddressLine1']"
										},
										"sink": {
											"name": "AddressLine1"
										}
									},
									{
										"source": {
											"path": "$['AddressLine2']"
										},
										"sink": {
											"name": "AddressLine2"
										}
									},
									{
										"source": {
											"path": "$['AddressLine3']"
										},
										"sink": {
											"name": "AddressLine3"
										}
									},
									{
										"source": {
											"path": "$['AddressLine4']"
										},
										"sink": {
											"name": "AddressLine4"
										}
									},
									{
										"source": {
											"path": "$['postcode']"
										},
										"sink": {
											"name": "postcode"
										}
									},
									{
										"source": {
											"path": "$['Manager']"
										},
										"sink": {
											"name": "Manager"
										}
									},
									{
										"source": {
											"path": "$['TelephoneNo']"
										},
										"sink": {
											"name": "TelephoneNo"
										}
									},
									{
										"source": {
											"path": "$['Fax']"
										},
										"sink": {
											"name": "Fax"
										}
									},
									{
										"source": {
											"path": "$['Email']"
										},
										"sink": {
											"name": "Email"
										}
									},
									{
										"source": {
											"path": "$['MinHomeOccupancy']"
										},
										"sink": {
											"name": "MinHomeOccupancy"
										}
									},
									{
										"source": {
											"path": "$['OverallFeeNominal']"
										},
										"sink": {
											"name": "OverallFeeNominal"
										}
									},
									{
										"source": {
											"path": "$['Reg1']"
										},
										"sink": {
											"name": "Reg1"
										}
									},
									{
										"source": {
											"path": "$['Reg2']"
										},
										"sink": {
											"name": "Reg2"
										}
									},
									{
										"source": {
											"path": "$['Reg3']"
										},
										"sink": {
											"name": "Reg3"
										}
									},
									{
										"source": {
											"path": "$['Reg4']"
										},
										"sink": {
											"name": "Reg4"
										}
									},
									{
										"source": {
											"path": "$['Reg5']"
										},
										"sink": {
											"name": "Reg5"
										}
									},
									{
										"source": {
											"path": "$['Reg6']"
										},
										"sink": {
											"name": "Reg6"
										}
									},
									{
										"source": {
											"path": "$['Reg7']"
										},
										"sink": {
											"name": "Reg7"
										}
									},
									{
										"source": {
											"path": "$['Reg8']"
										},
										"sink": {
											"name": "Reg8"
										}
									},
									{
										"source": {
											"path": "$['BedNoReg1']"
										},
										"sink": {
											"name": "BedNoReg1"
										}
									},
									{
										"source": {
											"path": "$['BedNoReg2']"
										},
										"sink": {
											"name": "BedNoReg2"
										}
									},
									{
										"source": {
											"path": "$['BedNoReg3']"
										},
										"sink": {
											"name": "BedNoReg3"
										}
									},
									{
										"source": {
											"path": "$['BedNoReg4']"
										},
										"sink": {
											"name": "BedNoReg4"
										}
									},
									{
										"source": {
											"path": "$['BedNoReg5']"
										},
										"sink": {
											"name": "BedNoReg5"
										}
									},
									{
										"source": {
											"path": "$['BedNoReg6']"
										},
										"sink": {
											"name": "BedNoReg6"
										}
									},
									{
										"source": {
											"path": "$['BedNoReg7']"
										},
										"sink": {
											"name": "BedNoReg7"
										}
									},
									{
										"source": {
											"path": "$['BedNoReg8']"
										},
										"sink": {
											"name": "BedNoReg8"
										}
									},
									{
										"source": {
											"path": "$['NominalReg1']"
										},
										"sink": {
											"name": "NominalReg1"
										}
									},
									{
										"source": {
											"path": "$['NominalReg2']"
										},
										"sink": {
											"name": "NominalReg2"
										}
									},
									{
										"source": {
											"path": "$['NominalReg3']"
										},
										"sink": {
											"name": "NominalReg3"
										}
									},
									{
										"source": {
											"path": "$['NominalReg4']"
										},
										"sink": {
											"name": "NominalReg4"
										}
									},
									{
										"source": {
											"path": "$['NominalReg5']"
										},
										"sink": {
											"name": "NominalReg5"
										}
									},
									{
										"source": {
											"path": "$['NominalReg6']"
										},
										"sink": {
											"name": "NominalReg6"
										}
									},
									{
										"source": {
											"path": "$['NominalReg7']"
										},
										"sink": {
											"name": "NominalReg7"
										}
									},
									{
										"source": {
											"path": "$['NominalReg8']"
										},
										"sink": {
											"name": "NominalReg8"
										}
									},
									{
										"source": {
											"path": "$['NursingReg1']"
										},
										"sink": {
											"name": "NursingReg1"
										}
									},
									{
										"source": {
											"path": "$['NursingReg2']"
										},
										"sink": {
											"name": "NursingReg2"
										}
									},
									{
										"source": {
											"path": "$['NursingReg3']"
										},
										"sink": {
											"name": "NursingReg3"
										}
									},
									{
										"source": {
											"path": "$['NursingReg4']"
										},
										"sink": {
											"name": "NursingReg4"
										}
									},
									{
										"source": {
											"path": "$['NursingReg5']"
										},
										"sink": {
											"name": "NursingReg5"
										}
									},
									{
										"source": {
											"path": "$['NursingReg6']"
										},
										"sink": {
											"name": "NursingReg6"
										}
									},
									{
										"source": {
											"path": "$['NursingReg7']"
										},
										"sink": {
											"name": "NursingReg7"
										}
									},
									{
										"source": {
											"path": "$['NursingReg8']"
										},
										"sink": {
											"name": "NursingReg8"
										}
									},
									{
										"source": {
											"path": "$['MinFeesReg1']"
										},
										"sink": {
											"name": "MinFeesReg1"
										}
									},
									{
										"source": {
											"path": "$['MinFeesReg2']"
										},
										"sink": {
											"name": "MinFeesReg2"
										}
									},
									{
										"source": {
											"path": "$['MinFeesReg3']"
										},
										"sink": {
											"name": "MinFeesReg3"
										}
									},
									{
										"source": {
											"path": "$['MinFeesReg4']"
										},
										"sink": {
											"name": "MinFeesReg4"
										}
									},
									{
										"source": {
											"path": "$['MinFeesReg5']"
										},
										"sink": {
											"name": "MinFeesReg5"
										}
									},
									{
										"source": {
											"path": "$['MinFeesReg6']"
										},
										"sink": {
											"name": "MinFeesReg6"
										}
									},
									{
										"source": {
											"path": "$['MinFeesReg7']"
										},
										"sink": {
											"name": "MinFeesReg7"
										}
									},
									{
										"source": {
											"path": "$['MinFeesReg8']"
										},
										"sink": {
											"name": "MinFeesReg8"
										}
									},
									{
										"source": {
											"path": "$['NextInvRun']"
										},
										"sink": {
											"name": "NextInvRun"
										}
									},
									{
										"source": {
											"path": "$['NextPayrollRun']"
										},
										"sink": {
											"name": "NextPayrollRun"
										}
									},
									{
										"source": {
											"path": "$['NextPayPeriod']"
										},
										"sink": {
											"name": "NextPayPeriod"
										}
									},
									{
										"source": {
											"path": "$['PayrollPeriod']"
										},
										"sink": {
											"name": "PayrollPeriod"
										}
									},
									{
										"source": {
											"path": "$['PayrollNoPrefix']"
										},
										"sink": {
											"name": "PayrollNoPrefix"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetStd1']"
										},
										"sink": {
											"name": "StfBudgetStd1"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetStd2']"
										},
										"sink": {
											"name": "StfBudgetStd2"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetStd3']"
										},
										"sink": {
											"name": "StfBudgetStd3"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetStd4']"
										},
										"sink": {
											"name": "StfBudgetStd4"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetStd5']"
										},
										"sink": {
											"name": "StfBudgetStd5"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetStd6']"
										},
										"sink": {
											"name": "StfBudgetStd6"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetStd7']"
										},
										"sink": {
											"name": "StfBudgetStd7"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetVar1']"
										},
										"sink": {
											"name": "StfBudgetVar1"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetVar2']"
										},
										"sink": {
											"name": "StfBudgetVar2"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetVar3']"
										},
										"sink": {
											"name": "StfBudgetVar3"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetVar4']"
										},
										"sink": {
											"name": "StfBudgetVar4"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetVar5']"
										},
										"sink": {
											"name": "StfBudgetVar5"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetVar6']"
										},
										"sink": {
											"name": "StfBudgetVar6"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetVar7']"
										},
										"sink": {
											"name": "StfBudgetVar7"
										}
									},
									{
										"source": {
											"path": "$['InvoiceFooter']"
										},
										"sink": {
											"name": "InvoiceFooter"
										}
									},
									{
										"source": {
											"path": "$['HolidayStartDate']"
										},
										"sink": {
											"name": "HolidayStartDate"
										}
									},
									{
										"source": {
											"path": "$['HomeAccRef']"
										},
										"sink": {
											"name": "HomeAccRef"
										}
									},
									{
										"source": {
											"path": "$['Department']"
										},
										"sink": {
											"name": "Department"
										}
									},
									{
										"source": {
											"path": "$['CommandPath']"
										},
										"sink": {
											"name": "CommandPath"
										}
									},
									{
										"source": {
											"path": "$['CommsNotes']"
										},
										"sink": {
											"name": "CommsNotes"
										}
									},
									{
										"source": {
											"path": "$['deleted']"
										},
										"sink": {
											"name": "deleted"
										}
									},
									{
										"source": {
											"path": "$['deviceID']"
										},
										"sink": {
											"name": "deviceID"
										}
									},
									{
										"source": {
											"path": "$['IP1']"
										},
										"sink": {
											"name": "IP1"
										}
									},
									{
										"source": {
											"path": "$['IP2']"
										},
										"sink": {
											"name": "IP2"
										}
									},
									{
										"source": {
											"path": "$['IP3']"
										},
										"sink": {
											"name": "IP3"
										}
									},
									{
										"source": {
											"path": "$['IP4']"
										},
										"sink": {
											"name": "IP4"
										}
									},
									{
										"source": {
											"path": "$['Port']"
										},
										"sink": {
											"name": "Port"
										}
									},
									{
										"source": {
											"path": "$['CCCompany_ID']"
										},
										"sink": {
											"name": "CCCompany_ID"
										}
									},
									{
										"source": {
											"path": "$['CCHome_ID']"
										},
										"sink": {
											"name": "CCHome_ID"
										}
									},
									{
										"source": {
											"path": "$['Header1']"
										},
										"sink": {
											"name": "Header1"
										}
									},
									{
										"source": {
											"path": "$['Header2']"
										},
										"sink": {
											"name": "Header2"
										}
									},
									{
										"source": {
											"path": "$['invFooterBACS']"
										},
										"sink": {
											"name": "invFooterBACS"
										}
									},
									{
										"source": {
											"path": "$['invFooterDirect']"
										},
										"sink": {
											"name": "invFooterDirect"
										}
									},
									{
										"source": {
											"path": "$['invFooterCheque']"
										},
										"sink": {
											"name": "invFooterCheque"
										}
									},
									{
										"source": {
											"path": "$['invFooterCash']"
										},
										"sink": {
											"name": "invFooterCash"
										}
									},
									{
										"source": {
											"path": "$['invFooterStanding']"
										},
										"sink": {
											"name": "invFooterStanding"
										}
									},
									{
										"source": {
											"path": "$['invFooterSpare']"
										},
										"sink": {
											"name": "invFooterSpare"
										}
									},
									{
										"source": {
											"path": "$['InvAddressLine']"
										},
										"sink": {
											"name": "InvAddressLine"
										}
									},
									{
										"source": {
											"path": "$['InvAddressLine1']"
										},
										"sink": {
											"name": "InvAddressLine1"
										}
									},
									{
										"source": {
											"path": "$['doubleLineRota']"
										},
										"sink": {
											"name": "doubleLineRota"
										}
									},
									{
										"source": {
											"path": "$['upperAnalysisLimit']"
										},
										"sink": {
											"name": "upperAnalysisLimit"
										}
									},
									{
										"source": {
											"path": "$['lowerAnalysisLimit']"
										},
										"sink": {
											"name": "lowerAnalysisLimit"
										}
									},
									{
										"source": {
											"path": "$['analysisTickSize']"
										},
										"sink": {
											"name": "analysisTickSize"
										}
									},
									{
										"source": {
											"path": "$['AppraisalLength']"
										},
										"sink": {
											"name": "AppraisalLength"
										}
									},
									{
										"source": {
											"path": "$['SSLength']"
										},
										"sink": {
											"name": "SSLength"
										}
									},
									{
										"source": {
											"path": "$['InductionLength']"
										},
										"sink": {
											"name": "InductionLength"
										}
									},
									{
										"source": {
											"path": "$['RotaStartDateHome']"
										},
										"sink": {
											"name": "RotaStartDateHome"
										}
									},
									{
										"source": {
											"path": "$['cost_centre']"
										},
										"sink": {
											"name": "cost_centre"
										}
									},
									{
										"source": {
											"path": "$['pooltshprefix']"
										},
										"sink": {
											"name": "pooltshprefix"
										}
									},
									{
										"source": {
											"path": "$['emarx_id']"
										},
										"sink": {
											"name": "emarx_id"
										}
									},
									{
										"source": {
											"path": "$['home_emarx_connection']"
										},
										"sink": {
											"name": "home_emarx_connection"
										}
									},
									{
										"source": {
											"path": "$['home_emarx_username']"
										},
										"sink": {
											"name": "home_emarx_username"
										}
									},
									{
										"source": {
											"path": "$['home_emarx_password']"
										},
										"sink": {
											"name": "home_emarx_password"
										}
									},
									{
										"source": {
											"path": "$['ResponsibleUser']"
										},
										"sink": {
											"name": "ResponsibleUser"
										}
									},
									{
										"source": {
											"path": "$['is_using_v3']"
										},
										"sink": {
											"name": "is_using_v3"
										}
									},
									{
										"source": {
											"path": "$['invoice_pdf_password']"
										},
										"sink": {
											"name": "invoice_pdf_password"
										}
									},
									{
										"source": {
											"path": "$['timesheetStartDay']"
										},
										"sink": {
											"name": "timesheetStartDay"
										}
									},
									{
										"source": {
											"path": "$['RotaStartDay']"
										},
										"sink": {
											"name": "RotaStartDay"
										}
									},
									{
										"source": {
											"path": "$['StaffAppRotaView']"
										},
										"sink": {
											"name": "StaffAppRotaView"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Fusion_Homes_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "FusionHomes"
								}
							}
						]
					},
					{
						"name": "Assessment Headers",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Fusion_Json_File",
								"type": "DatasetReference",
								"parameters": {
									"Filename": "Assessement Header.json"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Fusion",
									"Table": "cp_assessment_header"
								}
							}
						]
					},
					{
						"name": "Assessment Completed",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"parallelCopies": 16
						},
						"inputs": [
							{
								"referenceName": "DS_Fusion_Json_File",
								"type": "DatasetReference",
								"parameters": {
									"Filename": "Assessement Completed Jan 2025.json"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Fusion",
									"Table": "cp_assessment_completed"
								}
							}
						]
					},
					{
						"name": "Assessment Completed Answers",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Fusion_Json_File",
								"type": "DatasetReference",
								"parameters": {
									"Filename": "Assessement Completed Answers 2819980.json"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Fusion",
									"Table": "cp_assessment_completedanswers"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Fusion"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Fusion_Resident_json')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_YardiStage')]",
				"[concat(variables('factoryId'), '/datasets/DS_Fusion_Homes_json')]",
				"[concat(variables('factoryId'), '/datasets/DS_Fusion_Json_File')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_GRG_ACCOUNT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Refreshes the GRG ACCOUNT data in TRANSFORM_DB",
				"activities": [
					{
						"name": "Copy Account Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set HOME_REF_LIST",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT [ACCNO]\n      ,[ACCSUFFIX]\n      ,[ACCTYPE]\n      ,[ACCTYPE2]\n      ,[ACCTYPE_DECODE]\n      ,[ACC_REF]\n      ,[AmendDateTime]\n      ,[CALENDAR]\n      ,[CAL_REF]\n      ,[CHGPER]\n      ,[Cnta_Det_Ref]\n      ,[Cont_Ref]\n      ,[CreateDateTime]\n      ,[DAILYRATE]\n      ,[ENDDATE]\n      ,[FINALINV]\n      ,[FS_REF]\n      ,[FUNDSOURCE]\n      ,[HOME_REF]\n      ,[LASTRATEDT]\n      ,[ORIGREF]\n      ,[PENSBOOK]\n      ,[PROFILE]\n      ,[RATE]\n      ,[RECGRP]\n      ,[RECGRPDESC]\n      ,[RELACCREF]\n      ,[RES_REF]\n      ,[RecType]\n      ,[STARTDATE]\n      ,[SUFFIXSUPERCEDED]\n      ,[ANAL3]\n      ,[ATTENTION]\n      ,[AUTHORISED]\n      ,[CONSULTANT]\n      ,[CRCONTROL]\n      ,[DEBTORCODE]\n      ,[FUNDREQEDI]\n      ,[FURC_DEC]\n      ,[INPFUNDAPR]\n      ,[LOCALITY]\n      ,[NURFUNDAPR]\n      ,[RECONCILED]\n      ,'' AS [BANKACC]\n      ,'' AS [BANKACCNAME]\n      ,'' AS [BANKADDRESS1]\n      ,'' AS [BANKADDRESS2]\n      ,'' AS [BANKADDRESS3]\n      ,'' AS [BANKADDRESS4]\n      ,'' AS [BANKNAME]\n      ,'' AS [BANKPOSTCODE]\n      ,'' AS [BANKSORTCODE]\n      ,[BANKSTREF]\n      ,[BANKTRTYPE]\n      ,[DDMANDREF]\n      ,[SOCOLDAY]\n      ,[SOCOLLECT]\n      ,[SOVALUE]\n      ,[USAGE]\n      ,[CALCODE]\n      ,[PCTDESC]\n      ,[REVDATE]\n  FROM [AHC_GRG_FBWIN].[dbo].[ACCOUNT] AS A\n   WHERE\n\tA.HOME_REF IN   (@{variables('HOME_REF_LIST')})\nORDER BY\n\tACC_REF ASC",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE GRG.ACCOUNT",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ACCNO",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ACCNO",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "ACCSUFFIX",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ACCSUFFIX",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "ACCTYPE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ACCTYPE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ACCTYPE2",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ACCTYPE2",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "ACCTYPE_DECODE",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ACCTYPE_DECODE",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ACC_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ACC_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AmendDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "AmendDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CALENDAR",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CALENDAR",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CAL_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CAL_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CHGPER",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CHGPER",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "Cnta_Det_Ref",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Cnta_Det_Ref",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Cont_Ref",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Cont_Ref",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreateDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreateDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DAILYRATE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 12
										},
										"sink": {
											"name": "DAILYRATE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 12
										}
									},
									{
										"source": {
											"name": "ENDDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ENDDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "FINALINV",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "FINALINV",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "FS_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "FS_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "FUNDSOURCE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FUNDSOURCE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LASTRATEDT",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "LASTRATEDT",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ORIGREF",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ORIGREF",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PENSBOOK",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "PENSBOOK",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "PROFILE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PROFILE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RATE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 12
										},
										"sink": {
											"name": "RATE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 12
										}
									},
									{
										"source": {
											"name": "RECGRP",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "RECGRP",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "RECGRPDESC",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RECGRPDESC",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RELACCREF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RELACCREF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RES_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RES_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RecType",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "RecType",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "STARTDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "STARTDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SUFFIXSUPERCEDED",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "SUFFIXSUPERCEDED",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "ANAL3",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ANAL3",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ATTENTION",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ATTENTION",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AUTHORISED",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "AUTHORISED",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "CONSULTANT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CONSULTANT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CRCONTROL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CRCONTROL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DEBTORCODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DEBTORCODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FUNDREQEDI",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "FUNDREQEDI",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "FURC_DEC",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FURC_DEC",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "INPFUNDAPR",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "INPFUNDAPR",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LOCALITY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LOCALITY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "NURFUNDAPR",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "NURFUNDAPR",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RECONCILED",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RECONCILED",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BANKACC",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BANKACC",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BANKACCNAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BANKACCNAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BANKADDRESS1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BANKADDRESS1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BANKADDRESS2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BANKADDRESS2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BANKADDRESS3",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BANKADDRESS3",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BANKADDRESS4",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BANKADDRESS4",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BANKNAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BANKNAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BANKPOSTCODE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "BANKPOSTCODE",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "BANKSORTCODE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "BANKSORTCODE",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "BANKSTREF",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BANKSTREF",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BANKTRTYPE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BANKTRTYPE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DDMANDREF",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DDMANDREF",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SOCOLDAY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SOCOLDAY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SOCOLLECT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SOCOLLECT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SOVALUE",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SOVALUE",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "USAGE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "USAGE",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "CALCODE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CALCODE",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "PCTDESC",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PCTDESC",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "REVDATE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "REVDATE",
											"type": "String",
											"physicalType": "char"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_GRG",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "GRG",
									"Table": "ACCOUNT"
								}
							}
						]
					},
					{
						"name": "Lookup HOME_REF",
						"description": "Get all the HOME_REF values from Avery.Home",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT STRING_AGG(ColdHarbourHOME_REF, ',') AS HOME_REF_LIST FROM Avery.Home WHERE ColdHarbourHOME_REF IS NOT NULL",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AH2_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Set HOME_REF_LIST",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup HOME_REF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "HOME_REF_LIST",
							"value": {
								"value": "@activity('Lookup HOME_REF').output.firstRow.HOME_REF_LIST",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"HOME_REF_LIST": {
						"type": "String"
					}
				},
				"folder": {
					"name": "GRG/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_OnPrem_CH_GRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_Avery')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_GRG_ADMIN_DISCHARGE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Movement Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set HOME_REF_LIST",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT  \r\n\t[ACTDEATHDT]\r\n\t,[ADANAL_DEC]\r\n\t,[ADTYP_DEC]\r\n\t,[AD_REF]\r\n\t,[AmendDateTime]\r\n\t,[CAUSE]\r\n\t,[CAUSEDEATH]\r\n\t,[CreateDateTime]\r\n\t,[DATE]\r\n\t,[DISCHDECEAS]\r\n\t,[DISDEST]\r\n\t,[DISREASON]\r\n\t,[DISTYPE]\r\n\t,[DOCTOR]\r\n\t,[FINALDISCH]\r\n\t,[HOME_REF]\r\n\t,[INITIALADM]\r\n\t,[INOUT]\r\n\t,[LOC_REF]\r\n\t,[MOVE_REF]\r\n\t,[PLACE]\r\n\t,[REASON]\r\n\t,[RES_REF]\r\n\t,[ROOM]\r\n\t,[ROOM_TYPE]\r\n\t,[TIME]\r\n\t,[MOVE_TIME]\r\n\t,[ANALCHANGE]\r\n\t,[COMPOSITE]\r\n\t,[MOVESUB_REF]\r\n\t,[PREVDISDEST]\r\n\t,[PREVDISTYPE]\r\nFROM \r\n\t[AHC_GRG_FBWIN].[dbo].[ADMIN_DISCHARGE] AS M\r\nWHERE\r\n\tM.HOME_REF IN (@{variables('HOME_REF_LIST')})\r\nORDER BY \r\n\tAD_REF ASC\r\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE GRG.ADMIN_DISCHARGE",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ACTDEATHDT",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ACTDEATHDT",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ADANAL_DEC",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ADANAL_DEC",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ADTYP_DEC",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ADTYP_DEC",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AD_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "AD_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AmendDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "AmendDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CAUSE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CAUSE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CAUSEDEATH",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CAUSEDEATH",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreateDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreateDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DISCHDECEAS",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DISCHDECEAS",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "DISDEST",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DISDEST",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DISREASON",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DISREASON",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DISTYPE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DISTYPE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DOCTOR",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DOCTOR",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FINALDISCH",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "FINALDISCH",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "INITIALADM",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "INITIALADM",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "INOUT",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "INOUT",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "LOC_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LOC_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "MOVE_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "MOVE_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PLACE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PLACE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "REASON",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "REASON",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "RES_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RES_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ROOM",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ROOM",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "ROOM_TYPE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ROOM_TYPE",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "TIME",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "TIME",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "MOVE_TIME",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "MOVE_TIME",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "ANALCHANGE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ANALCHANGE",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "COMPOSITE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "COMPOSITE",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "MOVESUB_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "MOVESUB_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PREVDISDEST",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PREVDISDEST",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PREVDISTYPE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PREVDISTYPE",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_GRG",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "GRG",
									"Table": "ADMIN_DISCHARGE"
								}
							}
						]
					},
					{
						"name": "Lookup HOME_REF",
						"description": "Get all the HOME_REF values from Avery.Home",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT STRING_AGG(ColdHarbourHOME_REF, ',') AS HOME_REF_LIST FROM Avery.Home WHERE ColdHarbourHOME_REF IS NOT NULL",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AH2_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Set HOME_REF_LIST",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup HOME_REF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "HOME_REF_LIST",
							"value": {
								"value": "@activity('Lookup HOME_REF').output.firstRow.HOME_REF_LIST",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"HOME_REF_LIST": {
						"type": "String"
					}
				},
				"folder": {
					"name": "GRG/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_OnPrem_CH_GRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_Avery')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_GRG_CHIP_Resident_Diary')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copies the resident diary entries from CH to AH2 Transform",
				"activities": [
					{
						"name": "Copy Resident Diary",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT \n\tResident_Dy.RES_DY_REF,\n\tResident_Dy.RES_REF,\n\tR.RES_CODE,\n    ChSysDec.Description AS EntryType,\n    CAST(Resident_Dy.Entry_Date AS DATE) AS EntryDate,\n\tCAST(Resident_Dy.Review_Date AS DATE) AS ReviewDate,\n    replace(cast(Resident_Dy.Entry_Text as varchar(MAX)), char(13) + char(10), ' ') AS DiaryEntry,\n    isnull(User_Hd.Name, '') AS EnteredBy\nFROM \n    Resident_Dy (NOLOCK)\n    \n    LEFT JOIN Chsysdec (NOLOCK)\n        ON Chsysdec.Decode_Ref = Resident_Dy.Entry_Type\n        \n    LEFT JOIN User_Hd (NOLOCK)\n        ON User_Hd.User_Ref = Resident_Dy.User_Ref\n\n\tLEFT JOIN RESIDENT AS R (NOLOCK)\n\t\tON R.RES_REF = Resident_Dy.RES_REF",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"RES_DY_REF"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "RES_DY_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RES_DY_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RES_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RES_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RES_CODE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "RES_CODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EntryType",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "EntryType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EntryDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "EntryDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "ReviewDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "ReviewDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "DiaryEntry",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DiaryEntry",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EnteredBy",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "EnteredBy",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_IP",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "GRG",
									"Table": "ResidentDiary"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "GRG/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_OnPrem_CH_IP')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_GRG_DailyOccupancySnapshot')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Populate DailyOccupancySnapshot",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AH2_TRANSFORM_DB",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "EXEC GRG.Populate$DailyOccupancySnapshot"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "GRG/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_GRG_HOME')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Home IDs for CH IP and GRG",
				"activities": [
					{
						"name": "Copy Home IDs",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT HOME_ID, HOME_NAME, HOME_REF FROM dbo.HOME\nORDER BY 1 ASC",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "HOME_ID",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "SiteID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HOME_NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_GRG",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "GRG",
									"Table": "HOME"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "GRG/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_OnPrem_CH_GRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_GRG_RESIDENT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Resident Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set HOME_REF_LIST",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT \n[ADANAL_DEC]\n      ,[ADDRESS1]\n      ,[ADDRESS2]\n      ,[ADDRESS3]\n      ,[ADDRESS4]\n      ,[ADMSN_ANAL]\n      ,[ADMSN_TYPE]\n      ,[ADM_REASON]\n      ,[ADTYP_DEC]\n      ,[ANAL_GROUP]\n      ,[AUTHORITY]\n      ,R.[AmendDateTime]\n      ,[BIRTHDATE]\n      ,[CARECAT]\n      ,[CONTSIGNED]\n      ,R.[CreateDateTime]\n      ,[DISABILITY]\n      ,[ENQ_REF]\n      ,[HOME]\n      ,R.[HOME_REF]\n      ,[LASTADDATE]\n      ,[LASTDIDATE]\n      ,[LOC_DESC]\n      ,[LOC_REF]\n      ,[MARKETING]\n      ,[NINUMBER]\n      ,[OCC_IGNORE]\n      ,[ORES_REF]\n      ,[ORIGADDATE]\n      ,[POSTCODE]\n      ,[RELIGION]\n      ,[RESPAYINT]\n      ,[RES_CODE]\n      ,[RES_FNAME]\n      ,[RES_REF]\n      ,[RES_SNAME]\n      ,[ROOM]\n      ,[ROOMCAT]\n      ,[ROOM_DESC]\n      ,[ROOM_TYPE]\n      ,[SEX]\n      ,[STATUS]\n      ,[TEL_NO1]\n      ,[TEL_NO2]\n      ,[TITLE]\n      ,[USERDEF]\n      ,[AUTHCODE]\n      ,[DOUBLEINS]\n      ,[FIRSTAWARE]\n      ,[FIRSTVISIT]\n      ,[REAL_FNAME]\n      ,[REAL_SNAME]\n      ,[REAL_TITLE]\n      ,[SIGIND]\n      ,[THIRDPARTY]\n      ,[USERFIELD1]\n      ,[USERFIELD2]\n      ,[USERFIELD3]\n      ,[NHSNUMBER]\n      ,[ALTCOMMS]\n      ,[ALTCOMMS_REF]\n      ,[ASS_ACTBY]\n      ,[ASS_ACTBY_REF]\n      ,[ASS_ACTDT]\n      ,[CONNECTION]\n      ,[CONNECTIONDET]\n      ,[CONNECTION_REF]\n      ,[FUNDERREF]\n      ,[LANGUAGE]\n      ,[LANGUAGE_REF]\n      ,[MOVEDINFROM]\n      ,[MOVEDINFROM_REF]\n      ,[PATIENTREF]\n      ,[PICID]\n      ,[PREVCODE]\n  FROM [AHC_GRG_FBWIN].[dbo].[RESIDENT] AS R\n\n  WHERE\n\tR.HOME_REF IN (@{variables('HOME_REF_LIST')}) --Home_ref List of homes being used in CH. Excludes any old ones being brought in\n    AND RES_CODE NOT IN ('HH0048', 'HH0051', 'HH0055', 'HH0060', 'HH0063', 'HH0064', 'HH0066') --Orphaned records in GRG for residents not present in CH\n  ORDER BY\n\t  R.RES_REF ASC",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE GRG.RESIDENT",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ADANAL_DEC",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ADANAL_DEC",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ADDRESS1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDRESS1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDRESS2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS3",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDRESS3",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS4",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDRESS4",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADMSN_ANAL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADMSN_ANAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADMSN_TYPE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADMSN_TYPE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADM_REASON",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADM_REASON",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADTYP_DEC",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ADTYP_DEC",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ANAL_GROUP",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ANAL_GROUP",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AUTHORITY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AUTHORITY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AmendDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "AmendDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "BIRTHDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "BIRTHDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CARECAT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CARECAT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CONTSIGNED",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CONTSIGNED",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "CreateDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreateDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DISABILITY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DISABILITY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ENQ_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ENQ_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "HOME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HOME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LASTADDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "LASTADDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "LASTDIDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "LASTDIDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "LOC_DESC",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LOC_DESC",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LOC_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LOC_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "MARKETING",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MARKETING",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "NINUMBER",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "NINUMBER",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "OCC_IGNORE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "OCC_IGNORE",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "ORES_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ORES_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ORIGADDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ORIGADDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "POSTCODE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "POSTCODE",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "RELIGION",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RELIGION",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RESPAYINT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RESPAYINT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RES_CODE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "RES_CODE",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "RES_FNAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RES_FNAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RES_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RES_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RES_SNAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RES_SNAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ROOM",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ROOM",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "ROOMCAT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ROOMCAT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ROOM_DESC",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ROOM_DESC",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ROOM_TYPE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ROOM_TYPE",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "SEX",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "SEX",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "STATUS",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "STATUS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TEL_NO1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TEL_NO1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TEL_NO2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TEL_NO2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TITLE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TITLE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "USERDEF",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "USERDEF",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AUTHCODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AUTHCODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DOUBLEINS",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DOUBLEINS",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "FIRSTAWARE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "FIRSTAWARE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "FIRSTVISIT",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "FIRSTVISIT",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "REAL_FNAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "REAL_FNAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "REAL_SNAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "REAL_SNAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "REAL_TITLE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "REAL_TITLE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SIGIND",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "SIGIND",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "THIRDPARTY",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "THIRDPARTY",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "USERFIELD1",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "USERFIELD1",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "USERFIELD2",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "USERFIELD2",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "USERFIELD3",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "USERFIELD3",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "NHSNUMBER",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "NHSNUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ALTCOMMS",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ALTCOMMS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ALTCOMMS_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ALTCOMMS_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ASS_ACTBY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ASS_ACTBY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ASS_ACTBY_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ASS_ACTBY_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ASS_ACTDT",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ASS_ACTDT",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CONNECTION",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CONNECTION",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CONNECTIONDET",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CONNECTIONDET",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CONNECTION_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CONNECTION_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "FUNDERREF",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FUNDERREF",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LANGUAGE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LANGUAGE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LANGUAGE_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LANGUAGE_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "MOVEDINFROM",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MOVEDINFROM",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MOVEDINFROM_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "MOVEDINFROM_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PATIENTREF",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PATIENTREF",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PICID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PICID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PREVCODE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "PREVCODE",
											"type": "String",
											"physicalType": "char"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_GRG",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "GRG",
									"Table": "RESIDENT"
								}
							}
						]
					},
					{
						"name": "Lookup HOME_REF",
						"description": "Get all the HOME_REF values from Avery.Home",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT STRING_AGG(ColdHarbourHOME_REF, ',') AS HOME_REF_LIST FROM Avery.Home WHERE ColdHarbourHOME_REF IS NOT NULL",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AH2_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Set HOME_REF_LIST",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup HOME_REF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "HOME_REF_LIST",
							"value": {
								"value": "@activity('Lookup HOME_REF').output.firstRow.HOME_REF_LIST",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"HOME_REF_LIST": {
						"type": "String"
					}
				},
				"folder": {
					"name": "GRG/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_OnPrem_CH_GRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_Avery')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_GRG_ROOMS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Room Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set HOME_REF_LIST",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT  \r\n\tR.[AmendDateTime]\r\n    ,R.[CreateDateTime]\r\n    ,R.[HOME_REF]\r\n    ,R.[OLOC_REF]\r\n    ,[OROOM_REF]\r\n    ,[ROOM_CAT]\r\n    ,[ROOM_CAT_DESC]\r\n    ,[ROOM_CODE]\r\n    ,[ROOM_DESC]\r\n    ,[ROOM_NO_BEDS]\r\n    ,[ROOM_REF]\r\n    ,[ROOM_TYPE]\r\n    ,[ROOM_TYPE_DESC]\r\n    ,[CHARGEPERIOD]\r\n    ,[CURRENTRATE]\r\n    ,[RATEDATE]\r\n    ,[ROOM_UDF1]\r\n    ,[ROOM_UDF2]\r\n    ,[ROOM_UDF3]\r\n    ,[ROOM_UDF4]\r\n    ,R.[USEFLAG]\r\nFROM \r\n\t[AHC_GRG_FBWIN].[dbo].[ROOMS] AS R\r\nWHERE\r\n\t--R.AmendDateTime >= '2020-01-01'\r\n\tR.HOME_REF IN (@{variables('HOME_REF_LIST')})\r\nORDER BY \r\n\tROOM_REF ASC",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE GRG.ROOMS",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AmendDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "AmendDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreateDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreateDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "OLOC_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "OLOC_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "OROOM_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "OROOM_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ROOM_CAT",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ROOM_CAT",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ROOM_CAT_DESC",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ROOM_CAT_DESC",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ROOM_CODE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ROOM_CODE",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "ROOM_DESC",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ROOM_DESC",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ROOM_NO_BEDS",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ROOM_NO_BEDS",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ROOM_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ROOM_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ROOM_TYPE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ROOM_TYPE",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "ROOM_TYPE_DESC",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ROOM_TYPE_DESC",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "CHARGEPERIOD",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CHARGEPERIOD",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CURRENTRATE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 12
										},
										"sink": {
											"name": "CURRENTRATE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 12
										}
									},
									{
										"source": {
											"name": "RATEDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "RATEDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ROOM_UDF1",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "ROOM_UDF1",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "ROOM_UDF2",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "ROOM_UDF2",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "ROOM_UDF3",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "ROOM_UDF3",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "ROOM_UDF4",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "ROOM_UDF4",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "USEFLAG",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "USEFLAG",
											"type": "String",
											"physicalType": "char"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_GRG",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "GRG",
									"Table": "ROOMS"
								}
							}
						]
					},
					{
						"name": "Lookup HOME_REF",
						"description": "Get all the HOME_REF values from Avery.Home",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT STRING_AGG(ColdHarbourHOME_REF, ',') AS HOME_REF_LIST FROM Avery.Home WHERE ColdHarbourHOME_REF IS NOT NULL",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AH2_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Set HOME_REF_LIST",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup HOME_REF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "HOME_REF_LIST",
							"value": {
								"value": "@activity('Lookup HOME_REF').output.firstRow.HOME_REF_LIST",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"HOME_REF_LIST": {
						"type": "String"
					}
				},
				"folder": {
					"name": "GRG/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_OnPrem_CH_GRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_Avery')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_GRG_Refresh_TRANSFORM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Refresh Residents",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_GRG_RESIDENT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Refresh Rooms",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Populate Daily Occupancy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_GRG_ROOMS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Refresh Movement",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Refresh Rooms",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_GRG_ADMIN_DISCHARGE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Populate Daily Occupancy",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Refresh Accounts",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_GRG_DailyOccupancySnapshot",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Refresh Diary Entries",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Refresh Residents",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_GRG_CHIP_Resident_Diary",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Refresh Accounts",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Refresh Diary Entries",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_GRG_ACCOUNT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "GRG"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_GRG_RESIDENT')]",
				"[concat(variables('factoryId'), '/pipelines/PL_GRG_ROOMS')]",
				"[concat(variables('factoryId'), '/pipelines/PL_GRG_ADMIN_DISCHARGE')]",
				"[concat(variables('factoryId'), '/pipelines/PL_GRG_DailyOccupancySnapshot')]",
				"[concat(variables('factoryId'), '/pipelines/PL_GRG_CHIP_Resident_Diary')]",
				"[concat(variables('factoryId'), '/pipelines/PL_GRG_ACCOUNT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_GRG_ResidentContacts')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Export Resident Contacts",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT\n    Address1\n    ,Address2\n    ,Address3\n    ,Address4\n    ,AmendDateTime\n    ,Cont_SubType\n    ,Cont_SubTypeDec\n    ,CreateDateTime\n    ,Forenames\n    ,GRGApp_GrGsRef\n    ,GRGrep_Cnta_Det_Ref\n    ,Gen_Comments\n    ,PostCode\n    ,RelType\n    ,RelTypeDec\n    ,Res_Ref\n    ,Surname\n    ,Tel_No1\n    ,Tel_No2\n    ,TitleDec\n    ,oCnta_Det_Ref\n    ,Email\n    ,LASTUPDATE\nFROM \n    dbo.RESCONTACTS\nWHERE\n    Res_Ref IN (SELECT ORES_REF FROM RESIDENT WHERE HOME_REF IN (@{variables('Home_Ref_List')}))",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Address1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Address1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Address2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Address2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Address3",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Address3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Address4",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Address4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AmendDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "AmendDateTime",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Cont_SubType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Cont_SubType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Cont_SubTypeDec",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Cont_SubTypeDec",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CreateDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreateDateTime",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "Forenames",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Forenames",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "GRGApp_GrGsRef",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GRGApp_GrGsRef",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "GRGrep_Cnta_Det_Ref",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GRGrep_Cnta_Det_Ref",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Gen_Comments",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "Gen_Comments",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PostCode",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "PostCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RelType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RelType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RelTypeDec",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RelTypeDec",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Res_Ref",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Res_Ref",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Surname",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Surname",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Tel_No1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tel_No1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Tel_No2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Tel_No2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TitleDec",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TitleDec",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "oCnta_Det_Ref",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "oCnta_Det_Ref",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Email",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Email",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LASTUPDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "LASTUPDATE",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_GRG",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "GRG",
									"Table": "RESIDENTCONTACTS"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Home_Ref_List": {
						"type": "String",
						"defaultValue": "644,627,637,649,638,603,611,607,655,624,623,633,628,632,641,650,654,618,642,643,629,647,653,660,621,630,620,606,622,631,610,605,634,604,635,645,646,651,636,639,659,652,640,648"
					}
				},
				"folder": {
					"name": "Yardi/YardiStage"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_OnPrem_CH_GRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_YardiStage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_GRG_Residents')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy GRG Resident data",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ADANAL_DEC",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ADANAL_DEC",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ADDRESS1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDRESS1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDRESS2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS3",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDRESS3",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS4",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDRESS4",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADMSN_ANAL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADMSN_ANAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADMSN_TYPE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADMSN_TYPE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADM_REASON",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADM_REASON",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADTYP_DEC",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ADTYP_DEC",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ANAL_GROUP",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ANAL_GROUP",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AUTHORITY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AUTHORITY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AmendDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "AmendDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "BIRTHDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "BIRTHDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CARECAT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CARECAT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CONTSIGNED",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CONTSIGNED",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "CreateDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreateDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DISABILITY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DISABILITY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ENQ_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ENQ_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "HOME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HOME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LASTADDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "LASTADDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "LASTDIDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "LASTDIDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "LOC_DESC",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LOC_DESC",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LOC_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LOC_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "MARKETING",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MARKETING",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "NINUMBER",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "NINUMBER",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "OCC_IGNORE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "OCC_IGNORE",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "ORES_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ORES_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ORIGADDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ORIGADDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "POSTCODE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "POSTCODE",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "RELIGION",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RELIGION",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RESPAYINT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RESPAYINT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RES_CODE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "RES_CODE",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "RES_FNAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RES_FNAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RES_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RES_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RES_SNAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RES_SNAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ROOM",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ROOM",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "ROOMCAT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ROOMCAT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ROOM_DESC",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ROOM_DESC",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ROOM_TYPE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ROOM_TYPE",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "SEX",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "SEX",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "STATUS",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "STATUS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TEL_NO1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TEL_NO1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TEL_NO2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TEL_NO2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TITLE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TITLE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "USERDEF",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "USERDEF",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AUTHCODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AUTHCODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DOUBLEINS",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DOUBLEINS",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "FIRSTAWARE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "FIRSTAWARE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "FIRSTVISIT",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "FIRSTVISIT",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "REAL_FNAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "REAL_FNAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "REAL_SNAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "REAL_SNAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "REAL_TITLE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "REAL_TITLE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SIGIND",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "SIGIND",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "THIRDPARTY",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "THIRDPARTY",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "USERFIELD1",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "USERFIELD1",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "USERFIELD2",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "USERFIELD2",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "USERFIELD3",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "USERFIELD3",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "NHSNUMBER",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "NHSNUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ALTCOMMS",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ALTCOMMS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ALTCOMMS_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ALTCOMMS_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ASS_ACTBY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ASS_ACTBY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ASS_ACTBY_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ASS_ACTBY_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ASS_ACTDT",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ASS_ACTDT",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CONNECTION",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CONNECTION",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CONNECTIONDET",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CONNECTIONDET",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CONNECTION_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CONNECTION_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "FUNDERREF",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FUNDERREF",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LANGUAGE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LANGUAGE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LANGUAGE_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LANGUAGE_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "MOVEDINFROM",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MOVEDINFROM",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MOVEDINFROM_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "MOVEDINFROM_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PATIENTREF",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PATIENTREF",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PICID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PICID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PREVCODE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "PREVCODE",
											"type": "String",
											"physicalType": "char"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_Polestar",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "Resident"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "GRG",
									"Table": "Resident"
								}
							}
						]
					},
					{
						"name": "Export Residents",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT \n    ADANAL_DEC\n    ,ADDRESS1\n    ,ADDRESS2\n    ,ADDRESS3\n    ,ADDRESS4\n    ,ADMSN_ANAL\n    ,ADMSN_TYPE\n    ,ADM_REASON\n    ,ADTYP_DEC\n    ,ANAL_GROUP\n    ,AUTHORITY\n    ,AmendDateTime\n    ,BIRTHDATE\n    ,CARECAT\n    ,CONTSIGNED\n    ,CreateDateTime\n    ,DISABILITY\n    ,ENQ_REF\n    ,HOME\n    ,HOME_REF\n    ,LASTADDATE\n    ,LASTDIDATE\n    ,LOC_DESC\n    ,LOC_REF\n    ,MARKETING\n    ,NINUMBER\n    ,OCC_IGNORE\n    ,ORES_REF\n    ,ORIGADDATE\n    ,POSTCODE\n    ,RELIGION\n    ,RESPAYINT\n    ,RES_CODE\n    --,RES_FNAME\n\t,CASE \n\t\tWHEN CHARINDEX('&', RES_FNAME) > 0 THEN RES_FNAME\n\t\tWHEN CHARINDEX('-', RES_FNAME) > 0 THEN RES_FNAME\n\t\tELSE (SUBSTRING(RES_FNAME, 1, CHARINDEX(' ', RES_FNAME + ' ')))\n\tEND AS RES_FNAME\n    ,RES_REF\n    ,RES_SNAME\n    ,ROOM\n    ,ROOMCAT\n    ,ROOM_DESC\n    ,ROOM_TYPE\n    ,SEX\n    ,STATUS\n    ,TEL_NO1\n    ,TEL_NO2\n    ,TITLE\n    ,USERDEF\n    ,AUTHCODE\n    ,DOUBLEINS\n    ,FIRSTAWARE\n    ,FIRSTVISIT\n    ,REAL_FNAME\n    ,REAL_SNAME\n    ,REAL_TITLE\n    ,SIGIND\n    ,THIRDPARTY\n    ,USERFIELD1\n    ,USERFIELD2\n    ,USERFIELD3\n    ,NHSNUMBER\n    ,ALTCOMMS\n    ,ALTCOMMS_REF\n    ,ASS_ACTBY\n    ,ASS_ACTBY_REF\n    ,ASS_ACTDT\n    ,CONNECTION\n    ,CONNECTIONDET\n    ,CONNECTION_REF\n    ,FUNDERREF\n    ,LANGUAGE\n    ,LANGUAGE_REF\n    ,MOVEDINFROM\n    ,MOVEDINFROM_REF\n    ,PATIENTREF\n    ,PICID\n    ,PREVCODE\n\t,CASE \n\t\tWHEN CHARINDEX('\"', RES_FNAME) > 0 THEN\n\t\t\tLTRIM(SUBSTRING(\n\t\t\t\tRES_FNAME, \n\t\t\t\tCHARINDEX('\"',RES_FNAME, 1) + 1,\n\t\t\t\tCHARINDEX('\"', RES_FNAME, CHARINDEX('\"', RES_FNAME) + 1) - CHARINDEX('\"', RES_FNAME) - 1))\n\t\tWHEN CHARINDEX('(', RES_FNAME) > 0 THEN\n\t\t\tLTRIM(SUBSTRING(\n\t\t\t\tRES_FNAME, \n\t\t\t\tCHARINDEX('(',RES_FNAME, 1) + 1,\n\t\t\t\tCHARINDEX(')', RES_FNAME, CHARINDEX('(', RES_FNAME) + 1) - CHARINDEX('(', RES_FNAME) - 1))\n\t\tWHEN CHARINDEX('''', RES_FNAME) > 0 THEN\n\t\t\tLTRIM(SUBSTRING(\n\t\t\t\tRES_FNAME, \n\t\t\t\tCHARINDEX('''',RES_FNAME, 1) + 1,\n\t\t\t\tCHARINDEX('''', RES_FNAME, CHARINDEX('''', RES_FNAME) + 1) - CHARINDEX('''', RES_FNAME) - 1))\n\t\tELSE ''\n\tEND AS Preferred_Name\nFROM \n    dbo.RESIDENT\nWHERE\n    HOME_REF IN (@{variables('Home_Ref_List')})",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ADANAL_DEC",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ADANAL_DEC",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ADDRESS1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDRESS1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDRESS2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS3",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDRESS3",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS4",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDRESS4",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADMSN_ANAL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADMSN_ANAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADMSN_TYPE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADMSN_TYPE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADM_REASON",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADM_REASON",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADTYP_DEC",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ADTYP_DEC",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ANAL_GROUP",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ANAL_GROUP",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AUTHORITY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AUTHORITY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AmendDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "AmendDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "BIRTHDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "BIRTHDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CARECAT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CARECAT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CONTSIGNED",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CONTSIGNED",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "CreateDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreateDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DISABILITY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DISABILITY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ENQ_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ENQ_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "HOME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HOME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LASTADDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "LASTADDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "LASTDIDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "LASTDIDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "LOC_DESC",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LOC_DESC",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LOC_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LOC_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "MARKETING",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MARKETING",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "NINUMBER",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "NINUMBER",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "OCC_IGNORE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "OCC_IGNORE",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "ORES_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ORES_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ORIGADDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ORIGADDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "POSTCODE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "POSTCODE",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "RELIGION",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RELIGION",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RESPAYINT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RESPAYINT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RES_CODE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "RES_CODE",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "RES_FNAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RES_FNAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RES_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RES_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RES_SNAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RES_SNAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ROOM",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ROOM",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "ROOMCAT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ROOMCAT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ROOM_DESC",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ROOM_DESC",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ROOM_TYPE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ROOM_TYPE",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "SEX",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "SEX",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "STATUS",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "STATUS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TEL_NO1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TEL_NO1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TEL_NO2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TEL_NO2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TITLE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TITLE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "USERDEF",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "USERDEF",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AUTHCODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AUTHCODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DOUBLEINS",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DOUBLEINS",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "FIRSTAWARE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "FIRSTAWARE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "FIRSTVISIT",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "FIRSTVISIT",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "REAL_FNAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "REAL_FNAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "REAL_SNAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "REAL_SNAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "REAL_TITLE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "REAL_TITLE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SIGIND",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "SIGIND",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "THIRDPARTY",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "THIRDPARTY",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "USERFIELD1",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "USERFIELD1",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "USERFIELD2",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "USERFIELD2",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "USERFIELD3",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "USERFIELD3",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "NHSNUMBER",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "NHSNUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ALTCOMMS",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ALTCOMMS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ALTCOMMS_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ALTCOMMS_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ASS_ACTBY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ASS_ACTBY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ASS_ACTBY_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ASS_ACTBY_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ASS_ACTDT",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ASS_ACTDT",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CONNECTION",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CONNECTION",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CONNECTIONDET",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CONNECTIONDET",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CONNECTION_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CONNECTION_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "FUNDERREF",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FUNDERREF",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LANGUAGE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LANGUAGE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LANGUAGE_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LANGUAGE_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "MOVEDINFROM",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MOVEDINFROM",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MOVEDINFROM_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "MOVEDINFROM_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PATIENTREF",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PATIENTREF",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PICID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PICID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PREVCODE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "PREVCODE",
											"type": "String",
											"physicalType": "char"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_GRG",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "GRG",
									"Table": "RESIDENT"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Home_Ref_List": {
						"type": "String",
						"defaultValue": "644,627,637,649,638,603,611,607,655,624,623,633,628,632,641,650,654,618,642,643,629,647,653,660,621,630,620,606,622,631,610,605,634,604,635,645,646,651,636,639,659,652,640,648"
					}
				},
				"folder": {
					"name": "Yardi/YardiStage"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AH2_Polestar')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_YardiStage')]",
				"[concat(variables('factoryId'), '/datasets/DS_OnPrem_CH_GRG')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Homes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copies Homes table from AH1 to AH2 and also updates HomesID's in TRANSFORM_DB Avery.HomeID",
				"activities": [
					{
						"name": "Copy AH1 data to AH2",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_AH1_Homes-AH2_Homes",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Update HomeID table",
						"description": "Updates Avery.HomeDetails table in the TRANSFORM_DB with latest data ",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Copy AH1 data to AH2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Transform_HomeDetails",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Update Occupancy on AH2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Update HomeID table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_AH1_Occupancy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Avery"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-10T09:35:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_AH1_Homes-AH2_Homes')]",
				"[concat(variables('factoryId'), '/pipelines/PL_Transform_HomeDetails')]",
				"[concat(variables('factoryId'), '/pipelines/PL_AH1_Occupancy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Hydra_Output_File')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Downloads the Output file that Hydra generate from their FTP to an Azure Fileshare.",
				"activities": [
					{
						"name": "Download File",
						"description": "Downloads radar-output.xml file from Hydra FTP to azure blob storage",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Remove Existing File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FtpReadSettings",
									"recursive": true,
									"useBinaryTransfer": true,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Hydra_RadarFile",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Radar_AzureStorage",
								"type": "DatasetReference",
								"parameters": {
									"Date": {
										"value": "@variables('Date')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Remove Existing File",
						"description": "Deletes any previous radar-output.xml file on the fileshare before copying the new one there.",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Set Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_PolestarStorageAcc_Fileshare_radar_output_xml",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureFileStorageReadSettings",
								"recursive": false,
								"wildcardFileName": "radar-output*.xml",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Copy file to fileshare",
						"description": "",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Download File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureFileStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Radar_AzureStorage",
								"type": "DatasetReference",
								"parameters": {
									"Date": {
										"value": "@variables('Date')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Fileshare_radar_output_xml",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Set Date",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Date",
							"value": {
								"value": "@utcNow('yyyy-MM-dd')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Radar"
				},
				"annotations": [],
				"lastPublishTime": "2024-07-01T09:10:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Hydra_RadarFile')]",
				"[concat(variables('factoryId'), '/datasets/DS_Radar_AzureStorage')]",
				"[concat(variables('factoryId'), '/datasets/DS_PolestarStorageAcc_Fileshare_radar_output_xml')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Insert_ExchequerCompanyAccess')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Inserts the data from the Exported report into AH2 Avery Audit.ExchequerCompanyAccess",
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CompanyCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CompanyCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompanyName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CompanyName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "UserID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "UserName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ReportDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Exchequer_CSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Audit",
									"Table": "ExchequerCompanyAccess"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Exchequer/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-06-27T11:33:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PolestarStorageAcc_Exchequer_CSV')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_Avery')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_JobRoles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT ID\n      ,Job_Code\n      ,ISNULL(Job_Category, '') AS JobCategory\n      ,ISNULL(job_cat2, '') AS JobCategory2\n      ,ISNULL(Description, '') AS JobDesctiption\n      ,ISNULL(SupportType, '') AS SupportType\n  FROM dbo.WeeklyHrs_Cat\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "SET IDENTITY_INSERT Avery.JobRole ON ",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "JobRoleID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Job_Code",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "JobCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "JobCategory",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "JobCategory",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "JobCategory2",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "JobCategory2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "JobDesctiption",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "JobDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SupportType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SupportType",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH1_Avery_Homes",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Avery",
									"Table": "JobRole"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Avery/Children Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-05T09:36:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AH1_Avery_Homes')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_Avery')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_MCM_CallAPI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Service Users",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_MCM_GetData",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CommunityID": "04b8b5cb-f680-4aa1-b3ec-12ddb04b8d7d",
								"EndPoint": "serviceusers"
							}
						}
					},
					{
						"name": "nutritionreport",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Service Users",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_MCM_GetData",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CommunityID": "04b8b5cb-f680-4aa1-b3ec-12ddb04b8d7d",
								"EndPoint": "nutritionreport"
							}
						}
					},
					{
						"name": "riskassessment",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "nutritionreport",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_MCM_GetData",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CommunityID": "04b8b5cb-f680-4aa1-b3ec-12ddb04b8d7d",
								"EndPoint": "riskassessment"
							}
						}
					},
					{
						"name": "currentassessment",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "riskassessment",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_MCM_GetData",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CommunityID": "04b8b5cb-f680-4aa1-b3ec-12ddb04b8d7d",
								"EndPoint": "currentassessment"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "MCM"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_MCM_GetData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_MCM_GetData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Call AZ Function",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Az Func Code",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set MCM API Key",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:05:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_MCM_Data_Extract_CommunityId",
								"type": "DatasetReference",
								"parameters": {
									"MCM_endPoint": {
										"value": "@pipeline().parameters.EndPoint",
										"type": "Expression"
									},
									"MCM_api_key": {
										"value": "@variables('MCMAPIKey')",
										"type": "Expression"
									},
									"FunctionCode": {
										"value": "@variables('AzFuncCode')",
										"type": "Expression"
									},
									"CommunityId": {
										"value": "@pipeline().parameters.CommunityID",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_MCM_Json",
								"type": "DatasetReference",
								"parameters": {
									"FileType": {
										"value": "@pipeline().parameters.EndPoint",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Get AZ Func Code",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set End Point",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://avery-adf-keyvault.vault.azure.net/secrets/MCMDataExtractAzFunc/9ad6bb869bce44809b76c700e88d789f?api-version=7.3",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Set Az Func Code",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get AZ Func Code",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "AzFuncCode",
							"value": {
								"value": "@activity('Get AZ Func Code').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get MCM API key",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set End Point",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://avery-adf-keyvault.vault.azure.net/secrets/MCMJonCrockettAPIKey/bde96b82a47a40628426ca459ee044ec?api-version=7.3",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Set MCM API Key",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get MCM API key",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "MCMAPIKey",
							"value": {
								"value": "@activity('Get MCM API key').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set End Point",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Set Community Id",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "MCMEndPoint",
							"value": "nutritionreport"
						}
					},
					{
						"name": "Set Community Id",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "CommunityId",
							"value": "04b8b5cb-f680-4aa1-b3ec-12ddb04b8d7d"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"CommunityID": {
						"type": "string"
					},
					"EndPoint": {
						"type": "string"
					}
				},
				"variables": {
					"AzFuncCode": {
						"type": "String"
					},
					"MCMAPIKey": {
						"type": "String"
					},
					"MCMEndPoint": {
						"type": "String"
					},
					"CommunityId": {
						"type": "String"
					}
				},
				"folder": {
					"name": "MCM/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_MCM_Data_Extract_CommunityId')]",
				"[concat(variables('factoryId'), '/datasets/DS_MCM_Json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Polestar_Occupancy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy 90 Days Occupancy Data",
						"description": "Copies data from Polestar DB Occupancy table to TRANSFOR_DB OCCUPANCY_INCR table. Only the last 90 days of records",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set 90DayDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select * from dbo.Occupancy where CAST(CreateDateTime as date)>= '@{variables('DeleteDate')}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ABS_BILL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ABS_BILL",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "ADANAL_DEC",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ADANAL_DEC",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ADTYPE_DEC",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ADTYPE_DEC",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AmendDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "AmendDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Cont_Ref",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Cont_Ref",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreateDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreateDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "EXTROOM",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "EXTROOM",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "INHOME",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "INHOME",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "LOC_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LOC_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "OCC_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "OCC_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RES_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RES_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ROOM",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ROOM",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "RecType",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "RecType",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "TEMPDIS",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "TEMPDIS",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "VoidNo",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "VoidNo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "GROSSRATE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 12
										},
										"sink": {
											"name": "GROSSRATE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 12
										}
									},
									{
										"source": {
											"name": "ROOMRATE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 12
										},
										"sink": {
											"name": "ROOMRATE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 12
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_Polestar",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "STG",
									"Table": "OCCUPANCY_INCR"
								}
							}
						]
					},
					{
						"name": "Set 90DayDate",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "DeleteDate",
							"value": {
								"value": "@formatDateTime(addDays(utcNow(),-90),'yyyy-MM-dd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Add new records to Occupancy Table",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Copy 90 Days Occupancy Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AH2_TRANSFORM_DB",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "Delete from Transform_DB.STG.OCCUPANCY\nWHERE CreateDateTime>= '@{variables('DeleteDate')}'\n\nInsert into Transform_DB.STG.OCCUPANCY \nSelect * from Transform_DB.STG.OCCUPANCY_INCR",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"DeleteDate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Polestar ETL Process"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AH2_Polestar')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]",
				"[concat(variables('factoryId'), '/linkedServices/AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Pricing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Pipeline to update Pricing tables outside GRG refresh Window",
				"activities": [
					{
						"name": "Upsert Coldharbour Rooms",
						"description": "Updates the ColdHarbour.Rooms table from the Polestar DB. Polestar DB is a replication of the GRG database (CH reporting suite/DB)",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_ColdHarbour_Rooms",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Update Occupancy",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Upsert Coldharbour Rooms",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_ColdHarbour_RoomsWithInHomeResidents",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Avery"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-10T09:35:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_ColdHarbour_Rooms')]",
				"[concat(variables('factoryId'), '/pipelines/PL_ColdHarbour_RoomsWithInHomeResidents')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Pricing_CreateOrAlter_Views')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Executes procedures that create or alter views each day.",
				"activities": [
					{
						"name": "Attributes",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Pricing_vRoomAttributes",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Addons",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Attributes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Pricing_vRoomAddons",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Pricing"
				},
				"annotations": [],
				"lastPublishTime": "2024-07-19T13:59:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_Pricing_vRoomAttributes')]",
				"[concat(variables('factoryId'), '/pipelines/PL_Pricing_vRoomAddons')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Pricing_vRoomAddons')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Executes the Pricing.CreateOrAlter$vRoomAddons procedure in the Avey DB on AH2. The Stored procedure Creates or Alters the View to include all available Addons",
				"activities": [
					{
						"name": "EXEC CreateOrAlter vRoomAddons",
						"description": "EXECUTES Pricing.CreateOrAlter$vRoomAddons",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Pricing].[CreateOrAlter$vRoomAddons]"
						},
						"linkedServiceName": {
							"referenceName": "AH2_Avery",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Pricing/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-07-19T13:59:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH2_Avery')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Pricing_vRoomAttributes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Executes the Pricing.CreateOrAlter$RoomAttributes procedure in the Avey DB on AH2. The Store procedure Creates or Alters the View to include all available Attributes",
				"activities": [
					{
						"name": "EXEC  CreateOrAlter RoomAttributes",
						"description": "EXECUTES Pricing.CreateOrAlter$RoomAttributes",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Pricing].[CreateOrAlter$vRoomAttributes]"
						},
						"linkedServiceName": {
							"referenceName": "AH2_Avery",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Pricing/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-07-19T13:59:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH2_Avery')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Radar_SQLTables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "For Each DB Item",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.DBItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Item",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"preCopyScript": {
												"value": "DROP TABLE IF EXISTS \n[@{item().destination.schema}].[@{item().destination.table}]",
												"type": "Expression"
											},
											"writeBehavior": {
												"value": "@item().copySink.writeBehavior",
												"type": "Expression"
											},
											"sqlWriterUseTableLock": {
												"value": "@item().copySink.sqlWriterUseTableLock",
												"type": "Expression"
											},
											"upsertSettings": {
												"useTempDB": true
											},
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Radar_SQL",
											"type": "DatasetReference",
											"parameters": {
												"Schema": {
													"value": "@item().source.schema",
													"type": "Expression"
												},
												"Table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_AH2_TRANSFORM_DB",
											"type": "DatasetReference",
											"parameters": {
												"Schema": "@item().destination.schema",
												"Table": {
													"value": "@item().destination.table",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Send Error Message",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "For Each DB Item",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": "Pipeline failed",
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "For Each DB Item"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"DBItems": {
						"type": "array",
						"defaultValue": [
							{
								"source": {
									"schema": "Int",
									"table": "V_AccessControl_ObjectRuleSet"
								},
								"destination": {
									"schema": "Radar_AccessControl",
									"table": "ObjectRuleSet"
								},
								"copySink": {
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": true
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_AccessControl_RuleSet"
								},
								"destination": {
									"schema": "Radar_AccessControl",
									"table": "RuleSet"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_AccessControl_RuleSetRule"
								},
								"destination": {
									"schema": "Radar_AccessControl",
									"table": "RuleSetRule"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Actions_Action"
								},
								"destination": {
									"schema": "Radar_Actions",
									"table": "Action"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Actions_ActionObjectLink"
								},
								"destination": {
									"schema": "Radar_Actions",
									"table": "ActionObjectLink"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Actions_ActionPlanItem"
								},
								"destination": {
									"schema": "Radar_Actions",
									"table": "ActionPlanItem"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Actions_ActionPlanTag"
								},
								"destination": {
									"schema": "Radar_Actions",
									"table": "ActionPlanTag"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Actions_ActionPlanTags"
								},
								"destination": {
									"schema": "Radar_Actions",
									"table": "ActionPlanTags"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Actions_Control"
								},
								"destination": {
									"schema": "Radar_Actions",
									"table": "Control"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Actions_ScheduledTask"
								},
								"destination": {
									"schema": "Radar_Actions",
									"table": "ScheduledTask"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Actions_ScheduledTaskCategory"
								},
								"destination": {
									"schema": "Radar_Actions",
									"table": "ScheduledTaskCategory"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Actions_ScheduledTaskTag"
								},
								"destination": {
									"schema": "Radar_Actions",
									"table": "ScheduledTaskTag"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Actions_ScheduledTaskTags"
								},
								"destination": {
									"schema": "Radar_Actions",
									"table": "ScheduledTaskTags"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Actions_Update"
								},
								"destination": {
									"schema": "Radar_Actions",
									"table": "Update"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Analytics_FormTag"
								},
								"destination": {
									"schema": "Radar_Analytics",
									"table": "FormTag"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Audit_Comment"
								},
								"destination": {
									"schema": "Radar_Audit",
									"table": "Comment"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Audit_EvidenceActionPlanItem"
								},
								"destination": {
									"schema": "Radar_Audit",
									"table": "EvidenceActionPlanItem"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Audit_EvidenceAttachment"
								},
								"destination": {
									"schema": "Radar_Audit",
									"table": "EvidenceAttachment"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Audit_EvidenceComment"
								},
								"destination": {
									"schema": "Radar_Audit",
									"table": "EvidenceComment"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Audit_Outcome"
								},
								"destination": {
									"schema": "Radar_Audit",
									"table": "Outcome"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Audit_OutcomeRequirement"
								},
								"destination": {
									"schema": "Radar_Audit",
									"table": "OutcomeRequirement"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Audit_OutcomeRequirementTemplate"
								},
								"destination": {
									"schema": "Radar_Audit",
									"table": "OutcomeRequirementTemplate"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Audit_OutcomeTemplate"
								},
								"destination": {
									"schema": "Radar_Audit",
									"table": "OutcomeTemplate"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Audit_RequirementEvidence"
								},
								"destination": {
									"schema": "Radar_Audit",
									"table": "RequirementEvidence"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Audit_RequirementEvidenceTemplate"
								},
								"destination": {
									"schema": "Radar_Audit",
									"table": "RequirementEvidenceTemplate"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Audit_ScheduledAudit"
								},
								"destination": {
									"schema": "Radar_Audit",
									"table": "ScheduledAudit"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Audit_Template"
								},
								"destination": {
									"schema": "Radar_Audit",
									"table": "Template"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Audit_Type"
								},
								"destination": {
									"schema": "Radar_Audit",
									"table": "Type"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Audit_TypeThreshold"
								},
								"destination": {
									"schema": "Radar_Audit",
									"table": "TypeThreshold"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Audits_Instance"
								},
								"destination": {
									"schema": "Radar_Audits",
									"table": "Instance"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Audits_InstanceSection"
								},
								"destination": {
									"schema": "Radar_Audits",
									"table": "InstanceSection"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Audits_InstanceSectionResponse"
								},
								"destination": {
									"schema": "Radar_Audits",
									"table": "InstanceSectionResponse"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Audits_Schedule"
								},
								"destination": {
									"schema": "Radar_Audits",
									"table": "Schedule"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Audits_ScheduleLocation"
								},
								"destination": {
									"schema": "Radar_Audits",
									"table": "ScheduleLocation"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Audits_ScheduleWorkflow"
								},
								"destination": {
									"schema": "Radar_Audits",
									"table": "ScheduleWorkflow"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Audits_Template"
								},
								"destination": {
									"schema": "Radar_Audits",
									"table": "Template"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Audits_Type"
								},
								"destination": {
									"schema": "Radar_Audits",
									"table": "Type"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Audits_TypeThreshold"
								},
								"destination": {
									"schema": "Radar_Audits",
									"table": "TypeThreshold"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Compliance_RecordRequirement"
								},
								"destination": {
									"schema": "Radar_Compliance",
									"table": "RecordRequirement"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Compliance_RecordVersion"
								},
								"destination": {
									"schema": "Radar_Compliance",
									"table": "RecordVersion"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Compliance_RequirementType"
								},
								"destination": {
									"schema": "Radar_Compliance",
									"table": "RequirementType"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Compliance_RequirementTypeRole"
								},
								"destination": {
									"schema": "Radar_Compliance",
									"table": "RequirementTypeRole"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Compliance_RequirementTypeSchedule"
								},
								"destination": {
									"schema": "Radar_Compliance",
									"table": "RequirementTypeSchedule"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Compliance_RequirementTypeUser"
								},
								"destination": {
									"schema": "Radar_Compliance",
									"table": "RequirementTypeUser"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_DocumentManagement_Document"
								},
								"destination": {
									"schema": "Radar_DocumentManagement",
									"table": "Document"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_DocumentManagement_DocumentTags"
								},
								"destination": {
									"schema": "Radar_DocumentManagement",
									"table": "DocumentTags"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_DocumentManagement_DocumentVersion"
								},
								"destination": {
									"schema": "Radar_DocumentManagement",
									"table": "DocumentVersion"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_DocumentManagement_DocumentVersionDownload"
								},
								"destination": {
									"schema": "Radar_DocumentManagement",
									"table": "DocumentVersionDownload"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_DocumentManagement_DocumentVersionHistory"
								},
								"destination": {
									"schema": "Radar_DocumentManagement",
									"table": "DocumentVersionHistory"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_DocumentManagement_Folder"
								},
								"destination": {
									"schema": "Radar_DocumentManagement",
									"table": "Folder"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_DocumentManagement_Tag"
								},
								"destination": {
									"schema": "Radar_DocumentManagement",
									"table": "Tag"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_Attachment"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "Attachment"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_AttachmentDownload"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "AttachmentDownload"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_Audit"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "Audit"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_CustomDataItem"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "CustomDataItem"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_CustomDataItemLocation"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "CustomDataItemLocation"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_CustomDataType"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "CustomDataType"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_CustomEntityInstanceLocation"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "CustomEntityInstanceLocation"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_CustomEntityInstanceValues"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "CustomEntityInstanceValues"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_CustomEntityType"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "CustomEntityType"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_CustomEntityTypeField"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "CustomEntityTypeField"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_Department"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "Department"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_DomainObjectAccessControlRule"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "DomainObjectAccessControlRule"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_EventAccessGroupRole"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "EventAccessGroupRole"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_EventAccessGroups"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "EventAccessGroups"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_EventCategory"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "EventCategory"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_EventTypeCategoryLink"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "EventTypeCategoryLink"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_IntegrationLink"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "IntegrationLink"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_ItemReference"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "ItemReference"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_Location"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "Location"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_LocationLocationType"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "LocationLocationType"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_LocationType"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "LocationType"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_LocationUser"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "LocationUser"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_Module"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "Module"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_Notice"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "Notice"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_NoticeAttachment"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "NoticeAttachment"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_NotificationHistory"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "NotificationHistory"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_Organisation"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "Organisation"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_PendingItem"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "PendingItem"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_Permission"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "Permission"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_PsimsSubmission"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "PsimsSubmission"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_Region"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "Region"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_Role"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "Role"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_RoleDashboardPermission"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "RoleDashboardPermission"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_RolePermission"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "RolePermission"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_ServiceUser"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "ServiceUser"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_ServiceUserLocation"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "ServiceUserLocation"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_Tag"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "Tag"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_TagLink"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "TagLink"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_User"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "User"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_UserComment"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "UserComment"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_UserDepartment"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "UserDepartment"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_UserNotice"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "UserNotice"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_UserOutOfOffice"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "UserOutOfOffice"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_UserPreference"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "UserPreference"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Radar_UserRole"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "UserRole"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_RiskManagement_ImpactCategory"
								},
								"destination": {
									"schema": "Radar_RiskManagement",
									"table": "ImpactCategory"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_RiskManagement_ImpactDescriptor"
								},
								"destination": {
									"schema": "Radar_RiskManagement",
									"table": "ImpactDescriptor"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_RiskManagement_Incident"
								},
								"destination": {
									"schema": "Radar_RiskManagement",
									"table": "Incident"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_RiskManagement_IncidentRequiredFormTime"
								},
								"destination": {
									"schema": "Radar_RiskManagement",
									"table": "IncidentRequiredFormTime"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_RiskManagement_IncidentSubType"
								},
								"destination": {
									"schema": "Radar_RiskManagement",
									"table": "IncidentSubType"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_RiskManagement_IncidentType"
								},
								"destination": {
									"schema": "Radar_RiskManagement",
									"table": "IncidentType"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_RiskManagement_IncidentTypeLocationType"
								},
								"destination": {
									"schema": "Radar_RiskManagement",
									"table": "IncidentTypeLocationType"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_RiskManagement_LikelihoodCategory"
								},
								"destination": {
									"schema": "Radar_RiskManagement",
									"table": "LikelihoodCategory"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_RiskManagement_LikelihoodDescriptor"
								},
								"destination": {
									"schema": "Radar_RiskManagement",
									"table": "LikelihoodDescriptor"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_RiskManagement_LinkedItem"
								},
								"destination": {
									"schema": "Radar_RiskManagement",
									"table": "LinkedItem"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_RiskManagement_Risk"
								},
								"destination": {
									"schema": "Radar_RiskManagement",
									"table": "Risk"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_RiskManagement_RiskCategory"
								},
								"destination": {
									"schema": "Radar_RiskManagement",
									"table": "RiskCategory"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_RiskManagement_RiskReviewUpdate"
								},
								"destination": {
									"schema": "Radar_RiskManagement",
									"table": "RiskReviewUpdate"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_RiskManagement_ViewExceptionEvent"
								},
								"destination": {
									"schema": "Radar_RiskManagement",
									"table": "ViewExceptionEvent"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_RiskManagement_ViewExceptionEventRole"
								},
								"destination": {
									"schema": "Radar_RiskManagement",
									"table": "ViewExceptionEventRole"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_RootCauseAnalysis_Cause"
								},
								"destination": {
									"schema": "Radar_RootCauseAnalysis",
									"table": "Cause"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_RootCauseAnalysis_ContributingFactor"
								},
								"destination": {
									"schema": "Radar_RootCauseAnalysis",
									"table": "ContributingFactor"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_RootCauseAnalysis_ContributingFactorCategory"
								},
								"destination": {
									"schema": "Radar_RootCauseAnalysis",
									"table": "ContributingFactorCategory"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_RootCauseAnalysis_InvestigationEvent"
								},
								"destination": {
									"schema": "Radar_RootCauseAnalysis",
									"table": "InvestigationEvent"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Templates_Bodymap"
								},
								"destination": {
									"schema": "Radar_Templates",
									"table": "Bodymap"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Templates_FormTemplate"
								},
								"destination": {
									"schema": "Radar_Templates",
									"table": "FormTemplate"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Templates_FormTemplateInstance"
								},
								"destination": {
									"schema": "Radar_Templates",
									"table": "FormTemplateInstance"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Templates_FormTemplateInstanceValue"
								},
								"destination": {
									"schema": "Radar_Templates",
									"table": "FormTemplateInstanceValue"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Templates_FormTemplateInstanceValueExtendedData"
								},
								"destination": {
									"schema": "Radar_Templates",
									"table": "FormTemplateInstanceValueExtendedData"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Templates_FormTemplateTag"
								},
								"destination": {
									"schema": "Radar_Templates",
									"table": "FormTemplateTag"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Workflow_Definition"
								},
								"destination": {
									"schema": "Radar_Workflow",
									"table": "Definition"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Workflow_Dependency"
								},
								"destination": {
									"schema": "Radar_Workflow",
									"table": "Dependency"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Workflow_Instance"
								},
								"destination": {
									"schema": "Radar_Workflow",
									"table": "Instance"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Workflow_Selector"
								},
								"destination": {
									"schema": "Radar_Workflow",
									"table": "Selector"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Workflow_Trigger"
								},
								"destination": {
									"schema": "Radar_Workflow",
									"table": "Trigger"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Int",
									"table": "V_Workflow_UserTask"
								},
								"destination": {
									"schema": "Radar_Workflow",
									"table": "UserTask"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							}
						]
					}
				},
				"folder": {
					"name": "Radar"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/UT_Send_Email_Param')]",
				"[concat(variables('factoryId'), '/datasets/Radar_SQL')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Res_Forms')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Res Forms Data",
						"description": "AH1 Avery - AH2 YardiStage",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "SET IDENTITY_INSERT dbo.Res_Forms ON",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "res_no",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "res_no",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "forename",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "forename",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "surname",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "surname",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "intranet",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "intranet",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "change_date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "change_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "admitted_from",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "admitted_from",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "tested_prior_last",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "tested_prior_last",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "tested_date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "tested_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "tested_where",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "tested_where",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "tested_result",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "tested_result",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "symptomatic",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "symptomatic",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "symptomatic_date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "symptomatic_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "isolation_Date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "isolation_Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "isolation_end_date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "isolation_end_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "days_isolated",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "days_isolated",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "protocol_followed",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "protocol_followed",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "hospital_prior",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "hospital_prior",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Hospital_lastdate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Hospital_lastdate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "hospital_duration",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "hospital_duration",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "hospital_tested",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "hospital_tested",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "hospital_tested_date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "hospital_tested_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "hospital_rest_result",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "hospital_rest_result",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "form_type",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "form_type",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "status",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "status",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "room_no",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "room_no",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "funding_change",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "funding_change",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "dilaps_charge",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "dilaps_charge",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "comp_by",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "comp_by",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "comp_date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "comp_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "SL_Chk_by",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "SL_Chk_by",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "SL_chk_date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "SL_chk_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "discharge_reason",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "discharge_reason",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "comments",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "comments",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "dob",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "dob",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "SL_comments",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "SL_comments",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "NHS_No",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "NHS_No",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Nurs_res",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Nurs_res",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Resp_Perm",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Resp_Perm",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "disch_date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "disch_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "paymentonadm",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										},
										"sink": {
											"name": "paymentonadm",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "NSHIDno",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "NSHIDno",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "fee",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 7
										},
										"sink": {
											"name": "fee",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 7
										}
									},
									{
										"source": {
											"name": "Date_Complete",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										},
										"sink": {
											"name": "Date_Complete",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH1_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "Res_Forms"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "Res_Forms"
								}
							}
						]
					},
					{
						"name": "SET IDENTITY INSERT OF",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Copy Res Forms Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AH2_YardiStage",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "SET IDENTITY_INSERT dbo.Res_Forms OFF"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Yardi/YardiStage"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AH1_Avery')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_YardiStage')]",
				"[concat(variables('factoryId'), '/linkedServices/AH2_YardiStage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SalariedStaff')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Upserts Avery.SalariedStaff in Transform_DB from csv file. The csv file is an extract of the excel file found on the Y drive (Y:\\Databases\\Uploads\\Weekly_hrs)",
				"activities": [
					{
						"name": "Copy data to Transform_DB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy file to Azure Blob storage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"EmployeeNumber"
									]
								},
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "HomeName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HomeName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Surname",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Surname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "JobRoleCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "JobRoleCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "JobRole",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "JobRole",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Hours",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Hours",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 5
										}
									},
									{
										"source": {
											"name": "ContractedHours",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ContractedHours",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 5
										}
									},
									{
										"source": {
											"name": "ContractType",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ContractType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EmployeeNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmployeeNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HomeCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HomeCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IntranetID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IntranetID",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Other_CSV",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "SalariedStaff.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Avery",
									"Table": "SalariedStaff"
								}
							}
						]
					},
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy data to Transform_DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_PolestarStorageAcc_Fileshare_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": "SalariedStaff.csv"
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureFileStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Copy file to Azure Blob storage",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "469",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HomeName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Firstname",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "surname",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Surname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Role Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "JobRoleCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Role",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "JobRole",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "hours",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Hours",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 5
										}
									},
									{
										"source": {
											"name": "contracted hours",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ContractedHours",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 5
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ContractType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Emp_number",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmployeeNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Home Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HomeCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Intranet",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IntranetID",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Fileshare_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": "SalariedStaff.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Other_CSV",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "SalariedStaff.csv"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Other"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-28T12:27:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PolestarStorageAcc_Other_CSV')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]",
				"[concat(variables('factoryId'), '/datasets/DS_PolestarStorageAcc_Fileshare_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Send_Email')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Send Email",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-09-18T15:33:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/UT_Send_Email_Param')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SoftWorks_API_Clockings')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set WeekEndingDate",
						"description": "Set the previous week ending date in the dd-MM-yyyy format for the API",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "WeekEndingDate",
							"value": {
								"value": "@formatDateTime(subtractFromTime(utcNow(), dayOfWeek(utcNow()), 'Day'), 'dd-MM-yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set WeekBegining Date",
						"description": "Set the previous week Start date in the dd-MM-yyyy format for the API",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set WeekEndingDate",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "WeekBeginingDate",
							"value": {
								"value": "@formatDateTime(subtractFromTime(subtractFromTime(utcNow(), dayOfWeek(utcNow()), 'Day'), 6, 'Day'), 'dd-MM-yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Download Clockings data",
						"description": "Start date in the body looks to be irrelevant, it uses the end date to return emp with a start date less than that. ",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Clockings File Name",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:03:00",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "POST",
								"requestBody": {
									"value": "@concat('{\n    \"DataExtractType\": 2000,\n    \"StartDate\": \"',variables('WeekBeginingDate'),'\",\n    \"EndDate\": \"',variables('WeekEndingDate'),'\",\n    \"Customer\": \"internal\"\n}')",
									"type": "Expression"
								},
								"additionalHeaders": {
									"Content-Type": "application/json"
								},
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Softworks_API_Employees",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Softworks",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('ClockingsFileName')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set Clockings File Name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set WeekBegining Date",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ClockingsFileName",
							"value": {
								"value": "@concat('Clockings', '$', variables('WeekBeginingDate'), '$', variables('WeekEndingDate') )",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"TodaysDate": {
						"type": "String"
					},
					"ClockingsFileName": {
						"type": "String"
					},
					"WeekEndingDate": {
						"type": "String"
					},
					"WeekBeginingDate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Softworks/Children Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-10T11:21:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Softworks_API_Employees')]",
				"[concat(variables('factoryId'), '/datasets/DS_PolestarStorageAcc_Softworks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SoftWorks_API_Employee')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download Employee data",
						"description": "Start date in the body looks to be irrelevant, it uses the end date to return emp with a start date less than that. ",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Employee File Name",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:03:00",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "POST",
								"requestBody": {
									"value": "@concat('{\n    \"DataExtractType\": 4000,\n    \"StartDate\": \"',variables('TodaysDate'),'\",\n    \"EndDate\": \"',variables('ThreeMonthsAhead'),'\",\n    \"Customer\": \"internal\"\n}')",
									"type": "Expression"
								},
								"additionalHeaders": {
									"Content-Type": "application/json"
								},
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Softworks_API_Employees",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Softworks",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('EmpFileName')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set Todays Date",
						"description": "Used in sink to Store the files in folder with todays date",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TodaysDate",
							"value": {
								"value": "@formatDateTime(utcNow(), 'dd-MM-yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set One Months Ahead",
						"description": "Set to the end of the month, 1 month ahead. Used in the API call so details of future starters is returned.",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Todays Date",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ThreeMonthsAhead",
							"value": {
								"value": "@formatDateTime(addToTime(utcNow(), 1, 'Month'), 'dd-MM-yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set WeekEndingDate",
						"description": "Set the previous week ending date in the dd-MM-yyyy format for the API",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "WeekEndingDate",
							"value": {
								"value": "@formatDateTime(subtractFromTime(utcNow(), dayOfWeek(utcNow()), 'Day'), 'dd-MM-yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set WeekBegining Date",
						"description": "Set the previous week Start date in the dd-MM-yyyy format for the API",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Set WeekEndingDate",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "WeekBeginingDate",
							"value": {
								"value": "@formatDateTime(subtractFromTime(subtractFromTime(utcNow(), dayOfWeek(utcNow()), 'Day'), 6, 'Day'), 'dd-MM-yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Download Clockings data",
						"description": "Start date in the body looks to be irrelevant, it uses the end date to return emp with a start date less than that. ",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Set Clockings File Name",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:03:00",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "POST",
								"requestBody": {
									"value": "@concat('{\n    \"DataExtractType\": 2000,\n    \"StartDate\": \"',variables('WeekBeginingDate'),'\",\n    \"EndDate\": \"',variables('WeekEndingDate'),'\",\n    \"Customer\": \"internal\"\n}')",
									"type": "Expression"
								},
								"additionalHeaders": {
									"Content-Type": "application/json"
								},
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Softworks_API_Employees",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Softworks",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('ClockingsFileName')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set Clockings File Name",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Set WeekBegining Date",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ClockingsFileName",
							"value": {
								"value": "@concat('Clockings', '$', variables('WeekBeginingDate'), '$', variables('WeekEndingDate') )",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Employee File Name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set One Months Ahead",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "EmpFileName",
							"value": {
								"value": "@concat('EmployeeList', '$', variables('TodaysDate'))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"TodaysDate": {
						"type": "String"
					},
					"ThreeMonthsAhead": {
						"type": "String"
					},
					"EmpFileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Softworks/Children Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-10T11:21:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Softworks_API_Employees')]",
				"[concat(variables('factoryId'), '/datasets/DS_PolestarStorageAcc_Softworks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Softworks')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Employees",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SoftWorks_API_Employee",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Clockings",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Employees",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SoftWorks_API_Clockings",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load data to TRANSFORM_DB",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Clockings",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Softworks_JSON_SQL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Softworks"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-05T14:58:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_SoftWorks_API_Employee')]",
				"[concat(variables('factoryId'), '/pipelines/PL_SoftWorks_API_Clockings')]",
				"[concat(variables('factoryId'), '/pipelines/PL_Softworks_JSON_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Softworks_EmployeeHoliday')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "For Each File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get File List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get File List').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy from file to SQL",
									"description": "the @item().Name variable is key on the source. the .Name provides the childItem Name from the output of the Metadata task",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": "EmployeeHoliday",
												"wildcardFileName": {
													"value": "@item().Name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Employee",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Employee",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "EmployeeNumber",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "EmployeeNumber",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "Start Date",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "StartDate",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "End Date",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "EndDate",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "Hours Duration",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "HoursDuration",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "Absence Type",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "AbsenceType",
														"type": "String",
														"physicalType": "varchar"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_PolestarStorageAcc_Softworks_RateSheets",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_AH2_TRANSFORM_DB",
											"type": "DatasetReference",
											"parameters": {
												"Schema": "Softworks",
												"Table": "EmployeeHoliday"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Get File List",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_softworks_EmployeeHoliday",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Softworks"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-20T15:53:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_softworks_EmployeeHoliday')]",
				"[concat(variables('factoryId'), '/datasets/DS_PolestarStorageAcc_Softworks_RateSheets')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Softworks_JSON_SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Employee JSON Data to SQL",
						"description": "Copies data from the JSON file exported from the API to the Softworks.Employee_JSON table. All stored as String data.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set EmployeeList File",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE SoftWorks.Employee_JSON",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['department']"
										},
										"sink": {
											"name": "department",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['clockNumber']"
										},
										"sink": {
											"name": "clockNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['clocking']"
										},
										"sink": {
											"name": "clocking",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['dateOfBirth']"
										},
										"sink": {
											"name": "dateOfBirth",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['dateStarted']"
										},
										"sink": {
											"name": "dateStarted",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['dateTerminated']"
										},
										"sink": {
											"name": "dateTerminated",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['firstname']"
										},
										"sink": {
											"name": "firstname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['surname']"
										},
										"sink": {
											"name": "surname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['employeeName']"
										},
										"sink": {
											"name": "employeeName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['employeeNumber']"
										},
										"sink": {
											"name": "employeeNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['employeeEmail']"
										},
										"sink": {
											"name": "employeeEmail",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['employeeStatus']"
										},
										"sink": {
											"name": "employeeStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['salary']"
										},
										"sink": {
											"name": "salary",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['roster']"
										},
										"sink": {
											"name": "roster",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['hourlyRate']"
										},
										"sink": {
											"name": "hourlyRate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['payType']"
										},
										"sink": {
											"name": "payType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['payNumber']"
										},
										"sink": {
											"name": "payNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['masterPolicy']"
										},
										"sink": {
											"name": "masterPolicy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['supervisorName']"
										},
										"sink": {
											"name": "supervisorName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['employeeCostCentre']"
										},
										"sink": {
											"name": "employeeCostCentre",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['allocationGroup']"
										},
										"sink": {
											"name": "allocationGroup",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['shiftlessPattern']"
										},
										"sink": {
											"name": "shiftlessPattern",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['defaultBalanceCategory']"
										},
										"sink": {
											"name": "defaultBalanceCategory",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['employeeGender']"
										},
										"sink": {
											"name": "employeeGender",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['healthcareBankGroup']"
										},
										"sink": {
											"name": "healthcareBankGroup",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['healthcareBankStatus']"
										},
										"sink": {
											"name": "healthcareBankStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['selfRosteringGroup']"
										},
										"sink": {
											"name": "selfRosteringGroup",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['nextofKinContact']"
										},
										"sink": {
											"name": "nextofKinContact",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['nextofKinTel.Number']"
										},
										"sink": {
											"name": "nextofKinTel.Number",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['nextofKinRelationship']"
										},
										"sink": {
											"name": "nextofKinRelationship",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['telephoneNo']"
										},
										"sink": {
											"name": "telephoneNo",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['username']"
										},
										"sink": {
											"name": "username",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['nameAsSupervisor']"
										},
										"sink": {
											"name": "nameAsSupervisor",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['address1']"
										},
										"sink": {
											"name": "address1",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['address2']"
										},
										"sink": {
											"name": "address2",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['address3']"
										},
										"sink": {
											"name": "address3",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['address4']"
										},
										"sink": {
											"name": "address4",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['postcode']"
										},
										"sink": {
											"name": "postcode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['nINumber']"
										},
										"sink": {
											"name": "nINumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['accountName']"
										},
										"sink": {
											"name": "accountName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['sortCode']"
										},
										"sink": {
											"name": "sortCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['accountNumber']"
										},
										"sink": {
											"name": "accountNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['item']"
										},
										"sink": {
											"name": "item",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['notes']"
										},
										"sink": {
											"name": "notes",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['documentReference']"
										},
										"sink": {
											"name": "documentReference",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['documentName']"
										},
										"sink": {
											"name": "documentName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['jobTitle']"
										},
										"sink": {
											"name": "jobTitle",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['sickLeaveEntitlement']"
										},
										"sink": {
											"name": "sickLeaveEntitlement",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['holidayEntitlement']"
										},
										"sink": {
											"name": "holidayEntitlement",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['modeofTransport']"
										},
										"sink": {
											"name": "modeofTransport",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['homeLegalName']"
										},
										"sink": {
											"name": "homeLegalName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['reviewDate']"
										},
										"sink": {
											"name": "reviewDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['isSupervisor']"
										},
										"sink": {
											"name": "isSupervisor",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['salaried']"
										},
										"sink": {
											"name": "salaried",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['costCentre']"
										},
										"sink": {
											"name": "costCentre",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['deptExportCode']"
										},
										"sink": {
											"name": "deptExportCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['deptImportCode']"
										},
										"sink": {
											"name": "deptImportCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['comments']"
										},
										"sink": {
											"name": "comments",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['softworksID']"
										},
										"sink": {
											"name": "softworksID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName"
										}
									}
								],
								"collectionReference": "$['Employees']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Softworks",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('EmployeeListFile')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_SoftWorks_Employee_JSON",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Upsert to Tables",
						"description": "Upsert data from Softworks.Employee_JSON table to the Softworks.Employee table, converting several of the data types in the process. Uses the EmployeeNumber as the Key Field.",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy Employee JSON Data to SQL",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_SoftWorks_JSON_Employee",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EmployeeJSONTable": {},
									"ClockingsJSONTable": {},
									"EmployeeTable": {},
									"ClockingsTable": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Copy Clockings JSON data to SQL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Clockings File",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE SoftWorks.Clockings_JSON",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['empNo']"
										},
										"sink": {
											"name": "empNo",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['clockId']"
										},
										"sink": {
											"name": "clockId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['absId']"
										},
										"sink": {
											"name": "absId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['deptId']"
										},
										"sink": {
											"name": "deptId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['jobId']"
										},
										"sink": {
											"name": "jobId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['projId']"
										},
										"sink": {
											"name": "projId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['absoluteClockTime']"
										},
										"sink": {
											"name": "absoluteClockTime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['clockType']"
										},
										"sink": {
											"name": "clockType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['clocDate']"
										},
										"sink": {
											"name": "clocDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['clockTime']"
										},
										"sink": {
											"name": "clockTime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['seconds']"
										},
										"sink": {
											"name": "seconds",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['effectiveDate']"
										},
										"sink": {
											"name": "effectiveDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['clockDuration']"
										},
										"sink": {
											"name": "clockDuration",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['application']"
										},
										"sink": {
											"name": "application",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['sourceType']"
										},
										"sink": {
											"name": "sourceType",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['sourceData']"
										},
										"sink": {
											"name": "sourceData",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['sourceEdit']"
										},
										"sink": {
											"name": "sourceEdit",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['sourceClockingType']"
										},
										"sink": {
											"name": "sourceClockingType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['longitude']"
										},
										"sink": {
											"name": "longitude",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['latitude']"
										},
										"sink": {
											"name": "latitude",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['accuracy']"
										},
										"sink": {
											"name": "accuracy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['decision']"
										},
										"sink": {
											"name": "decision",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['delCode']"
										},
										"sink": {
											"name": "delCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['userId']"
										},
										"sink": {
											"name": "userId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['dateEntered']"
										},
										"sink": {
											"name": "dateEntered",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['deleted']"
										},
										"sink": {
											"name": "deleted",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['duplicate']"
										},
										"sink": {
											"name": "duplicate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ignore']"
										},
										"sink": {
											"name": "ignore",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['inOut']"
										},
										"sink": {
											"name": "inOut",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['inClocking']"
										},
										"sink": {
											"name": "inClocking",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['outClocking']"
										},
										"sink": {
											"name": "outClocking",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['isActive']"
										},
										"sink": {
											"name": "isActive",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['new']"
										},
										"sink": {
											"name": "new",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['standard']"
										},
										"sink": {
											"name": "standard",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['overtime']"
										},
										"sink": {
											"name": "overtime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['callIn']"
										},
										"sink": {
											"name": "callIn",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['clockFlag']"
										},
										"sink": {
											"name": "clockFlag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['edited']"
										},
										"sink": {
											"name": "edited",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['calcInsert']"
										},
										"sink": {
											"name": "calcInsert",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['infringe']"
										},
										"sink": {
											"name": "infringe",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['previous']"
										},
										"sink": {
											"name": "previous",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['problem']"
										},
										"sink": {
											"name": "problem",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['twUser']"
										},
										"sink": {
											"name": "twUser",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['shiftMove']"
										},
										"sink": {
											"name": "shiftMove",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['showFlags']"
										},
										"sink": {
											"name": "showFlags",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['showLongFlags']"
										},
										"sink": {
											"name": "showLongFlags",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['isOverMidnight']"
										},
										"sink": {
											"name": "isOverMidnight",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['deviceTime']"
										},
										"sink": {
											"name": "deviceTime",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['TimeZone']"
										},
										"sink": {
											"name": "TimeZone",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['TimeZoneCod']"
										},
										"sink": {
											"name": "TimeZoneCod",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['PrevAbsTime']"
										},
										"sink": {
											"name": "PrevAbsTime",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['ReasonId']"
										},
										"sink": {
											"name": "ReasonId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Comments']"
										},
										"sink": {
											"name": "Comments",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ApprovalState']"
										},
										"sink": {
											"name": "ApprovalState",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ApprovalStateCaption']"
										},
										"sink": {
											"name": "ApprovalStateCaption",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['PrevApprovalState']"
										},
										"sink": {
											"name": "PrevApprovalState",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['LocationText']"
										},
										"sink": {
											"name": "LocationText",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['LocationEditText']"
										},
										"sink": {
											"name": "LocationEditText",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['LocationTextExtended']"
										},
										"sink": {
											"name": "LocationTextExtended",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Offline']"
										},
										"sink": {
											"name": "Offline",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['AttachedDocumentId']"
										},
										"sink": {
											"name": "AttachedDocumentId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['AssumedId']"
										},
										"sink": {
											"name": "AssumedId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['Clockings']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Softworks",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('ClockingsFile')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_SoftWorks_Clockings_JSON",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Set EmployeeList File",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Copy Clockings JSON data to SQL",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "EmployeeListFile",
							"value": {
								"value": "@concat('EmployeeList$', formatDateTime(utcNow(), 'dd-MM-yyyy'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Clockings File",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ClockingsFile",
							"value": {
								"value": "@concat('Clockings$', formatDateTime(subtractFromTime(subtractFromTime(utcNow(), dayOfWeek(utcNow()), 'Day'), 6, 'Day'), 'dd-MM-yyyy'), '$', formatDateTime(subtractFromTime(utcNow(), dayOfWeek(utcNow()), 'Day'), 'dd-MM-yyyy'))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"EmployeeListFile": {
						"type": "String"
					},
					"ClockingsFile": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Softworks/Children Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-10T11:21:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PolestarStorageAcc_Softworks')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB_SoftWorks_Employee_JSON')]",
				"[concat(variables('factoryId'), '/dataflows/DF_SoftWorks_JSON_Employee')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB_SoftWorks_Clockings_JSON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Softworks_RateSheets')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "For Each File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get File List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get File List').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy from file to SQL",
									"description": "the @item().Name variable is key on the source. the .Name provides the childItem Name from the output of the Metadata task",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": "RateSheets",
												"wildcardFileName": {
													"value": "@item().Name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Employee Number",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "EmployeeID",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "Employee Name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "EmployeeName",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "Contract Type",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ContractType",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "Contract Start Date",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ContractStartDate",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "Contract End Date",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ContractEndDate",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "External Reference",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ExternalReference",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "Is Default",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IsDefault",
														"type": "String",
														"physicalType": "varchar"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_PolestarStorageAcc_Softworks_RateSheets",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_AH2_TRANSFORM_DB",
											"type": "DatasetReference",
											"parameters": {
												"Schema": "Softworks",
												"Table": "EmployeeRates"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Get File List",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_PolestarStorageAcc_Softworks_RateSheets",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Softworks"
				},
				"annotations": [],
				"lastPublishTime": "2024-07-23T14:21:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PolestarStorageAcc_Softworks_RateSheets')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Sona')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Ucheck Data Dump",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Sona_Ucheck_dataDump",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "SonaMigration",
									"Table": "UcheckDataDump"
								}
							}
						]
					},
					{
						"name": "Copy CB RTW Report",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Home Name ",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HomeName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Employee",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Employee",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Created",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Created",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Type ",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Item ",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Item",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Reference ",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Reference",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Review ",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Review",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Requested ",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Requested",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Received ",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Received",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Expires ",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Expires",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Sona_CB_RTW",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "SonaMigration",
									"Table": "CB_RTW"
								}
							}
						]
					},
					{
						"name": "Avery Immigration File",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Sona_Avery_Immigration_file",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "SonaMigration",
									"Table": "AveryImmigrationData"
								}
							}
						]
					},
					{
						"name": "Copy Verifle RTW data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Sona_Verifile_RTW_Data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "SonaMigration",
									"Table": "Verifile_RTWData"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Sona"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Sona_Ucheck_dataDump')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]",
				"[concat(variables('factoryId'), '/datasets/DS_Sona_CB_RTW')]",
				"[concat(variables('factoryId'), '/datasets/DS_Sona_Avery_Immigration_file')]",
				"[concat(variables('factoryId'), '/datasets/DS_Sona_Verifile_RTW_Data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Transform_HomeDetails')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Home Details",
						"description": "Copys the various Home Details from Avery DB vHomeDetails to TRANSFORM_DB HomeDetails",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"HomeID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "HomeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "HomeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "IntranetID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "IntranetID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "HomeName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Homename",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HomeTypeName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeTypeName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HomeStatus",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BedCount",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BedCount",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Group",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Group",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SubGroup",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SubGroup",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Division",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Division",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DivisionAltName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DivisionAltName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Postcode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Postcode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Latitude",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Latitude",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Longitude",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Longitude",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ColdHarbourHOME_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ColdHarbourHOME_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ExchCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ExchCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CHCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CHCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CareBloxHomeid",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CareBloxHomeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CBCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CBCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HomeManager",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeManager",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ManagerEmail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ManagerEmail",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DeputyEmail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DeputyEmail",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AdminEmail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AdminEmail",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CSMEmail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CSMEmail",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RegionalDirector",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RegionalDirector",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RegionalDirectorEmail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RegionalDirectorEmail",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OpsDirector",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OpsDirector",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OpsDirectorEmail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OpsDirectorEmail",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CorporateBudget",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CorporateBudget",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "StretchBudget",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "StretchBudget",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "YearEnd",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "YearEnd",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Avery",
									"Table": "VHomeDetails"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Avery_HomeDetails",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Avery/Children Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-10T08:27:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AH2_Avery')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB_Avery_HomeDetails')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Yardi_AEMS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Look up Values",
						"type": "Lookup",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT HOME_REF, HomeName, IntranetID FROM ColdHarbourHomeID WHERE HOME_REF = '@{variables('Home_Ref')}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						}
					},
					{
						"name": "AEMS Enquiry",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set HomeName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set IntranetID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT\n    ID\n    ,AEMS_ID\n    ,aems_version\n    ,homeID\n    ,uploadedBy\n    ,managerEmailed\n    ,enquiryStatus\n    ,enquiryID\n    ,initialEnquiry\n    ,enquirerSalutation\n    ,enquirerLastName AS enquirerFirstName\n    ,enquirerFirstName AS enquirerLastName \n    ,enquirerSalutationTwo\n    ,enquirerLastNameTwo \n    ,enquirerFirstNameTwo \n    ,enquiryDate\n    ,enquirerRelationshipToResident\n    ,en_areacode\n    ,enquirerTelephone \n    ,enquiry_mobile \n    ,enquirerEmail \n    ,enquirerAddress  AS nokAddress\n    ,enquirerAddressOne AS nokAddressOne\n    ,enquirerAddressTwo  AS nokAddressTwo\n    ,enquirerAddressThree  AS nokAddressThree \n    ,enquiry_postcode \n    ,enquiry_postcode_two \n    ,residentSalutation\n    ,residentFirstName \n    ,residentLastName \n    ,residentDOB \n    ,residentSalutationTwo\n    ,residentFirstNameTwo\n    ,residentLastNameTwo\n    ,residentDOBTwo\n    ,residentNOK\n    ,residentAddress \n    ,residentAddressOne \n    ,residentAddressTwo \n    ,residentAddressThree \n    ,residentPostcode \n    ,residentTelephone \n    ,residentCareCategory\n    ,residentFundingCategory\n    ,residentCareCategoryTwo\n    ,funding_total\n    ,residentFunding\n    ,residentFundingTwo\n    --,enquiryDetails \n    ,REPLACE(CONVERT(VARCHAR(MAX), enquiryDetails), '\"', '') AS enquiryDetails\n    ,enquiryType\n    ,responseTime\n    ,responseCurrentStatus\n    ,responseNeeded\n    ,responseAmountTried\n    ,followUpDate\n    ,followUpReason\n    ,uploadToCH\n    ,admissionDate\n    ,enquiryClosed\n    ,managerContacted\n    ,homeVisit\n    ,assessmentBooked\n    ,assesmentComplete\n    ,admission\n    ,homeVisitBooked\n    ,admissionBooked\n    ,video_booked\n    ,video_complete\n    ,homeVisitRequested\n    ,assesmentRequested\n    ,newEnquiry\n    ,cameFrom\n    ,enquirer_address \n    ,enquirer_postcode \n    ,lng\n    ,lat\n    ,enquirer_area\n    ,enquirer_county\n    ,nok_name\n    ,nok_surname\n    ,nok_county\n    ,nok_relation\n    ,nok_telephone\n    ,nok_mobile\n    ,nok_address\n    ,resident_county\n    ,nok_Salutation\n    ,newsletter_receive\n    ,newsletter_email\n    ,enquiry_urgent\n    ,optOut\n    ,type_news\n    ,type_mag\n    ,type_other\n    ,gp_name\n    ,gp_address\n    ,gp_telephone\n    ,gp_requested\n    ,gp_received\n    ,website\n    ,brochure\n    ,brochure_requestID\n    ,entryMethod\n    ,current_action_id\n    ,column_hash\n    ,receiveMarketing\n    ,willTopUp\n    ,enquiry_entered_from\n    ,enquiry_closed_reason\n    ,enquiry_deleted\n    ,enquiry_weight\nFROM \n    AEMS.AEMS_Enquiries AS E\nWHERE \n    E.homeID IN (@{variables('IntranetID')})",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('AEMS Enquiry - ', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set HomeName",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Look up Values",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "HomeName",
							"value": {
								"value": "@activity('Look up Values').output.firstRow.HomeName",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set IntranetID",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Look up Values",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "IntranetID",
							"value": {
								"value": "@activity('Look up Values').output.firstRow.IntranetID",
								"type": "Expression"
							}
						}
					},
					{
						"name": "AEMS Enquiry Actions",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "AEMS Enquiry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT \n    A.ID\n    ,A.AEMS_ID\n    ,enquiry_setBy\n    ,enquiry_id\n    ,enquiry_dateRequired\n    ,enquiry_reason\n    ,enquiry_contact\n    ,enquiry_actionComplete\n    ,enquiry_actionInserted\n    ,enquiry_actionCompleteDate\n    ,enquiry_actionCompleteBy\n    ,enquiry_homeID\n    ,enquiry_missed\n    ,enquiry_missedEmail\n    ,enquiry_missedEmailDate\n    ,enquiry_initialContact\n    ,enquiry_flag\n    ,enquiry_critical\n    --,REPLACE(enquiry_details, '\"', '')\n    ,REPLACE(CONVERT(VARCHAR(MAX), enquiry_details), '\"', '') AS enquiry_details\n    ,enquiry_picked_up\n    ,enquiry_assigned_to\n    ,enquiry_assigned_when\n    ,enquiry_action_call_handler\n    ,enquiry_new\nFROM \n    AEMS.AEMS_Enquiries_Actions AS A\n\n    INNER JOIN AEMS.AEMS_Enquiries AS E\n        ON E.AEMS_ID = A.enquiry_id\n        AND E.homeID = A.enquiry_homeID\n    WHERE\n        A.enquiry_homeID IN (@{variables('IntranetID')})\n        ",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('AEMS Enquiry Actions - ', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Home_Ref": {
						"type": "String",
						"defaultValue": "611"
					},
					"HomeName": {
						"type": "String"
					},
					"IntranetID": {
						"type": "String",
						"defaultValue": "7581,83,7596,7598"
					}
				},
				"folder": {
					"name": "Yardi/AEMS"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AH2_YardiStage')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]",
				"[concat(variables('factoryId'), '/datasets/DS_Yardi_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Yardi_AEMS_BackUp')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AEMS_Enquiries",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set BackUpDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "BackUpDate",
										"value": {
											"value": "@variables('BackUpDate')",
											"type": "Expression"
										}
									}
								],
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BackUpDate",
											"type": "String"
										},
										"sink": {
											"name": "BackUpDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "AEMS_ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "AEMS_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "aems_version",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "aems_version",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "homeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "homeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "uploadedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "uploadedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "managerEmailed",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "managerEmailed",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiryStatus",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiryStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiryID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiryID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "initialEnquiry",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "initialEnquiry",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "enquirerSalutation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerSalutation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerFirstName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerFirstName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerLastName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerLastName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerSalutationTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerSalutationTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerLastNameTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerLastNameTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerFirstNameTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerFirstNameTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiryDate",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiryDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerRelationshipToResident",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerRelationshipToResident",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "en_areacode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "en_areacode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerTelephone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerTelephone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_mobile",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_mobile",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerEmail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerEmail",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerAddress",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquirerAddress",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquirerAddressOne",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerAddressOne",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerAddressTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerAddressTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerAddressThree",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerAddressThree",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_postcode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_postcode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_postcode_two",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_postcode_two",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentSalutation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentSalutation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentFirstName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentFirstName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentLastName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentLastName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentDOB",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentDOB",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentSalutationTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentSalutationTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentFirstNameTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentFirstNameTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentLastNameTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentLastNameTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentDOBTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentDOBTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentNOK",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentNOK",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentAddress",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "residentAddress",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "residentAddressOne",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentAddressOne",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentAddressTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentAddressTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentAddressThree",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentAddressThree",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentPostcode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentPostcode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentTelephone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentTelephone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentCareCategory",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentCareCategory",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentFundingCategory",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentFundingCategory",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentCareCategoryTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentCareCategoryTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "funding_total",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "funding_total",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentFunding",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentFunding",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentFundingTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentFundingTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiryDetails",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquiryDetails",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquiryType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiryType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "responseTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "responseTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "responseCurrentStatus",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "responseCurrentStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "responseNeeded",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "responseNeeded",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "responseAmountTried",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "responseAmountTried",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "followUpDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "followUpDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "followUpReason",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "followUpReason",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "uploadToCH",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "uploadToCH",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "admissionDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "admissionDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "enquiryClosed",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiryClosed",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "managerContacted",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "managerContacted",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "homeVisit",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "homeVisit",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "assessmentBooked",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "assessmentBooked",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "assesmentComplete",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "assesmentComplete",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "admission",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "admission",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "homeVisitBooked",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "homeVisitBooked",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "admissionBooked",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "admissionBooked",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "video_booked",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "video_booked",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "video_complete",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "video_complete",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "homeVisitRequested",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "homeVisitRequested",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "assesmentRequested",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "assesmentRequested",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "newEnquiry",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "newEnquiry",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "cameFrom",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "cameFrom",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirer_address",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquirer_address",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquirer_postcode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirer_postcode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "lng",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "lng",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "lat",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "lat",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirer_area",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirer_area",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirer_county",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirer_county",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_surname",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_surname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_county",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_county",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_relation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_relation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_telephone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_telephone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_mobile",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_mobile",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_address",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_address",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "resident_county",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "resident_county",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_Salutation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_Salutation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "newsletter_receive",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "newsletter_receive",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "newsletter_email",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "newsletter_email",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_urgent",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_urgent",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "optOut",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "optOut",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "type_news",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "type_news",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "type_mag",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "type_mag",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "type_other",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "type_other",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "gp_name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "gp_name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "gp_address",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "gp_address",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "gp_telephone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "gp_telephone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "gp_requested",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "gp_requested",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "gp_received",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "gp_received",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "website",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "website",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "brochure",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "brochure",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "brochure_requestID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "brochure_requestID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "entryMethod",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "entryMethod",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "current_action_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "current_action_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "column_hash",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "column_hash",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "receiveMarketing",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "receiveMarketing",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "willTopUp",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "willTopUp",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquiry_entered_from",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_entered_from",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_closed_reason",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_closed_reason",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_deleted",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_deleted",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_weight",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_weight",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "AEMS",
									"Table": "AEMS_Enquiries"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "AEMS",
									"Table": "AEMS_Enquiries_YardiBackup"
								}
							}
						]
					},
					{
						"name": "Set BackUpDate",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "BackUpDate",
							"value": {
								"value": "@formatDateTime(utcNow(), 'yyyy-MM-dd HH:mm:ss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "AEMS_Enquiries_Actions",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "AEMS_Enquiries",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "BackUpDate",
										"value": {
											"value": "@variables('BackUpDate')",
											"type": "Expression"
										}
									}
								],
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BackUpDate",
											"type": "String"
										},
										"sink": {
											"name": "BackUpDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "AEMS_ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "AEMS_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_setBy",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquiry_setBy",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquiry_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_dateRequired",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "enquiry_dateRequired",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "enquiry_reason",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquiry_reason",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquiry_contact",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquiry_contact",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquiry_actionComplete",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_actionComplete",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_actionInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "enquiry_actionInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "enquiry_actionCompleteDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "enquiry_actionCompleteDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "enquiry_actionCompleteBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_actionCompleteBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_homeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_homeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_missed",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_missed",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_missedEmail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_missedEmail",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_missedEmailDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "enquiry_missedEmailDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "enquiry_initialContact",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_initialContact",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_flag",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_flag",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_critical",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_critical",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_details",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquiry_details",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquiry_picked_up",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_picked_up",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_assigned_to",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_assigned_to",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_assigned_when",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "enquiry_assigned_when",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "enquiry_action_call_handler",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_action_call_handler",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_new",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_new",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "AEMS",
									"Table": "AEMS_Enquiries_Actions"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "AEMS",
									"Table": "AEMS_Enquiries_Actions_YardiBackup"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"BackUpDate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Yardi/AEMS"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_YardiStage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Yardi_CH_IP_LedgerDetails_MultiHome')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Home List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Home List').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Export Ledger and comments",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set HOME_REF",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "SELECT\t \n\t'@{variables('Home_Ref')}' AS HOME_REF,\n\tSite.SiteId AS siteid,\n\tSite.SiteName as sitename, \n\tRESIDENT.RES_CODE as resident_no,\n\tInvPosting.account_No, \n\tInvPosting.Cre_DateT AS created_date, \n\tInvPosting.Inv_Date AS transaction_date,\n\tCASE \n\t\tWHEN InvPosting.Tran_Type = 'U' THEN 'Receipt'\n\t\tWHEN InvPosting.Tran_Type = 'I' THEN 'Invoice'\n\t\tWHEN InvPosting.Tran_Type = 'C' THEN 'Credit'\n\t\tWHEN InvPosting.Tran_Type = 'J' THEN 'Adjustment'\n\t\tELSE ''\n\tEND AS transaction_type,\n\tInvPosting.Ref1 AS transaction_ref1, \n\tInvPosting.Ref2 AS transaction_ref2, \n\tInvPosting.Value AS transaction_value, \n\tInvPosting.Balance AS transaction_balance, \n\tMemo,\n\tUSERCOMM AS UserComment\nFROM\t\t \n\tInvPosting (NOLOCK) \n\t\n\tJOIN Site (NOLOCK) \n\t\tON Site.Site_Ref = InvPosting.Site_Ref\n\n\tLEFT JOIN RESIDENT (NOLOCK)\n\t\tON RESIDENT.RES_REF = INVPOSTING.RES_REF\nWHERE\t\n\tInvPosting.Site_Ref  = '@{item().SITE_REF}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_OnPrem_CH_IP",
											"type": "DatasetReference",
											"parameters": {
												"Schema": "n/a",
												"Table": "n/a"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_Yardi_CSV",
											"type": "DatasetReference",
											"parameters": {
												"Filename": {
													"value": "@concat(variables('Home_Ref'), ' - Full Ledger Comments - ', utcNow('yyyy-MM-dd'), '.csv')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Lookup Home",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "SiteRefParam",
											"value": "@item().SITE_REF"
										}
									],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT HOME_REF, HomeName, SITE_REF \nFROM ColdHarbourHomeID \nWHERE SITE_REF = '@{item().SITE_REF}'",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_AH2_YardiStage",
											"type": "DatasetReference",
											"parameters": {
												"Schema": "n/a",
												"Table": "n/a"
											}
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "Set HOME_REF",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Lookup Home",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "Home_Ref",
										"value": {
											"value": "@activity('Lookup Home').output.firstRow.HOME_REF",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Get Home List",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT SITE_REF FROM ColdHarbourHomeID WHERE \nHOME_REF IN (@{variables('Home_ref_List')})",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Home_Ref": {
						"type": "Integer"
					},
					"Home_ref_List": {
						"type": "String",
						"defaultValue": "632,610,651,639"
					}
				},
				"folder": {
					"name": "Yardi/CHIP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AH2_YardiStage')]",
				"[concat(variables('factoryId'), '/datasets/DS_OnPrem_CH_IP')]",
				"[concat(variables('factoryId'), '/datasets/DS_Yardi_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Yardi_DependencyTool')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Look up Values",
						"type": "Lookup",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT HOME_REF, HomeName, IntranetID FROM ColdHarbourHomeID WHERE HOME_REF = '@{variables('Home_Ref')}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						}
					},
					{
						"name": "Set HomeName",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "HomeName",
							"value": {
								"value": "@activity('Look up Values').output.firstRow.HomeName",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set IntranetID",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "IntranetID",
							"value": "[[object Object]"
						}
					},
					{
						"name": "Export Dependency Records",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set IntranetID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT\n    R.ID,\n    R.Assesment_Date,\n    R.Status,\n    R.Homename,\n    R.Intranet,\n    R.Res_No,\n    --R.Res_First_Name,\n    REPLACE(R.Res_First_Name, '\"', '') AS Res_First_Name,\n    R.Res_Surname,\n    R.Unit,\n    R.Room_No,\n    R.Type,\n    R.Total_Standard_Score AS Total_Service_Duration,\n\n    Q1.Service_Description AS Service1_Description,\n    r.Q1_Score AS Service1_Score,\n    r.Q1_Standard_Score AS Service1_MinutesRequired,\n    Q1.Support_Description AS Service1_SupportDescription,\n    \n    Q2.Service_Description AS Service2_Description,\n    r.Q2_Score AS Service2_Score,\n    r.Q2_Standard_Score AS Service2_MinutesRequired,\n    Q2.Support_Description AS Service2_SupportDescription,\n\n    Q3.Service_Description AS Service3_Description,\n    r.Q3_Score AS Service3_Score,\n    r.Q3_Standard_Score AS Service3_MinutesRequired,\n    Q3.Support_Description AS Service3_SupportDescription,\n\n    Q4.Service_Description AS Service4_Description,\n    r.Q4_Score AS Service4_Score,\n    r.Q4_Standard_Score AS Service4_MinutesRequired,\n    Q4.Support_Description AS Service4_SupportDescription,\n\n    Q5.Service_Description AS Service5_Description,\n    r.Q5_Score AS Service5_Score,\n    r.Q5_Standard_Score AS Service5_MinutesRequired,\n    Q5.Support_Description AS Service5_SupportDescription,\n\n    Q6.Service_Description AS Service6_Description,\n    r.Q6_Score AS Service6_Score,\n    r.Q6_Standard_Score AS Service6_MinutesRequired,\n    Q6.Support_Description AS Service6_SupportDescription,\n\n    Q7.Service_Description AS Service7_Description,\n    r.Q7_Score AS Service7_Score,\n    r.Q7_Standard_Score AS Service7_MinutesRequired,\n    Q7.Support_Description AS Service7_SupportDescription,\n\n    Q8.Service_Description AS Service8_Description,\n    r.Q8_Score AS Service8_Score,\n    r.Q8_Standard_Score AS Service8_MinutesRequired,\n    Q8.Support_Description AS Service8_SupportDescription,\n\n    Q9.Service_Description AS Service9_Description,\n    r.Q9_Score AS Service9_Score,\n    r.Q9_Standard_Score AS Service9_MinutesRequired,\n    Q9.Support_Description AS Service9_SupportDescription,\n\n    Q10.Service_Description AS Service10_Description,\n    r.Q10_Score AS Service10_Score,\n    r.Q10_Standard_Score AS Service10_MinutesRequired,\n    Q10.Support_Description AS Service10_SupportDescription,\n\n    Q11.Service_Description AS Service11_Description,\n    r.Q11_Score AS Service11_Score,\n    r.Q11_Standard_Score AS Service11_MinutesRequired,\n    Q11.Support_Description AS Service11_SupportDescription,\n\n    Q12.Service_Description AS Service12_Description,\n    r.Q12_Score AS Service12_Score,\n    r.Q12_Standard_Score AS Service12_MinutesRequired,\n    Q12.Support_Description AS Service12_SupportDescription,\n\n    Q13.Service_Description AS Service13_Description,\n    r.Q13_Score AS Service13_Score,\n    r.Q13_Standard_Score AS Service13_MinutesRequired,\n    Q13.Support_Description AS Service13_SupportDescription\nFROM \n    Dependency_Tool_Responses AS R\n\n    LEFT JOIN Dependency_Tool AS Q1\n        ON Q1.Support_Level = R.Q1_Score\n        AND Q1.Service_Number = 1\n\n    LEFT JOIN Dependency_Tool AS Q2\n        ON Q2.Support_Level = R.Q2_Score\n        AND Q2.Service_Number = 2\n\n    LEFT JOIN Dependency_Tool AS Q3\n        ON Q3.Support_Level = R.Q3_Score\n        AND Q3.Service_Number = 3\n\n    LEFT JOIN Dependency_Tool AS Q4\n        ON Q4.Support_Level = R.Q4_Score\n        AND Q4.Service_Number = 4\n\n    LEFT JOIN Dependency_Tool AS Q5\n        ON Q5.Support_Level = R.Q5_Score\n        AND Q5.Service_Number = 5\n\n    LEFT JOIN Dependency_Tool AS Q6\n        ON Q6.Support_Level = R.Q6_Score\n        AND Q6.Service_Number = 6\n\n    LEFT JOIN Dependency_Tool AS Q7\n        ON Q7.Support_Level = R.Q7_Score\n        AND Q7.Service_Number = 7\n\n    LEFT JOIN Dependency_Tool AS Q8\n        ON Q8.Support_Level = R.Q8_Score\n        AND Q8.Service_Number = 8\n\n    LEFT JOIN Dependency_Tool AS Q9\n        ON Q9.Support_Level = R.Q9_Score\n        AND Q9.Service_Number = 9\n\n    LEFT JOIN Dependency_Tool AS Q10\n        ON Q10.Support_Level = R.Q10_Score\n        AND Q10.Service_Number = 10\n\n    LEFT JOIN Dependency_Tool AS Q11\n        ON Q11.Support_Level = R.Q11_Score\n        AND Q11.Service_Number = 11\n\n    LEFT JOIN Dependency_Tool AS Q12\n        ON Q12.Support_Level = R.Q12_Score\n        AND Q12.Service_Number = 12\n\n    LEFT JOIN Dependency_Tool AS Q13\n        ON Q13.Support_Level = R.Q13_Score\n        AND Q13.Service_Number = 13\nWHERE \n    --R.Status = 'Active' \n    R.Intranet IN (@{variables('IntranetID')})\nORDER BY \n    Intranet ASC, \n    Assesment_Date ASC",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('Welltower Homes', ' - Dependency Tool Responses - ', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Home_Ref": {
						"type": "String"
					},
					"HomeName": {
						"type": "String"
					},
					"IntranetID": {
						"type": "String",
						"defaultValue": "7581,83,7596,7598"
					}
				},
				"folder": {
					"name": "Yardi/Dependency Tool"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AH2_YardiStage')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_Avery')]",
				"[concat(variables('factoryId'), '/datasets/DS_Yardi_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Yardi_GRG_Data_MultiHome')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Extracts data Yardi require to single csv files for multiple homes",
				"activities": [
					{
						"name": "Export Rooms",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT\n    AmendDateTime,\n    CreateDateTime,\n    HOME_REF,\n    OLOC_REF,\n    OROOM_REF,\n    ROOM_CAT,\n    ROOM_CAT_DESC,\n    ROOM_CODE,\n    ROOM_DESC,\n    ROOM_NO_BEDS,\n    ROOM_REF,\n    ROOM_TYPE,\n    ROOM_TYPE_DESC,\n    CHARGEPERIOD,\n    CURRENTRATE,\n    RATEDATE,\n    ROOM_UDF1,\n    ROOM_UDF2,\n    ROOM_UDF3,\n    ROOM_UDF4,\n    USEFLAG\nFROM \n    dbo.ROOMS\nWHERE\n    HOME_REF IN (@{variables('Home_Ref_List')})",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_GRG",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('Rooms -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Export Residents",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Export Rooms",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT \n    ADANAL_DEC\n    ,ADDRESS1\n    ,ADDRESS2\n    ,ADDRESS3\n    ,ADDRESS4\n    ,ADMSN_ANAL\n    ,ADMSN_TYPE\n    ,ADM_REASON\n    ,ADTYP_DEC\n    ,ANAL_GROUP\n    ,AUTHORITY\n    ,AmendDateTime\n    ,BIRTHDATE\n    ,CARECAT\n    ,CONTSIGNED\n    ,CreateDateTime\n    ,DISABILITY\n    ,ENQ_REF\n    ,HOME\n    ,HOME_REF\n    ,LASTADDATE\n    ,LASTDIDATE\n    ,LOC_DESC\n    ,LOC_REF\n    ,MARKETING\n    ,NINUMBER\n    ,OCC_IGNORE\n    ,ORES_REF\n    ,ORIGADDATE\n    ,POSTCODE\n    ,RELIGION\n    ,RESPAYINT\n    ,RES_CODE\n    --,RES_FNAME\n    ,CASE \n\t\tWHEN CHARINDEX('&', RES_FNAME) > 0 THEN RES_FNAME\n        WHEN CHARINDEX(' and ', RES_FNAME) > 0 THEN RES_FNAME\n\t\tWHEN CHARINDEX('-', RES_FNAME) > 0 THEN RES_FNAME\n        WHEN RES_FNAME LIKE ' %' AND LTRIM(RTRIM(RES_FNAME)) NOT LIKE '%[(\"'']%' THEN LTRIM(RES_FNAME)\n        WHEN LTRIM(RTRIM(RES_FNAME)) LIKE '% %' AND LTRIM(RTRIM(RES_FNAME)) NOT LIKE '%[(\"'']%' THEN RES_FNAME\n        WHEN RES_FNAME = '.' THEN ''\n        WHEN RES_FNAME = '*' THEN ''\n\t\tELSE (SUBSTRING(LTRIM(RES_FNAME), 1, CHARINDEX(' ', LTRIM(RES_FNAME) + ' ')))\n\tEND AS RES_FNAME\n    ,RES_REF\n    ,CASE \n        WHEN LTRIM(RES_SNAME) = '.' THEN ''\n        WHEN RES_FNAME = '*' THEN ''\n        ELSE LTRIM(RES_SNAME)\n    END AS RES_SNAME\n    ,ROOM\n    ,ROOMCAT\n    ,ROOM_DESC\n    ,ROOM_TYPE\n    ,SEX\n    ,STATUS\n    ,TEL_NO1\n    ,TEL_NO2\n    ,TITLE\n    ,USERDEF\n    ,AUTHCODE\n    ,DOUBLEINS\n    ,FIRSTAWARE\n    ,FIRSTVISIT\n    ,REAL_FNAME\n    ,REAL_SNAME\n    ,REAL_TITLE\n    ,SIGIND\n    ,THIRDPARTY\n    ,USERFIELD1\n    ,USERFIELD2\n    ,USERFIELD3\n    ,NHSNUMBER\n    ,ALTCOMMS\n    ,ALTCOMMS_REF\n    ,ASS_ACTBY\n    ,ASS_ACTBY_REF\n    ,ASS_ACTDT\n    ,CONNECTION\n    ,CONNECTIONDET\n    ,CONNECTION_REF\n    ,FUNDERREF\n    ,LANGUAGE\n    ,LANGUAGE_REF\n    ,MOVEDINFROM\n    ,MOVEDINFROM_REF\n    ,PATIENTREF\n    ,PICID\n    ,PREVCODE\n\t,CASE \n\t\tWHEN CHARINDEX('\"', RES_FNAME) > 0 THEN\n\t\t\tLTRIM(SUBSTRING(\n\t\t\t\tRES_FNAME, \n\t\t\t\tCHARINDEX('\"',RES_FNAME, 1) + 1,\n\t\t\t\tCHARINDEX('\"', RES_FNAME, CHARINDEX('\"', RES_FNAME) + 1) - CHARINDEX('\"', RES_FNAME) - 1))\n\t\tWHEN CHARINDEX('(', RES_FNAME) > 0 THEN\n\t\t\tLTRIM(SUBSTRING(\n\t\t\t\tRES_FNAME, \n\t\t\t\tCHARINDEX('(',RES_FNAME, 1) + 1,\n\t\t\t\tCHARINDEX(')', RES_FNAME, CHARINDEX('(', RES_FNAME) + 1) - CHARINDEX('(', RES_FNAME) - 1))\n\t\tWHEN CHARINDEX('''', RES_FNAME) > 0 THEN\n\t\t\tLTRIM(SUBSTRING(\n\t\t\t\tRES_FNAME, \n\t\t\t\tCHARINDEX('''',RES_FNAME, 1) + 1,\n\t\t\t\tCHARINDEX('''', RES_FNAME, CHARINDEX('''', RES_FNAME) + 1) - CHARINDEX('''', RES_FNAME) - 1))\n\t\tELSE ''\n\tEND AS Preferred_Name\nFROM \n    dbo.RESIDENT\nWHERE\n    HOME_REF IN (@{variables('Home_Ref_List')})",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_GRG",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('Residents -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Export Resident Contacts",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Export Residents",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT\n    Address1\n    ,Address2\n    ,Address3\n    ,Address4\n    ,AmendDateTime\n    ,Cont_SubType\n    ,Cont_SubTypeDec\n    ,CreateDateTime\n    ,REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(LTRIM(Forenames), '.', ''), ',', ''), '*', ''), '|', ''), '?', '') AS Forenames\n    ,GRGApp_GrGsRef\n    ,GRGrep_Cnta_Det_Ref\n    ,Gen_Comments\n    ,PostCode\n    ,RelType\n    ,RelTypeDec\n    ,Res_Ref\n    ,REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(LTRIM(Surname), '.', ''), ',', ''), '*', ''), '|', ''), '?', ''), ';', '') AS Surname\n    ,Tel_No1\n    ,Tel_No2\n    ,TitleDec\n    ,oCnta_Det_Ref\n    ,Email\n    ,LASTUPDATE\nFROM \n    dbo.RESCONTACTS\nWHERE\n    Res_Ref IN (SELECT ORES_REF FROM RESIDENT WHERE HOME_REF IN (@{variables('Home_Ref_List')}))",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_GRG",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('Resident Contacts -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Export Resident Movement",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Export Resident Contacts",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT \n    ACTDEATHDT\n    ,ADANAL_DEC\n    ,ADTYP_DEC\n    ,AD_REF\n    ,AmendDateTime\n    ,CAUSE\n    ,CAUSEDEATH\n    ,CreateDateTime\n    ,DATE\n    ,DISCHDECEAS\n    ,DISDEST\n    ,DISREASON\n    ,DISTYPE\n    ,DOCTOR\n    ,FINALDISCH\n    ,HOME_REF\n    ,INITIALADM\n    ,INOUT\n    ,LOC_REF\n    ,MOVE_REF\n    ,PLACE\n    ,REASON\n    ,RES_REF\n    ,ROOM\n    ,ROOM_TYPE\n    ,TIME\n    ,MOVE_TIME\n    ,ANALCHANGE\n    ,COMPOSITE\n    ,MOVESUB_REF\n    ,PREVDISDEST\n    ,PREVDISTYPE\nFROM \n    dbo.ADMIN_DISCHARGE\nWHERE\n    HOME_REF IN (@{variables('Home_Ref_List')})",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_GRG",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('Resident Movement -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Export Accounts",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Export Resident Movement",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT\n    ACCNO\n    ,ACCSUFFIX\n    ,ACCTYPE\n    ,ACCTYPE2\n    ,ACCTYPE_DECODE\n    ,ACC_REF\n    ,AmendDateTime\n    ,CALENDAR\n    ,CAL_REF\n    ,CHGPER\n    ,Cnta_Det_Ref\n    ,Cont_Ref\n    ,CreateDateTime\n    ,DAILYRATE\n    ,ENDDATE\n    ,FINALINV\n    ,FS_REF\n    ,FUNDSOURCE\n    ,HOME_REF\n    ,LASTRATEDT\n    ,ORIGREF\n    ,PENSBOOK\n    ,PROFILE\n    ,RATE\n    ,RECGRP\n    ,RECGRPDESC\n    ,RELACCREF\n    ,RES_REF\n    ,RecType\n    ,STARTDATE\n    ,SUFFIXSUPERCEDED\n    ,ANAL3\n    ,ATTENTION\n    ,AUTHORISED\n    ,CONSULTANT\n    ,CRCONTROL\n    ,DEBTORCODE\n    ,FUNDREQEDI\n    ,FURC_DEC\n    ,INPFUNDAPR\n    ,LOCALITY\n    ,NURFUNDAPR\n    ,RECONCILED\n    ,BANKACC\n    ,BANKACCNAME\n    ,BANKADDRESS1\n    ,BANKADDRESS2\n    ,BANKADDRESS3\n    ,BANKADDRESS4\n    ,BANKNAME\n    ,BANKPOSTCODE\n    ,BANKSORTCODE\n    ,BANKSTREF\n    ,BANKTRTYPE\n    ,DDMANDREF\n    ,SOCOLDAY\n    ,SOCOLLECT\n    ,SOVALUE\n    ,USAGE\n    ,CALCODE\n    ,PCTDESC\n    ,REVDATE\nFROM \n    ACCOUNT \nWHERE\n    HOME_REF IN (@{variables('Home_Ref_List')})",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_GRG",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('Accounts -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Export Fund Source Contacts",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Export Accounts",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT \n    Address1\n    ,Address2\n    ,Address3\n    ,Address4\n    ,AmendDateTime\n    ,CreateDateTime\n    ,EMAIL\n    ,FundSourceName\n    ,GRGApp_GrGsRef\n    ,GRGrep_Cnta_Det_Ref\n    ,Inv_Narrative\n    ,PostCode\n    ,Tel_No1\n    ,Tel_No2\n    ,oCnta_Det_Ref\n    ,CQUIN\n    ,CQUIN_REF\n    ,CQUIN_TYPE\n    ,EDICONTACT\n    ,PAYDAYS\n    ,PAYDAYSDOM\n    ,PAYDAYSDOMDESC\n    ,PAYMONTH\n    ,PAYMONTHDESC\nFROM \n    dbo.FSCONTACTS\nWHERE\n    GRGApp_GrGsRef IN (@{variables('Home_Ref_List')})",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_GRG",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('Fund Source Contacts -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Home_Ref_List": {
						"type": "String",
						"defaultValue": "610,632,651,639"
					}
				},
				"folder": {
					"name": "Yardi/GRG"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_OnPrem_CH_GRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_Yardi_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Yardi_GRG_Data_SingleHome')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Extracts data Yardi require to csv files for a single home",
				"activities": [
					{
						"name": "Export Rooms",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Filename",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT\n    AmendDateTime,\n    CreateDateTime,\n    HOME_REF,\n    OLOC_REF,\n    OROOM_REF,\n    ROOM_CAT,\n    ROOM_CAT_DESC,\n    ROOM_CODE,\n    ROOM_DESC,\n    ROOM_NO_BEDS,\n    ROOM_REF,\n    ROOM_TYPE,\n    ROOM_TYPE_DESC,\n    CHARGEPERIOD,\n    CURRENTRATE,\n    RATEDATE,\n    ROOM_UDF1,\n    ROOM_UDF2,\n    ROOM_UDF3,\n    ROOM_UDF4,\n    USEFLAG\nFROM \n    dbo.ROOMS\nWHERE\n    HOME_REF = '@{variables('Home_Ref')}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_GRG",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat(variables('Filename'), ' - Rooms -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Look up Home name",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT TOP 1 HomeName FROM Avery.HOME WHERE ColdHarbourHOME_REF = '@{variables('Home_Ref')}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AH2_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						}
					},
					{
						"name": "Set Filename",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Look up Home name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Filename",
							"value": {
								"value": "@activity('Look up Home name').output.firstRow.HomeName",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Export Residents",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Export Rooms",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT \n    ADANAL_DEC\n    ,ADDRESS1\n    ,ADDRESS2\n    ,ADDRESS3\n    ,ADDRESS4\n    ,ADMSN_ANAL\n    ,ADMSN_TYPE\n    ,ADM_REASON\n    ,ADTYP_DEC\n    ,ANAL_GROUP\n    ,AUTHORITY\n    ,AmendDateTime\n    ,BIRTHDATE\n    ,CARECAT\n    ,CONTSIGNED\n    ,CreateDateTime\n    ,DISABILITY\n    ,ENQ_REF\n    ,HOME\n    ,HOME_REF\n    ,LASTADDATE\n    ,LASTDIDATE\n    ,LOC_DESC\n    ,LOC_REF\n    ,MARKETING\n    ,NINUMBER\n    ,OCC_IGNORE\n    ,ORES_REF\n    ,ORIGADDATE\n    ,POSTCODE\n    ,RELIGION\n    ,RESPAYINT\n    ,RES_CODE\n    --,RES_FNAME\n    ,CASE \n\t\tWHEN CHARINDEX('&', RES_FNAME) > 0 THEN RES_FNAME\n        WHEN CHARINDEX(' and ', RES_FNAME) > 0 THEN RES_FNAME\n\t\tWHEN CHARINDEX('-', RES_FNAME) > 0 THEN RES_FNAME\n        WHEN RES_FNAME LIKE ' %' AND LTRIM(RTRIM(RES_FNAME)) NOT LIKE '%[(\"'']%' THEN LTRIM(RES_FNAME)\n        WHEN LTRIM(RTRIM(RES_FNAME)) LIKE '% %' AND LTRIM(RTRIM(RES_FNAME)) NOT LIKE '%[(\"'']%' THEN RES_FNAME\n        WHEN RES_FNAME = '.' THEN ''\n        WHEN RES_FNAME = '*' THEN ''\n\t\tELSE (SUBSTRING(LTRIM(RES_FNAME), 1, CHARINDEX(' ', LTRIM(RES_FNAME) + ' ')))\n\tEND AS RES_FNAME\n    ,RES_REF\n    ,CASE \n        WHEN LTRIM(RES_SNAME) = '.' THEN ''\n        WHEN RES_FNAME = '*' THEN ''\n        ELSE LTRIM(RES_SNAME)\n    END AS RES_SNAME\n    ,ROOM\n    ,ROOMCAT\n    ,ROOM_DESC\n    ,ROOM_TYPE\n    ,SEX\n    ,STATUS\n    ,TEL_NO1\n    ,TEL_NO2\n    ,TITLE\n    ,USERDEF\n    ,AUTHCODE\n    ,DOUBLEINS\n    ,FIRSTAWARE\n    ,FIRSTVISIT\n    ,REAL_FNAME\n    ,REAL_SNAME\n    ,REAL_TITLE\n    ,SIGIND\n    ,THIRDPARTY\n    ,USERFIELD1\n    ,USERFIELD2\n    ,USERFIELD3\n    ,NHSNUMBER\n    ,ALTCOMMS\n    ,ALTCOMMS_REF\n    ,ASS_ACTBY\n    ,ASS_ACTBY_REF\n    ,ASS_ACTDT\n    ,CONNECTION\n    ,CONNECTIONDET\n    ,CONNECTION_REF\n    ,FUNDERREF\n    ,LANGUAGE\n    ,LANGUAGE_REF\n    ,MOVEDINFROM\n    ,MOVEDINFROM_REF\n    ,PATIENTREF\n    ,PICID\n    ,PREVCODE\n\t,CASE \n\t\tWHEN CHARINDEX('\"', RES_FNAME) > 0 THEN\n\t\t\tLTRIM(SUBSTRING(\n\t\t\t\tRES_FNAME, \n\t\t\t\tCHARINDEX('\"',RES_FNAME, 1) + 1,\n\t\t\t\tCHARINDEX('\"', RES_FNAME, CHARINDEX('\"', RES_FNAME) + 1) - CHARINDEX('\"', RES_FNAME) - 1))\n\t\tWHEN CHARINDEX('(', RES_FNAME) > 0 THEN\n\t\t\tLTRIM(SUBSTRING(\n\t\t\t\tRES_FNAME, \n\t\t\t\tCHARINDEX('(',RES_FNAME, 1) + 1,\n\t\t\t\tCHARINDEX(')', RES_FNAME, CHARINDEX('(', RES_FNAME) + 1) - CHARINDEX('(', RES_FNAME) - 1))\n\t\tWHEN CHARINDEX('''', RES_FNAME) > 0 THEN\n\t\t\tLTRIM(SUBSTRING(\n\t\t\t\tRES_FNAME, \n\t\t\t\tCHARINDEX('''',RES_FNAME, 1) + 1,\n\t\t\t\tCHARINDEX('''', RES_FNAME, CHARINDEX('''', RES_FNAME) + 1) - CHARINDEX('''', RES_FNAME) - 1))\n\t\tELSE ''\n\tEND AS Preferred_Name\nFROM \n    dbo.RESIDENT\nWHERE\n    HOME_REF = '@{variables('Home_Ref')}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_GRG",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat(variables('Filename'), ' - Residents -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Export Resident Contacts",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Export Residents",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT\n    Address1\n    ,Address2\n    ,Address3\n    ,Address4\n    ,AmendDateTime\n    ,Cont_SubType\n    ,Cont_SubTypeDec\n    ,CreateDateTime\n    ,REPLACE(REPLACE(REPLACE(LTRIM(Forenames), '.', ''), ',', ''), '*', '') AS Forenames\n    ,GRGApp_GrGsRef\n    ,GRGrep_Cnta_Det_Ref\n    ,Gen_Comments\n    ,PostCode\n    ,RelType\n    ,RelTypeDec\n    ,Res_Ref\n    ,REPLACE(REPLACE(REPLACE(LTRIM(Surname), '.', ''), ',', ''), '*', '') AS Surname\n    ,Tel_No1\n    ,Tel_No2\n    ,TitleDec\n    ,oCnta_Det_Ref\n    ,Email\n    ,LASTUPDATE\nFROM \n    dbo.RESCONTACTS\nWHERE\n    Res_Ref IN (SELECT ORES_REF FROM RESIDENT WHERE HOME_REF = '@{variables('Home_Ref')}')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_GRG",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat(variables('Filename'), ' - Resident Contacts -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Export Resident Movement",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Export Resident Contacts",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT \n    ACTDEATHDT\n    ,ADANAL_DEC\n    ,ADTYP_DEC\n    ,AD_REF\n    ,AmendDateTime\n    ,CAUSE\n    ,CAUSEDEATH\n    ,CreateDateTime\n    ,DATE\n    ,DISCHDECEAS\n    ,DISDEST\n    ,DISREASON\n    ,DISTYPE\n    ,DOCTOR\n    ,FINALDISCH\n    ,HOME_REF\n    ,INITIALADM\n    ,INOUT\n    ,LOC_REF\n    ,MOVE_REF\n    ,PLACE\n    ,REASON\n    ,RES_REF\n    ,ROOM\n    ,ROOM_TYPE\n    ,TIME\n    ,MOVE_TIME\n    ,ANALCHANGE\n    ,COMPOSITE\n    ,MOVESUB_REF\n    ,PREVDISDEST\n    ,PREVDISTYPE\nFROM \n    dbo.ADMIN_DISCHARGE\nWHERE\n    HOME_REF = '@{variables('Home_Ref')}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_GRG",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat(variables('Filename'), ' - Resident Movement -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Export Accounts",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Export Resident Movement",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT\n    ACCNO\n    ,ACCSUFFIX\n    ,ACCTYPE\n    ,ACCTYPE2\n    ,ACCTYPE_DECODE\n    ,ACC_REF\n    ,AmendDateTime\n    ,CALENDAR\n    ,CAL_REF\n    ,CHGPER\n    ,Cnta_Det_Ref\n    ,Cont_Ref\n    ,CreateDateTime\n    ,DAILYRATE\n    ,ENDDATE\n    ,FINALINV\n    ,FS_REF\n    ,FUNDSOURCE\n    ,HOME_REF\n    ,LASTRATEDT\n    ,ORIGREF\n    ,PENSBOOK\n    ,PROFILE\n    ,RATE\n    ,RECGRP\n    ,RECGRPDESC\n    ,RELACCREF\n    ,RES_REF\n    ,RecType\n    ,STARTDATE\n    ,SUFFIXSUPERCEDED\n    ,ANAL3\n    ,ATTENTION\n    ,AUTHORISED\n    ,CONSULTANT\n    ,CRCONTROL\n    ,DEBTORCODE\n    ,FUNDREQEDI\n    ,FURC_DEC\n    ,INPFUNDAPR\n    ,LOCALITY\n    ,NURFUNDAPR\n    ,RECONCILED\n    ,BANKACC\n    ,BANKACCNAME\n    ,BANKADDRESS1\n    ,BANKADDRESS2\n    ,BANKADDRESS3\n    ,BANKADDRESS4\n    ,BANKNAME\n    ,BANKPOSTCODE\n    ,BANKSORTCODE\n    ,BANKSTREF\n    ,BANKTRTYPE\n    ,DDMANDREF\n    ,SOCOLDAY\n    ,SOCOLLECT\n    ,SOVALUE\n    ,USAGE\n    ,CALCODE\n    ,PCTDESC\n    ,REVDATE\nFROM \n    ACCOUNT \nWHERE\n    HOME_REF = '@{variables('Home_Ref')}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_GRG",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat(variables('Filename'), ' - Accounts -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Export Fund Source Contacts",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Export Accounts",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT \n    Address1\n    ,Address2\n    ,Address3\n    ,Address4\n    ,AmendDateTime\n    ,CreateDateTime\n    ,EMAIL\n    ,FundSourceName\n    ,GRGApp_GrGsRef\n    ,GRGrep_Cnta_Det_Ref\n    ,Inv_Narrative\n    ,PostCode\n    ,Tel_No1\n    ,Tel_No2\n    ,oCnta_Det_Ref\n    ,CQUIN\n    ,CQUIN_REF\n    ,CQUIN_TYPE\n    ,EDICONTACT\n    ,PAYDAYS\n    ,PAYDAYSDOM\n    ,PAYDAYSDOMDESC\n    ,PAYMONTH\n    ,PAYMONTHDESC\nFROM \n    dbo.FSCONTACTS\nWHERE\n    GRGApp_GrGsRef = '@{variables('Home_Ref')}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_GRG",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat(variables('Filename'), ' - Fund Source Contacts -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Home_Ref": {
						"type": "String",
						"defaultValue": "611"
					},
					"Filename": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Yardi/GRG"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_OnPrem_CH_GRG')]",
				"[concat(variables('factoryId'), '/datasets/DS_Yardi_CSV')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_Avery')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Yardi_MCM_ServiceUsers_MultiHome')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "For Community",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Community Ids",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Community Ids').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Call AZ Function",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_MCM_Data_Extract_CommunityId",
											"type": "DatasetReference",
											"parameters": {
												"MCM_endPoint": {
													"value": "@variables('MCMEndPoint')",
													"type": "Expression"
												},
												"MCM_api_key": {
													"value": "@variables('MCMAPIKey')",
													"type": "Expression"
												},
												"FunctionCode": {
													"value": "@variables('AzFuncCode')",
													"type": "Expression"
												},
												"CommunityId": {
													"value": "@item().MCM_CommunityID",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_Yardi_Json",
											"type": "DatasetReference",
											"parameters": {
												"FileType": {
													"value": "@concat(item().HomeName, ' ', variables('MCMEndPoint'))",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup Community Ids",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set Az Func Code",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set MCM API Key",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT\n    HOME_REF,\n    MCM_CommunityID,\n    HomeName\nFROM \n    [dbo].[ColdHarbourHomeID]\nWHERE\n    MCM_CommunityID IS NOT NULL\n    AND HOME_REF IN (@{variables('Home_Ref_List')})",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Get AZ Func Code",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://avery-adf-keyvault.vault.azure.net/secrets/MCMDataExtractAzFunc/9ad6bb869bce44809b76c700e88d789f?api-version=7.3",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Set Az Func Code",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get AZ Func Code",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "AzFuncCode",
							"value": {
								"value": "@activity('Get AZ Func Code').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get MCM API key",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://avery-adf-keyvault.vault.azure.net/secrets/MCMJonCrockettAPIKey/bde96b82a47a40628426ca459ee044ec?api-version=7.3",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Set MCM API Key",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get MCM API key",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "MCMAPIKey",
							"value": {
								"value": "@activity('Get MCM API key').output.value",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"AzFuncCode": {
						"type": "String"
					},
					"MCMAPIKey": {
						"type": "String"
					},
					"MCMEndPoint": {
						"type": "String",
						"defaultValue": "serviceusers"
					},
					"Home_Ref_List": {
						"type": "String",
						"defaultValue": "610,632,651,639"
					}
				},
				"folder": {
					"name": "Yardi/MCM"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AH2_YardiStage')]",
				"[concat(variables('factoryId'), '/datasets/DS_MCM_Data_Extract_CommunityId')]",
				"[concat(variables('factoryId'), '/datasets/DS_Yardi_Json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Yardi_MaintApp_Tables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DailyChecks_Mlog",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \n    DailyChecks_Mlog.*,\n    --DailyChecks_Master.*,\n    Home.*\nFROM \n    DailyChecks_Mlog\n\n    INNER JOIN dbo.DailyChecks_Master \n        ON dbo.DailyChecks_Mlog.dc_master_id = dbo.DailyChecks_Master.dc_record_id\n\n    INNER JOIN vWelltowerYardiHomes AS Home\n        ON Home.IntranetID = DailyChecks_Master.dc_home_id",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH1_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('Maint App - DailyChecks_Mlog -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "DailyChecks_Master",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DailyChecks_Mlog",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \n    DailyChecks_Master.*,\n    Home.*\nFROM \n    DailyChecks_Master\n\n    INNER JOIN vWelltowerYardiHomes AS Home\n        ON Home.IntranetID = DailyChecks_Master.dc_home_id",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH1_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('Maint App - DailyChecks_Master -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "DailyChecks_MAP",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DailyChecks_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \n    DailyChecks_MAP.*,\n    Home.*\nFROM \n    DailyChecks_MAP\n\n    INNER JOIN vWelltowerYardiHomes AS Home\n        ON Home.IntranetID = DailyChecks_MAP.dc_map_home",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH1_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('Maint App - DailyChecks_MAP -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "DailyChecks_CVlog",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DailyChecks_MAP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \r\n    DailyChecks_CVlog.*,\r\n    --DailyChecks_Master.*,\r\n    Home.*\r\nFROM \r\n    DailyChecks_CVlog\r\n\r\n    INNER JOIN dbo.DailyChecks_Master \r\n        ON dbo.DailyChecks_CVlog.dc_master_id = dbo.DailyChecks_Master.dc_record_id\r\n\r\n    INNER JOIN vWelltowerYardiHomes AS Home\r\n        ON Home.IntranetID = DailyChecks_Master.dc_home_id",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH1_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('Maint App - DailyChecks_CVlog -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "DailyChecks_ABT_Dropdown",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DailyChecks_CVlog",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT * \nFROM \n    DailyChecks_ABT_Dropdown",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH1_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('Maint App - DailyChecks_ABT_Dropdown -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Checks_Callpoints",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DailyChecks_ABT_Dropdown",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT * \nFROM \n    Checks_Callpoints AS CallPoints\n\n    INNER JOIN vWelltowerYardiHomes AS H\n        ON H.IntranetID = CallPoints.HomeID",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH1_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('Maint App - Checks_Callpoints -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Checks_DoorsSensors",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Checks_Callpoints",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT * \nFROM \n    Checks_DoorsSensors AS DoorsSensors\n\n    INNER JOIN vWelltowerYardiHomes AS H\n        ON H.IntranetID = DoorsSensors.HomeID",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH1_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('Maint App - Checks_DoorsSensors -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Checks_FEBlankets",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Checks_DoorsSensors",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT * \nFROM \n    Checks_FEBlankets AS FEBlankets\n\n    INNER JOIN vWelltowerYardiHomes AS H\n        ON H.IntranetID = FEBlankets.HomeID",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH1_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('Maint App - Checks_FEBlankets -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Checks_FireAlarms",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Checks_FEBlankets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT * \nFROM \n    Checks_FireAlarms AS FireAlarms\n\n    INNER JOIN vWelltowerYardiHomes AS H\n        ON H.IntranetID = FireAlarms.HomeID",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH1_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('Maint App - Checks_FireAlarms -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Checks_Floors",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Checks_FireAlarms",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT * \nFROM \n    Checks_Floors AS Floors\n\n    INNER JOIN vWelltowerYardiHomes AS H\n        ON H.IntranetID = Floors.HomeID",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH1_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('Maint App - Checks_Floors -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Checks_Forms",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Checks_Floors",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT * \nFROM \n    Checks_Forms AS Forms",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH1_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('Maint App - Checks_Forms -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Checks_Hoists",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Checks_Forms",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT * \nFROM \n    Checks_Hoists AS Hoists\n\n    INNER JOIN vWelltowerYardiHomes AS H\n        ON H.IntranetID = Hoists.HomeID",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH1_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('Maint App - Checks_Hoists -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Checks_Inventory_General",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Checks_Hoists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT * \nFROM \n    Checks_Inventory_General AS Inventory_General\n\n    INNER JOIN vWelltowerYardiHomes AS H\n        ON H.IntranetID = Inventory_General.HomeID",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH1_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('Maint App - Checks_Inventory_General -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Checks_Master",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Checks_Inventory_General",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT * \nFROM \n    Checks_Master\n\n    INNER JOIN vWelltowerYardiHomes AS H\n        ON H.IntranetID = Checks_Master.HomeID",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH1_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('Maint App - Checks_Master -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Checks_ResultSets",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Checks_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT * \nFROM \n    Checks_ResultSets AS ResultSets\n\n    INNER JOIN vWelltowerYardiHomes AS H\n        ON H.IntranetID = ResultSets.HomeID",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH1_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('Maint App - Checks_ResultSets -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Checks_NurseCallLocations",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Checks_ResultSets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT * \nFROM \n    Checks_NurseCallLocations AS NurseCallLocations\n\n    INNER JOIN vWelltowerYardiHomes AS H\n        ON H.IntranetID = NurseCallLocations.HomeID",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH1_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('Maint App - Checks_NurseCallLocations -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Yardi/Maintenance App"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AH1_Avery')]",
				"[concat(variables('factoryId'), '/datasets/DS_Yardi_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Yardi_ResidentForms')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup Home",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT HOME_REF, HomeName, SITE_REF, IntranetID FROM ColdHarbourHomeID WHERE HOME_REF = '@{variables('Home_Ref')}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Set HomeName",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup Home",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "HomeName",
							"value": {
								"value": "@activity('Lookup Home').output.firstRow.HomeName",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set HomeName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set IntranetID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT \n    [ID]\n    ,[res_no]\n    ,[forename]\n    ,[surname]\n    ,[intranet]\n    ,[change_date]\n    ,[admitted_from]\n    ,[tested_prior_last]\n    ,[tested_date]\n    ,[tested_where]\n    ,[tested_result]\n    ,[symptomatic]\n    ,[symptomatic_date]\n    ,[isolation_Date]\n    ,[isolation_end_date]\n    ,[days_isolated]\n    ,[protocol_followed]\n    ,[hospital_prior]\n    ,[Hospital_lastdate]\n    ,[hospital_duration]\n    ,[hospital_tested]\n    ,[hospital_tested_date]\n    ,[hospital_rest_result]\n    ,[form_type]\n    ,[status]\n    ,[room_no]\n    ,[funding_change]\n    ,[dilaps_charge]\n    ,[SL_Chk_by]\n    ,[SL_chk_date]\n    ,[discharge_reason]\n    ,[comments]\n    ,[dob]\n    ,[SL_comments]\n    ,[NHS_No]\n    ,[Nurs_res]\n    ,[Resp_Perm]\n    ,[disch_date]\n    ,[paymentonadm]\n    ,[NSHIDno]\n    ,[fee]\n    ,[Date_Complete]\nFROM \n    [ResidentForms].[Submitted_Forms]\nWHERE\n    intranet = '@{variables('IntranetID')}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat(variables('HomeName'), '  - Resident Forms - ', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set IntranetID",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup Home",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "IntranetID",
							"value": {
								"value": "@activity('Lookup Home').output.firstRow.IntranetID",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Home_Ref": {
						"type": "String",
						"defaultValue": "611"
					},
					"HomeName": {
						"type": "String"
					},
					"IntranetID": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "Yardi/Resident Forms"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AH2_YardiStage')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_Avery')]",
				"[concat(variables('factoryId'), '/datasets/DS_Yardi_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Yardi_Vendors')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Export Vendors to YardiStage",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Clear YardiStage Vendor Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT 'XRR227' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XRR227.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XRR227.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XAWT01' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XAWT01.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XAWT01.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XKR117' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XKR117.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XKR117.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XWWT03' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XWWT03.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XWWT03.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XLR118' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XLR118.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XLR118.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'KNOW01' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM KNOW01.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            KNOW01.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'KNOW03' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM KNOW03.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            KNOW03.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'BOUR01' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM BOUR01.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            BOUR01.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'ZCR229' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM ZCR229.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            ZCR229.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'WTRB02' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM WTRB02.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            WTRB02.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'WTRB04' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM WTRB04.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            WTRB04.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XGR225' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XGR225.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XGR225.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XBR120' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XBR120.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XBR120.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XFR121' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XFR121.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XFR121.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XOWT04' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XOWT04.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XOWT04.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XXR228' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XXR228.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XXR228.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'ZBWT05' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM ZBWT05.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            ZBWT05.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'WTRB07' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM WTRB07.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            WTRB07.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XPWT06' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XPWT06.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XPWT06.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XQR119' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XQR119.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XQR119.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XCWT07' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XCWT07.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XCWT07.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XUWT08' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XUWT08.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XUWT08.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'ZAWT09' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM ZAWT09.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            ZAWT09.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'WTRB12' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM WTRB12.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            WTRB12.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'WTRB01' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM WTRB01.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            WTRB01.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XDWT10' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XDWT10.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XDWT10.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'WTRB05' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM WTRB05.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            WTRB05.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'KNOW02' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM KNOW02.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            KNOW02.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'WTRB03' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM WTRB03.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            WTRB03.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XER224' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XER224.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XER224.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'PEMB01' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM PEMB01.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            PEMB01.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XHWT11' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XHWT11.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XHWT11.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'SEVE01' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM SEVE01.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            SEVE01.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XIR226' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XIR226.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XIR226.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XSWT12' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XSWT12.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XSWT12.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XTWT02' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XTWT02.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XTWT02.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XYWT13' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XYWT13.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XYWT13.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'WTRB06' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM WTRB06.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            WTRB06.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XJWT14' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XJWT14.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XJWT14.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XMR122' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XMR122.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XMR122.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'WTRB11' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM WTRB11.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            WTRB11.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XZWT15' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XZWT15.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XZWT15.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XNR123' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XNR123.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XNR123.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XVWT16' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XVWT16.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XVWT16.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CompanyCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CompanyCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LatestDate",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LatestDate",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acCustSupp",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acCustSupp",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acCompany",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acCompany",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acArea",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acArea",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acAccType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acAccType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acStatementTo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acStatementTo",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acVATRegNo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acVATRegNo",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acAddressLine1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acAddressLine1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acAddressLine2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acAddressLine2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acAddressLine3",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acAddressLine3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acAddressLine4",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acAddressLine4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acAddressLine5",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acAddressLine5",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acDespAddr",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "acDespAddr",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "acDespAddressLine1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acDespAddressLine1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acDespAddressLine2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acDespAddressLine2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acDespAddressLine3",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acDespAddressLine3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acDespAddressLine4",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acDespAddressLine4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acDespAddressLine5",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acDespAddressLine5",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acContact",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acContact",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acPhone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acPhone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acFax",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acFax",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acTheirAcc",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acTheirAcc",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acOwnTradTerm",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "acOwnTradTerm",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "acTradeTerms1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acTradeTerms1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acTradeTerms2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acTradeTerms2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acCurrency",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acCurrency",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acVATCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acVATCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acPayTerms",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acPayTerms",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acCreditLimit",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "acCreditLimit",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "acDiscount",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "acDiscount",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "acCreditStatus",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acCreditStatus",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acCostCentre",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acCostCentre",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acDiscountBand",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acDiscountBand",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acOrderConsolidationMode",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acOrderConsolidationMode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acDefSettleDays",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acDefSettleDays",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acSpare5",
											"type": "Byte[]",
											"physicalType": "varbinary"
										},
										"sink": {
											"name": "acSpare5",
											"type": "Byte[]",
											"physicalType": "varbinary"
										}
									},
									{
										"source": {
											"name": "acBalance",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "acBalance",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "acDepartment",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acDepartment",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acECMember",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "acECMember",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "acNLineCount",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acNLineCount",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acStatement",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "acStatement",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "acSalesGL",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acSalesGL",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acLocation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acLocation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acAccStatus",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acAccStatus",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acPayType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acPayType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acOldBankSort",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acOldBankSort",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acOldBankAcc",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acOldBankAcc",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acBankRef",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acBankRef",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acAvePay",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acAvePay",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acPhone2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acPhone2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acCOSGL",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acCOSGL",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acDrCrGL",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acDrCrGL",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acLastUsed",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acLastUsed",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acUserDef1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acUserDef1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acUserDef2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acUserDef2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acInvoiceTo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acInvoiceTo",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acSOPAutoWOff",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "acSOPAutoWOff",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "acFormSet",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acFormSet",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acBookOrdVal",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "acBookOrdVal",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "acDirDebMode",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acDirDebMode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acCCStart",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acCCStart",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acCCEnd",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acCCEnd",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acCCName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acCCName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acCCNumber",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acCCNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acCCSwitch",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acCCSwitch",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acDefSettleDisc",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "acDefSettleDisc",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "acStateDeliveryMode",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acStateDeliveryMode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acSpare2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acSpare2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acSendReader",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "acSendReader",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "acEBusPword",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acEBusPword",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acPostCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acPostCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acAltCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acAltCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acUseForEbus",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acUseForEbus",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acZIPAttachments",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acZIPAttachments",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acUserDef3",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acUserDef3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acUserDef4",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acUserDef4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acWebLiveCatalog",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acWebLiveCatalog",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acWebPrevCatalog",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acWebPrevCatalog",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acTimeStamp",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acTimeStamp",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acVATCountryCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acVATCountryCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acSSDDeliveryTerms",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acSSDDeliveryTerms",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acInclusiveVATCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acInclusiveVATCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acSSDModeOfTransport",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acSSDModeOfTransport",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acPrivateRec",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "acPrivateRec",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "acLastOperator",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acLastOperator",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acDocDeliveryMode",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acDocDeliveryMode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acSendHTML",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "acSendHTML",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "acEmailAddr",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acEmailAddr",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acOfficeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acOfficeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acDefTagNo",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acDefTagNo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acUserDef5",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acUserDef5",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acUserDef6",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acUserDef6",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acUserDef7",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acUserDef7",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acUserDef8",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acUserDef8",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acUserDef9",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acUserDef9",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acUserDef10",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acUserDef10",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acBankSortCode",
											"type": "Byte[]",
											"physicalType": "varbinary"
										},
										"sink": {
											"name": "acBankSortCode",
											"type": "Byte[]",
											"physicalType": "varbinary"
										}
									},
									{
										"source": {
											"name": "acBankAccountCode",
											"type": "Byte[]",
											"physicalType": "varbinary"
										},
										"sink": {
											"name": "acBankAccountCode",
											"type": "Byte[]",
											"physicalType": "varbinary"
										}
									},
									{
										"source": {
											"name": "acMandateID",
											"type": "Byte[]",
											"physicalType": "varbinary"
										},
										"sink": {
											"name": "acMandateID",
											"type": "Byte[]",
											"physicalType": "varbinary"
										}
									},
									{
										"source": {
											"name": "acMandateDate",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acMandateDate",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acDeliveryPostCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acDeliveryPostCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acSubType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acSubType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acLongAcCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acLongAcCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acAllowOrderPayments",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "acAllowOrderPayments",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "acOrderPaymentsGLCode",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acOrderPaymentsGLCode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acCountry",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acCountry",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acDeliveryCountry",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acDeliveryCountry",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acPPDMode",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acPPDMode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acDefaultToQR",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "acDefaultToQR",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "acTaxRegion",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acTaxRegion",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acAnonymisationStatus",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acAnonymisationStatus",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acAnonymisedDate",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acAnonymisedDate",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acAnonymisedTime",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acAnonymisedTime",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acRCEndUser",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acRCEndUser",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PositionId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PositionId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_Exchequer",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "ExchequerVendors"
								}
							}
						]
					},
					{
						"name": "Export Vendors",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Export Vendors to YardiStage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT \n    CompanyCode\n    ,LatestDate\n    ,acCode\n    ,acCustSupp\n    ,acCompany\n    ,acArea\n    ,acAccType\n    ,acStatementTo\n    ,acVATRegNo\n    ,acAddressLine1\n    ,acAddressLine2\n    ,acAddressLine3\n    ,acAddressLine4\n    ,acAddressLine5\n    ,acDespAddr\n    ,acDespAddressLine1\n    ,acDespAddressLine2\n    ,acDespAddressLine3\n    ,acDespAddressLine4\n    ,acDespAddressLine5\n    ,acContact\n    ,acPhone\n    ,acFax\n    ,acTheirAcc\n    ,acOwnTradTerm\n    ,acTradeTerms1\n    ,acTradeTerms2\n    ,acCurrency\n    ,acVATCode\n    ,acPayTerms\n    ,acCreditLimit\n    ,acDiscount\n    ,acCreditStatus\n    ,acCostCentre\n    ,acDiscountBand\n    ,acOrderConsolidationMode\n    ,acDefSettleDays\n    ,acSpare5\n    ,acBalance\n    ,acDepartment\n    ,acECMember\n    ,acNLineCount\n    ,acStatement\n    ,acSalesGL\n    ,acLocation\n    ,acAccStatus\n    ,acPayType\n    ,acOldBankSort\n    ,acOldBankAcc\n    ,acBankRef\n    ,acAvePay\n    ,acPhone2\n    ,acCOSGL\n    ,acDrCrGL\n    ,acLastUsed\n    ,acUserDef1\n    ,acUserDef2\n    ,acInvoiceTo\n    ,acSOPAutoWOff\n    ,acFormSet\n    ,acBookOrdVal\n    ,acDirDebMode\n    ,acCCStart\n    ,acCCEnd\n    ,acCCName\n    ,acCCNumber\n    ,acCCSwitch\n    ,acDefSettleDisc\n    ,acStateDeliveryMode\n    ,acSpare2\n    ,acSendReader\n    ,acEBusPword\n    ,acPostCode\n    ,acAltCode\n    ,acUseForEbus\n    ,acZIPAttachments\n    ,acUserDef3\n    ,acUserDef4\n    ,acWebLiveCatalog\n    ,acWebPrevCatalog\n    ,acTimeStamp\n    ,acVATCountryCode\n    ,acSSDDeliveryTerms\n    ,acInclusiveVATCode\n    ,acSSDModeOfTransport\n    ,acPrivateRec\n    ,acLastOperator\n    ,acDocDeliveryMode\n    ,acSendHTML\n    ,acEmailAddr\n    ,acOfficeType\n    ,acDefTagNo\n    ,acUserDef5\n    ,acUserDef6\n    ,acUserDef7\n    ,acUserDef8\n    ,acUserDef9\n    ,acUserDef10\n    ,acBankSortCode\n    ,acBankAccountCode\n    ,acMandateID\n    ,acMandateDate\n    ,acDeliveryPostCode\n    ,acSubType\n    ,acLongAcCode\n    ,acAllowOrderPayments\n    ,acOrderPaymentsGLCode\n    ,acCountry\n    ,acDeliveryCountry\n    ,acPPDMode\n    ,acDefaultToQR\n    ,acTaxRegion\n    ,acAnonymisationStatus\n    ,acAnonymisedDate\n    ,acAnonymisedTime\n    ,acRCEndUser\n    ,PositionId\nFROM \n    dbo.ExchequerVendors\nWHERE\n    CompanyCode IN (@{variables('CompanyCodeList')})",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": "@concat('Exchequer Vendors - ', utcNow('yyyy-MM-dd'), '.csv')"
								}
							}
						]
					},
					{
						"name": "Clear YardiStage Vendor Table",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "List ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AH2_YardiStage",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].[ExchequerVendors]"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Company List",
						"description": "Sets an array to contain the list of companies required for exporting",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ExchequerCompanyList",
							"value": [
								"'XFR121'",
								"'WTRB06'",
								"'XYWT13'",
								"'XMR122'"
							]
						}
					},
					{
						"name": "List ID",
						"description": "Converts the company IDs in the array to a list variable to be used in the SQL Query Source in Export Vendors",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Company List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "CompanyCodeList",
							"value": {
								"value": "@join(variables('ExchequerCompanyList'), ',')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Export All Vendors",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Export Vendors",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT \n    CompanyCode\n    ,LatestDate\n    ,acCode\n    ,acCustSupp\n    ,acCompany\n    ,acArea\n    ,acAccType\n    ,acStatementTo\n    ,acVATRegNo\n    ,acAddressLine1\n    ,acAddressLine2\n    ,acAddressLine3\n    ,acAddressLine4\n    ,acAddressLine5\n    ,acDespAddr\n    ,acDespAddressLine1\n    ,acDespAddressLine2\n    ,acDespAddressLine3\n    ,acDespAddressLine4\n    ,acDespAddressLine5\n    ,acContact\n    ,acPhone\n    ,acFax\n    ,acTheirAcc\n    ,acOwnTradTerm\n    ,acTradeTerms1\n    ,acTradeTerms2\n    ,acCurrency\n    ,acVATCode\n    ,acPayTerms\n    ,acCreditLimit\n    ,acDiscount\n    ,acCreditStatus\n    ,acCostCentre\n    ,acDiscountBand\n    ,acOrderConsolidationMode\n    ,acDefSettleDays\n    ,acSpare5\n    ,acBalance\n    ,acDepartment\n    ,acECMember\n    ,acNLineCount\n    ,acStatement\n    ,acSalesGL\n    ,acLocation\n    ,acAccStatus\n    ,acPayType\n    ,acOldBankSort\n    ,acOldBankAcc\n    ,acBankRef\n    ,acAvePay\n    ,acPhone2\n    ,acCOSGL\n    ,acDrCrGL\n    ,acLastUsed\n    ,acUserDef1\n    ,acUserDef2\n    ,acInvoiceTo\n    ,acSOPAutoWOff\n    ,acFormSet\n    ,acBookOrdVal\n    ,acDirDebMode\n    ,acCCStart\n    ,acCCEnd\n    ,acCCName\n    ,acCCNumber\n    ,acCCSwitch\n    ,acDefSettleDisc\n    ,acStateDeliveryMode\n    ,acSpare2\n    ,acSendReader\n    ,acEBusPword\n    ,acPostCode\n    ,acAltCode\n    ,acUseForEbus\n    ,acZIPAttachments\n    ,acUserDef3\n    ,acUserDef4\n    ,acWebLiveCatalog\n    ,acWebPrevCatalog\n    ,acTimeStamp\n    ,acVATCountryCode\n    ,acSSDDeliveryTerms\n    ,acInclusiveVATCode\n    ,acSSDModeOfTransport\n    ,acPrivateRec\n    ,acLastOperator\n    ,acDocDeliveryMode\n    ,acSendHTML\n    ,acEmailAddr\n    ,acOfficeType\n    ,acDefTagNo\n    ,acUserDef5\n    ,acUserDef6\n    ,acUserDef7\n    ,acUserDef8\n    ,acUserDef9\n    ,acUserDef10\n    ,acBankSortCode\n    ,acBankAccountCode\n    ,acMandateID\n    ,acMandateDate\n    ,acDeliveryPostCode\n    ,acSubType\n    ,acLongAcCode\n    ,acAllowOrderPayments\n    ,acOrderPaymentsGLCode\n    ,acCountry\n    ,acDeliveryCountry\n    ,acPPDMode\n    ,acDefaultToQR\n    ,acTaxRegion\n    ,acAnonymisationStatus\n    ,acAnonymisedDate\n    ,acAnonymisedTime\n    ,acRCEndUser\n    ,PositionId\nFROM \n    dbo.ExchequerVendors",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('Exchequer All Vendors - ', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Filename": {
						"type": "String"
					},
					"ExchequerCompanyList": {
						"type": "Array"
					},
					"CompanyCodeList": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Yardi/Exchequer"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_OnPrem_Exchequer')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_YardiStage')]",
				"[concat(variables('factoryId'), '/datasets/DS_Yardi_CSV')]",
				"[concat(variables('factoryId'), '/linkedServices/AH2_YardiStage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_YourHIppo_UniqueResults')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Executes the Stored proc to get unique results into the Results table",
				"activities": [
					{
						"name": "Exec Insert UniqueResults",
						"description": "YourHippo.Insert$UniqueResults",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AH2_TRANSFORM_DB",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "EXEC YourHippo.Insert$UniqueResults"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "YourHippo/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_YourHippo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Upsert Entity Details",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"EntityID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"name": "EntityID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['name']"
										},
										"sink": {
											"name": "EntityName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['email']"
										},
										"sink": {
											"name": "Email",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_YourHippo_EntityList",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "YourHippo",
									"Table": "Entity"
								}
							}
						]
					},
					{
						"name": "Upsert Courses",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Upsert Entity Details",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"CourseID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"name": "CourseID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['title']"
										},
										"sink": {
											"name": "CourseTitle",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['published']"
										},
										"sink": {
											"name": "Published",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['archived']"
										},
										"sink": {
											"name": "Archived",
											"type": "Boolean"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "DS_YourHippo_Courses",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "YourHippo",
									"Table": "Course"
								}
							}
						]
					},
					{
						"name": "Upsert Users",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Upsert Courses",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"UserID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"name": "UserID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['employee_number']"
										},
										"sink": {
											"name": "EmployeeNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['created_at']"
										},
										"sink": {
											"name": "CreatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['name']"
										},
										"sink": {
											"name": "UserName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['email']"
										},
										"sink": {
											"name": "Email",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['gender']['description']"
										},
										"sink": {
											"name": "Gender",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['job_title']"
										},
										"sink": {
											"name": "JobTitle",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['role']['name']"
										},
										"sink": {
											"name": "UserRole",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['primaryEntity']['id']"
										},
										"sink": {
											"name": "PrimaryEntityID",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_YourHippo_Users",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "YourHippo",
									"Table": "Users"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "YourHippo"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_YourHippo_EntityList')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]",
				"[concat(variables('factoryId'), '/datasets/DS_YourHippo_Courses')]",
				"[concat(variables('factoryId'), '/datasets/DS_YourHippo_Users')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_YourHippo_AllResults')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ResultID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"name": "ResultID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['passed']"
										},
										"sink": {
											"name": "Passed",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['score']"
										},
										"sink": {
											"name": "Score",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['completed_at']"
										},
										"sink": {
											"name": "CompletedAt",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['expires_at']"
										},
										"sink": {
											"name": "ExpiresAt",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['course']['id']"
										},
										"sink": {
											"name": "CourseID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "$['user']['id']"
										},
										"sink": {
											"name": "UserID",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_YourHippo_AllResults",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "YourHippo",
									"Table": "Results"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "YourHippo"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_YourHippo_AllResults')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_YourHippo_Delete_Archive_Files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Deletes files older than 4 days from the archive to prevent build up",
				"activities": [
					{
						"name": "Delete Result Archive Files",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_YourHippo_WebHook_Files",
								"type": "DatasetReference",
								"parameters": {
									"Folder": "WebhookFiles/Archive/Result"
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": false,
								"modifiedDatetimeStart": {
									"value": "@addDays(utcNow(), -20 )",
									"type": "Expression"
								},
								"modifiedDatetimeEnd": {
									"value": "@addDays(utcNow(), -4 )",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Delete User Archive",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Delete Result Archive Files",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_YourHippo_WebHook_Files",
								"type": "DatasetReference",
								"parameters": {
									"Folder": "WebhookFiles/Archive/User"
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": false,
								"modifiedDatetimeStart": {
									"value": "@addDays(utcNow(), -20 )",
									"type": "Expression"
								},
								"modifiedDatetimeEnd": {
									"value": "@addDays(utcNow(), -4 )",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "YourHippo"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_YourHippo_WebHook_Files')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_YourHippo_Move_WebHook_Files_Step1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Moves the user and result files to Fileshare to be combined by a python script in the VM. Moves Verification files to another folder.",
				"activities": [
					{
						"name": "Move User Files",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFileName": "webhook$user*.json",
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureFileStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_YourHippo_WebHook_Route_Files",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Fileshare",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Move Result Files",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Move User Files",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFileName": "webhook$result*.json",
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureFileStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_YourHippo_WebHook_Route_Files",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Fileshare",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Move Verification Files",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Move Result Files",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFileName": "webhook$verification*.json",
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_YourHippo_WebHook_Route_Files",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_YourHippo_WebHook_Files",
								"type": "DatasetReference",
								"parameters": {
									"Folder": {
										"value": "@concat('WebhookFiles','/','Verification')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "YourHippo/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_YourHippo_WebHook_Route_Files')]",
				"[concat(variables('factoryId'), '/datasets/DS_PolestarStorageAcc_Fileshare')]",
				"[concat(variables('factoryId'), '/datasets/DS_YourHippo_WebHook_Files')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_YourHippo_Move_WebHook_Files_Step2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Moves the merged user and result file back to YourHippo container.",
				"activities": [
					{
						"name": "Copy Merged files",
						"description": "Move merged files to AZ storage container",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Remove webhookfiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": false,
									"wildcardFileName": "yh_merged*.json",
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Fileshare",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Polestar_Storage",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@concat('yourhippo','/','mergedfiles', '/', formatDateTime(utcNow(), 'yyyy'),'/',formatDateTime(utcNow(), 'MM'),'/',formatDateTime(utcNow(), 'dd') )",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Remove webhookfiles",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_PolestarStorageAcc_Fileshare",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureFileStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "webhook$*.json",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Remove webhookfiles_copy1",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy Merged files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_PolestarStorageAcc_Fileshare",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureFileStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "yh_merged_*.json",
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "YourHippo/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_PolestarStorageAcc_Fileshare')]",
				"[concat(variables('factoryId'), '/datasets/DS_Polestar_Storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_YourHippo_Process_Merged_Files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Inserts results into the stage table and upserts user table",
				"activities": [
					{
						"name": "Copy merged results data to Stage table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "ResultID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['passed']"
										},
										"sink": {
											"name": "Passed",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['grade']"
										},
										"sink": {
											"name": "Grade",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['score']"
										},
										"sink": {
											"name": "Score",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "[['completed_at']"
										},
										"sink": {
											"name": "CompletedAt",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['expires_at']"
										},
										"sink": {
											"name": "ExpiresAt",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['has_expired']"
										},
										"sink": {
											"name": "HasExpired",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['course']['id']"
										},
										"sink": {
											"name": "CourseID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['user']['id']"
										},
										"sink": {
											"name": "UserID",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['results']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_YourHippo_Merged_results",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "YourHippo",
									"Table": "StageResults"
								}
							}
						]
					},
					{
						"name": "Upsert users data to Users table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy merged results data to Stage table",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"UserID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "UserID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['employee_number']"
										},
										"sink": {
											"name": "EmployeeNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['created_at']"
										},
										"sink": {
											"name": "CreatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['start_date']"
										},
										"sink": {
											"name": "StartDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "UserName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['email']"
										},
										"sink": {
											"name": "Email",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['gender']['description']"
										},
										"sink": {
											"name": "Gender",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['job_title']"
										},
										"sink": {
											"name": "JobTitle",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['role']['name']"
										},
										"sink": {
											"name": "UserRole",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['primaryEntity']['id']"
										},
										"sink": {
											"name": "PrimaryEntityID",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['users']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_YourHippo_Merged_users",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "YourHippo",
									"Table": "Users"
								}
							}
						]
					},
					{
						"name": "Exceptions",
						"description": "Add any exceptions to a Exception table, to be retried at a later date",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Upsert users data to Users table",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['file_type']"
										},
										"sink": {
											"name": "QueryType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"name": "ID",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_YourHippo_Merged_Result_Exceptions",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "YourHippo",
									"Table": "WebHookExceptions"
								}
							}
						]
					},
					{
						"name": "Failure on Exceptions",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "Exceptions",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "Failure on Exceptions",
							"errorCode": "404"
						}
					},
					{
						"name": "Failure on Users",
						"description": "",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "Upsert users data to Users table",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "Failure on Users",
							"errorCode": "404"
						}
					},
					{
						"name": "Failure on Results",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "Copy merged results data to Stage table",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "Failure on Results",
							"errorCode": "404"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "YourHippo/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_YourHippo_Merged_results')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]",
				"[concat(variables('factoryId'), '/datasets/DS_YourHippo_Merged_users')]",
				"[concat(variables('factoryId'), '/datasets/DS_YourHippo_Merged_Result_Exceptions')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UT_Send_Email')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Send Email",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set EmailTo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://prod-03.uksouth.logic.azure.com:443/workflows/0a68dc6512a34064a348fc3ae0b5f808/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=roREdR40o4TL4LlAWfBRXFl4FqFOifD2bKaIC-yucN4",
							"body": {
								"value": "{\n    \"emailTo\": \"@{variables('EmailTo')}\",\n    \"subject\": \"Test Email 7\",\n    \"message\": \"Hello, this is a test email sent by Avery-ADF with a variable used to set the email address.\",\n    \"color\": \"Green\",\n    \"pipelineName\": \"@{pipeline().Pipeline}\",\n    \"pipelineRunId\": \"@{pipeline().RunId}\",\n    \"time\": \"@{utcNow()}\",\n    \n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set EmailTo",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "EmailTo",
							"value": {
								"value": "jon.crockett@averyhealthcare.co.uk",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"EmailTo": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-09-18T15:03:11Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UT_Send_Email_Param')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Send Email",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://prod-03.uksouth.logic.azure.com:443/workflows/0a68dc6512a34064a348fc3ae0b5f808/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=roREdR40o4TL4LlAWfBRXFl4FqFOifD2bKaIC-yucN4",
							"body": {
								"value": "{\n    \"emailTo\": \"@{pipeline().parameters.EmailTo}\",\n     \"message\": \"@{pipeline().parameters.Message}\",\n    \"colour\": \"@{pipeline().parameters.Colour}\",\n    \"pipelineName\": \"@{pipeline().parameters.PipelineName}\",\n    \"pipelineRunId\": \"@{pipeline().parameters.PipelineRunID}\",\n    \"stepFailed\": \"@{pipeline().parameters.pStepFailed}\",\n    \"time\": \"@{utcNow()}\"    \n}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"EmailTo": {
						"type": "string"
					},
					"Message": {
						"type": "string"
					},
					"Colour": {
						"type": "string"
					},
					"PipelineName": {
						"type": "string"
					},
					"PipelineRunID": {
						"type": "string"
					},
					"pStepFailed": {
						"type": "string"
					}
				},
				"variables": {
					"EmailTo": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-09-18T15:39:36Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/XPL_CH_Bill_Profile_With_Calendar')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Export billing profiles and Calendars used",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT DISTINCT\n\tP.PRO_CODE AS profile_code,\n\tP.PRODESC AS profile_description,\n\tCALENDAR.CAL_REF AS Cal_Ref,\n\tCALENDAR.CAL_CODE AS calendar_code,\n\tCALENDAR.CAL_DESC AS calendar_description\t\nFROM \n\tFUNDSRC_HD AS ACC\n\n\tLEFT JOIN PROFILES AS P\n\t\tON P.PRO_REF = ACC.PRO_REF\n\n\tLEFT JOIN CONTACT_HD AS CONTACT\n\t\tON CONTACT.CONTACT_REF = ACC.CNTA_DET_REF\n\n\tLEFT JOIN CALENDAR_HD AS CALENDAR\n\t\tON CALENDAR.CAL_REF = ACC.CAL_REF\nWHERE\n\tP.FSTYPE = 401",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_IP",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('LA Billing Profile Calendar Usage - ', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Yardi/CHIP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_OnPrem_CH_IP')]",
				"[concat(variables('factoryId'), '/datasets/DS_Yardi_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/XPL_CH_Calendars')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Extract Calendars",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Clear Calendars table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT DISTINCT\n    Site.SiteName\n    ,Site.SiteId\n    ,Calendar_Hd.Cal_Ref\n    ,Calendar_Hd.Cal_code AS calendar_code\n    ,Calendar_Hd.Cal_desc as calendar_description\n    ,DECGrouping.Description AS calendar_grouping\n    ,Calendar_Hd.Invdtoff\n    ,Calendar_Hd.Invdttype\n    ,Calendar_Hd.BldStartDt AS calendar_start_date\n    ,Calendar_Hd.BldEndDt AS calendar_end_date\n    ,Calendar_Hd.BldFreq AS frequency\n    ,Calendar_Hd.BldDays AS no_of_days\n    ,Calendar_Hd.ProcFlag\n    ,Calendar_Hd.SiteFilter\n    ,Calendar_Hd.Sched_Only\n    ,Calendar_Hd.AutoProc\n    ,Calendar_Hd.ProcOffset\n    ,Calendar_Hd.AutoProcWarn\n    ,Calendar_Hd.InvOffset\n    ,Calendar_Hd.AutoInvWarn\n    ,Calendar_Dt.StartDate AS period_start_date\n    ,Calendar_Dt.EndDate AS period_end_date\n    ,Calendar_Dt.BillDate AS period_bill_date\n    ,Calendar_Dt.SSProcessDate\n    ,Calendar_Dt.SSInvoiceDate\nFROM \n\tCalendar_Hd (NOLOCK)\n    \n\tJOIN ChSysDec AS DECGrouping (NOLOCK)\n        ON DECGrouping.Decode_Ref = Calendar_Hd.Grouping\n    \n\tJOIN Calendar_Dt (NOLOCK)\n        ON Calendar_Dt.Cal_Ref = Calendar_Hd.Cal_Ref\n    \n\tJOIN Site (NOLOCK)\n        ON Site.Site_Ref IN (\n                                SELECT Site_Ref\n                                FROM Site_Join (NOLOCK)\n                                WHERE Site_Join.LinkKey = Calendar_Hd.Cal_Ref\n                                      AND upper(Site_Join.LinkTable) = 'CALENDAR_HD'\n                            )\n           OR Calendar_Hd.SiteFilter = 0\nWHERE \n\tCalendar_Hd.Cal_Code\n    BETWEEN '      ' AND 'ZZZZZZ'\n    AND Calendar_Dt.StartDate\n    BETWEEN '17530101' AND '20991212'\n    AND Calendar_Dt.EndDate\n    BETWEEN '17530101' AND '20991212'\n    AND (\n            Calendar_Dt.BillDate\n    BETWEEN '17530101' AND '20991212'\n            OR Calendar_Dt.BillDate IS NULL\n        )\n    AND Site.SITEID IN (\n\t071,\n\t072,\n\t073,\n\t074,\n\t075,\n\t078,\n\t079,\n\t086,\n\t089,\n\t088,\n\t091,\n\t092,\n\t090,\n\t095,\n\t096,\n\t097,\n\t098,\n\t099,\n\t100,\n\t101,\n\t102,\n\t103,\n\t104,\n\t105,\n\t106,\n\t107,\n\t108,\n\t109,\n\t110,\n\t111,\n\t112,\n\t113,\n\t114,\n\t115,\n\t116,\n\t117,\n\t118,\n\t119,\n\t120,\n\t121,\n\t122,\n\t123,\n\t127,\n\t128\n\t)\nORDER BY \n\tCalendar_Hd.Cal_code",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_IP",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "Calendars"
								}
							}
						]
					},
					{
						"name": "Export to CSV file",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Extract Calendars",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \n    H.HOME_REF\n    ,SiteName\n    --,Cal.SiteId\n    ,Cal_Ref\n    ,calendar_code\n    ,calendar_description\n    ,calendar_grouping\n    --,Invdtoff\n    --,Invdttype\n    ,calendar_start_date\n    ,calendar_end_date\n    ,frequency\n    ,no_of_days\n    ,ProcFlag\n    ,SiteFilter\n    ,Sched_Only\n    --,AutoProc\n    --,ProcOffset\n    --,AutoProcWarn\n    --,InvOffset\n    --,AutoInvWarn\n    ,period_start_date\n    ,period_end_date\n    ,period_bill_date\n    ,SSProcessDate\n    ,SSInvoiceDate\nFROM \n    dbo.Calendars AS Cal\n\n    LEFT JOIN dbo.ColdHarbourHomeID AS H\n        ON H.SITEID = Cal.SiteID\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('Calendars - ', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Clear Calendars table",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AH2_YardiStage",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE dbo.Calendars"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Yardi/CHIP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_OnPrem_CH_IP')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_YardiStage')]",
				"[concat(variables('factoryId'), '/datasets/DS_Yardi_CSV')]",
				"[concat(variables('factoryId'), '/linkedServices/AH2_YardiStage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/XPL_Yardi_Actuals')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Exports the current monthh actuals/TB/Journel Entries from the Actuals table from TRANSFORM_DB. This table is loaded by the excel file macro on 192.168.1.165 (also hosted on the S drive). Taking data from Exchequer using the OLE links.",
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set FileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "\r\nSELECT\r\n    ExchCode,\r\n    GLCODE,\r\n    actual_desc,\r\n    CAST(Period AS DATE) AS Period,\r\n    amount * -1 AS amount\r\nFROM \r\n    Exchequer.Actuals \r\nWHERE \r\n    Period = '2025-04-01'\r\n    AND ExchCode IN \r\n    (   \r\n    SELECT\r\n        ExchCode\r\n    FROM \r\n        Avery.HomeDetails\r\n    WHERE\r\n        ColdHarbourHOME_REF IN (\r\n        644,\r\n        627,\r\n        637,\r\n        649,\r\n        638,\r\n        655,\r\n        633,\r\n        628,\r\n        632,\r\n        641,\r\n        650,\r\n        654,\r\n        642,\r\n        643,\r\n        629,\r\n        647,\r\n        653,\r\n        630,\r\n        631,\r\n        610,\r\n        634,\r\n        635,\r\n        645,\r\n        646,\r\n        651,\r\n        636,\r\n        639,\r\n        652,\r\n        640,\r\n        648)\r\n    )\r\n    AND GLCODE \r\nIN (\r\n20000,\r\n20010,\r\n20020,\r\n21000,\r\n21010,\r\n21020,\r\n29000,\r\n29010,\r\n29020,\r\n29030,\r\n29040,\r\n29050,\r\n29900,\r\n29910,\r\n29920,\r\n29930,\r\n29931,\r\n29932,\r\n29940,\r\n29950,\r\n29955,\r\n29960,\r\n29965,\r\n29970,\r\n29975,\r\n29980,\r\n29990,\r\n29991,\r\n30000,\r\n30010,\r\n30020,\r\n30030,\r\n31000,\r\n31010,\r\n31020,\r\n31030,\r\n32000,\r\n32010,\r\n32020,\r\n32021,\r\n32025,\r\n32026,\r\n32030,\r\n32040,\r\n39000,\r\n39005,\r\n39006,\r\n39010,\r\n39011,\r\n39012,\r\n40000,\r\n40500,\r\n41000,\r\n41010,\r\n41020,\r\n41030,\r\n41500,\r\n41510,\r\n42000,\r\n42001,\r\n42002,\r\n42003,\r\n42010,\r\n42020,\r\n42030,\r\n42040,\r\n42050,\r\n42500,\r\n42510,\r\n42520,\r\n42530,\r\n42540,\r\n42550,\r\n43000,\r\n43010,\r\n43020,\r\n43500,\r\n43510,\r\n43520,\r\n43530,\r\n44000,\r\n44010,\r\n44020,\r\n44030,\r\n44040,\r\n44050,\r\n44060,\r\n44070,\r\n44080,\r\n44090,\r\n44100,\r\n44110,\r\n44500,\r\n44510,\r\n44520,\r\n44530,\r\n44540,\r\n44550,\r\n45000,\r\n45010,\r\n45020,\r\n45030,\r\n45500,\r\n45505,\r\n45510,\r\n45515,\r\n45520,\r\n45525,\r\n45530,\r\n45531,\r\n45535,\r\n45536,\r\n45540,\r\n45545,\r\n45550,\r\n45555,\r\n45560,\r\n45565,\r\n45570,\r\n45575,\r\n45580,\r\n45585,\r\n45599,\r\n49000,\r\n49005,\r\n49010,\r\n49015,\r\n49020,\r\n49025,\r\n49030,\r\n49035,\r\n49040,\r\n49045,\r\n49050,\r\n49055,\r\n49056,\r\n49060,\r\n49065,\r\n49070,\r\n49075,\r\n49080,\r\n50000,\r\n50010,\r\n50020,\r\n50030,\r\n50040,\r\n50050,\r\n50060,\r\n50070,\r\n50080,\r\n60000,\r\n60010,\r\n61000,\r\n62000,\r\n62001,\r\n62002,\r\n62010,\r\n62020,\r\n63000,\r\n63001,\r\n63002,\r\n63003,\r\n63004,\r\n63005,\r\n63006,\r\n63007,\r\n63008,\r\n63009,\r\n63100,\r\n63101,\r\n63102,\r\n63103,\r\n63104,\r\n63105,\r\n63106,\r\n63107,\r\n63108,\r\n63109,\r\n63200,\r\n63201,\r\n63202,\r\n63203,\r\n63204,\r\n63205,\r\n63206,\r\n63207,\r\n63208,\r\n63209,\r\n64000,\r\n64001,\r\n64002,\r\n64003,\r\n64004,\r\n64005,\r\n64006,\r\n64007,\r\n64008,\r\n64009,\r\n64100,\r\n64101,\r\n64102,\r\n64103,\r\n64104,\r\n64105,\r\n64106,\r\n64107,\r\n64108,\r\n64109,\r\n64200,\r\n64201,\r\n64202,\r\n64203,\r\n64204,\r\n64205,\r\n64206,\r\n64207,\r\n64208,\r\n64209,\r\n70000,\r\n70010,\r\n70011,\r\n70012,\r\n70020,\r\n71000,\r\n71010,\r\n71020,\r\n71030,\r\n71040,\r\n71050,\r\n72000,\r\n72010,\r\n72020,\r\n72030,\r\n73000,\r\n73001,\r\n73010,\r\n73020,\r\n73030,\r\n80000,\r\n80010,\r\n80020,\r\n81000,\r\n81005,\r\n81010,\r\n81015,\r\n81020,\r\n81030,\r\n81040,\r\n81050,\r\n81060,\r\n81070,\r\n81075,\r\n82000,\r\n82010,\r\n82015,\r\n82020,\r\n82030,\r\n82040,\r\n82050,\r\n82060,\r\n82070,\r\n82080,\r\n82090,\r\n82091,\r\n82100,\r\n82101,\r\n82102,\r\n82103,\r\n82104,\r\n82105,\r\n82106,\r\n82107,\r\n82108,\r\n82109,\r\n82110,\r\n82111,\r\n82112,\r\n82113,\r\n82114,\r\n82115,\r\n82116,\r\n82117,\r\n82118,\r\n82119,\r\n82120,\r\n82121,\r\n82122,\r\n82123,\r\n82124,\r\n82125,\r\n82126,\r\n82127,\r\n82128,\r\n82129,\r\n83000,\r\n83005,\r\n83010,\r\n83015,\r\n83020,\r\n83025,\r\n83030,\r\n83031,\r\n83035,\r\n83040,\r\n83042,\r\n83045,\r\n83050,\r\n83055,\r\n83060,\r\n83065,\r\n83070,\r\n83075,\r\n83080,\r\n83085,\r\n83086,\r\n83087,\r\n83090,\r\n83095,\r\n83100,\r\n83105,\r\n84000,\r\n84010,\r\n84011,\r\n84012,\r\n84020,\r\n84030,\r\n90000,\r\n90010,\r\n90020,\r\n90030,\r\n90031,\r\n90032,\r\n90040,\r\n90050\r\n)\r\nORDER BY\r\n    ExchCode ASC,\r\n    GLCODE ASC",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Exchequer",
									"Table": "Actuals"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@variables('FileName')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set PeriodDate",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "PeriodDate",
							"value": {
								"value": "@formatDateTime(startOfMonth(utcNow()), 'yyyy-MM-dd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set FileName",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set PeriodDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "FileName",
							"value": {
								"value": "@concat('Avery Actuals - ',formatDateTime(variables('PeriodDate'), 'MMMM'), ' - ', variables('PeriodDate'), '.csv')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"PeriodDate": {
						"type": "String"
					},
					"FileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Yardi/Exchequer"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]",
				"[concat(variables('factoryId'), '/datasets/DS_Yardi_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/XPL_Yardi_CH_IP_LedgerDetails')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Export Ledger and comments",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set SITE_REF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT\t \n\t'@{variables('Home_Ref')}' AS HOME_REF,\n\tSite.SiteId AS siteid,\n\tSite.SiteName as sitename, \n\tRESIDENT.RES_CODE as resident_no,\n\tInvPosting.account_No, \n\tInvPosting.Cre_DateT AS created_date, \n\tInvPosting.Inv_Date AS transaction_date,\n\tCASE \n\t\tWHEN InvPosting.Tran_Type = 'U' THEN 'Receipt'\n\t\tWHEN InvPosting.Tran_Type = 'I' THEN 'Invoice'\n\t\tWHEN InvPosting.Tran_Type = 'C' THEN 'Credit'\n\t\tWHEN InvPosting.Tran_Type = 'J' THEN 'Adjustment'\n\t\tELSE ''\n\tEND AS transaction_type,\n\tInvPosting.Ref1 AS transaction_ref1, \n\tInvPosting.Ref2 AS transaction_ref2, \n\tInvPosting.Value AS transaction_value, \n\tInvPosting.Balance AS transaction_balance, \n\tMemo,\n\tUSERCOMM AS UserComment\nFROM\t\t \n\tInvPosting (NOLOCK) \n\t\n\tJOIN Site (NOLOCK) \n\t\tON Site.Site_Ref = InvPosting.Site_Ref\n\n\tLEFT JOIN RESIDENT (NOLOCK)\n\t\tON RESIDENT.RES_REF = INVPOSTING.RES_REF\nWHERE\t\n\tInvPosting.Site_Ref  = '@{variables('SITE_REF')}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_IP",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat(variables('Home_Ref'), ' - Full Ledger Comments - ', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Lookup Home",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT HOME_REF, HomeName, SITE_REF FROM ColdHarbourHomeID WHERE HOME_REF = '@{variables('Home_Ref')}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Set SITE_REF",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup Home",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "SITE_REF",
							"value": {
								"value": "@activity('Lookup Home').output.firstRow.SITE_REF",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Home_Ref": {
						"type": "String"
					},
					"SITE_REF": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "Yardi/CHIP"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_OnPrem_CH_IP')]",
				"[concat(variables('factoryId'), '/datasets/DS_Yardi_CSV')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_YardiStage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/X_PL_AEMS_Pre_Transfer_Clear')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Clears records from the AEMS.AEMS tables of the records to be transferred to us from Hydra",
				"activities": [
					{
						"name": "EXEC Proc",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[AEMS].[PreTransfer$ClearDownEnquiries]"
						},
						"linkedServiceName": {
							"referenceName": "AH2_TRANSFORM_DB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "AEMS"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-30T11:09:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/X_PL_YourHippo_Move_WebHook_files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Move User Files",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFileName": "webhook$user*.json",
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_YourHippo_WebHook_Route_Files",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_YourHippo_WebHook_Files",
								"type": "DatasetReference",
								"parameters": {
									"Folder": {
										"value": "@concat('WebhookFiles','/','User')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Move Result Files",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Move User Files",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFileName": "webhook$result*.json",
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_YourHippo_WebHook_Route_Files",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_YourHippo_WebHook_Files",
								"type": "DatasetReference",
								"parameters": {
									"Folder": {
										"value": "@concat('WebhookFiles','/','Result')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Move Verification Files",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Move Result Files",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFileName": "webhook$verification*.json",
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_YourHippo_WebHook_Route_Files",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_YourHippo_WebHook_Files",
								"type": "DatasetReference",
								"parameters": {
									"Folder": {
										"value": "@concat('WebhookFiles','/','Verification')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "YourHippo/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_YourHippo_WebHook_Route_Files')]",
				"[concat(variables('factoryId'), '/datasets/DS_YourHippo_WebHook_Files')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/X_PL_YourHippo_Process_WebHook_Result_files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Result File List",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Does WebhookFiles Result files exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_YourHippo_WebHook_Json_Result_File",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "Process File List",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Result File List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Result File List').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Process Result Files",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": false,
												"wildcardFileName": {
													"value": "@item().Name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "upsert",
											"upsertSettings": {
												"useTempDB": true,
												"keys": [
													"ResultID"
												]
											},
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['data']['result']['id']"
													},
													"sink": {
														"name": "ResultID",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['data']['result']['passed']"
													},
													"sink": {
														"name": "Passed",
														"type": "Boolean"
													}
												},
												{
													"source": {
														"path": "$['data']['result']['grade']"
													},
													"sink": {
														"name": "Grade",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['data']['result']['score']"
													},
													"sink": {
														"name": "Score",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "$['data']['result']['completed_at']"
													},
													"sink": {
														"name": "CompletedAt",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['data']['result']['expires_at']"
													},
													"sink": {
														"name": "ExpiresAt",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['data']['result']['has_expired']"
													},
													"sink": {
														"name": "HasExpired",
														"type": "Boolean"
													}
												},
												{
													"source": {
														"path": "$['data']['result']['course']['id']"
													},
													"sink": {
														"name": "CourseID",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['data']['result']['user']['id']"
													},
													"sink": {
														"name": "UserID",
														"type": "String"
													}
												}
											],
											"collectionReference": ""
										}
									},
									"inputs": [
										{
											"referenceName": "DS_YourHippo_WebHook_Json_Result_File",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_AH2_TRANSFORM_DB",
											"type": "DatasetReference",
											"parameters": {
												"Schema": "YourHippo",
												"Table": "StageResults"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Archive Files",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Process File List",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4
						},
						"inputs": [
							{
								"referenceName": "DS_YourHippo_WebHook_Files",
								"type": "DatasetReference",
								"parameters": {
									"Folder": {
										"value": "@concat('WebhookFiles', '/', 'Result')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_YourHippo_WebHook_Files",
								"type": "DatasetReference",
								"parameters": {
									"Folder": {
										"value": "@concat('WebhookFiles', '/', 'Archive', '/', 'Result')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Does WebhookFiles Result files exists",
						"description": "Checks there are files to process. If there are it will succeeds and carry on, if not it fails with custom failure message",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFileName": "webhook$result*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DS_YourHippo_WebHook_Json_Result_File",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "No Files failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "Does WebhookFiles Result files exists",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "No Result files to process",
							"errorCode": "404"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "YourHippo/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_YourHippo_WebHook_Json_Result_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_YourHippo_WebHook_Files')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/X_PL_YourHippo_Process_WebHook_User_Files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get User File List",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Does WebhookFiles User files exists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_YourHippo_WebHook_Json_User_File",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "Process File List",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get User File List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get User File List').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Process User Files",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": false,
												"wildcardFileName": {
													"value": "@item().Name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "upsert",
											"upsertSettings": {
												"useTempDB": true,
												"keys": [
													"UserID"
												]
											},
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['data']['user']['id']"
													},
													"sink": {
														"name": "UserID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['data']['user']['employee_number']"
													},
													"sink": {
														"name": "EmployeeNumber",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['data']['user']['created_at']"
													},
													"sink": {
														"name": "CreatedDateTime",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['data']['user']['start_date']"
													},
													"sink": {
														"name": "StartDate",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['data']['user']['name']"
													},
													"sink": {
														"name": "UserName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['data']['user']['email']"
													},
													"sink": {
														"name": "Email",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['data']['user']['gender']['description']"
													},
													"sink": {
														"name": "Gender",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['data']['user']['job_title']"
													},
													"sink": {
														"name": "JobTitle",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['data']['user']['role']['name']"
													},
													"sink": {
														"name": "UserRole",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['data']['user']['primaryEntity']['id']"
													},
													"sink": {
														"name": "PrimaryEntityID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['data']['user']['status']['name']"
													},
													"sink": {
														"name": "UserStatus",
														"type": "String"
													}
												}
											],
											"collectionReference": ""
										}
									},
									"inputs": [
										{
											"referenceName": "DS_YourHippo_WebHook_Json_User_File",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_AH2_TRANSFORM_DB",
											"type": "DatasetReference",
											"parameters": {
												"Schema": "YourHippo",
												"Table": "Users"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Archive Files",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Process File List",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_YourHippo_WebHook_Files",
								"type": "DatasetReference",
								"parameters": {
									"Folder": {
										"value": "@concat('WebhookFiles', '/', 'User')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_YourHippo_WebHook_Files",
								"type": "DatasetReference",
								"parameters": {
									"Folder": {
										"value": "@concat('WebhookFiles', '/', 'Archive', '/', 'User')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Does WebhookFiles User files exists",
						"description": "Checks there are files to process. If there are it will succeeds and carry on, if not it fails with custom failure message",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFileName": "webhook$user*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DS_YourHippo_WebHook_Json_User_File",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "No Files failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "Does WebhookFiles User files exists",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "No User files to process",
							"errorCode": "404"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "YourHippo/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_YourHippo_WebHook_Json_User_File')]",
				"[concat(variables('factoryId'), '/datasets/DS_YourHippo_WebHook_Files')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/X_PL_YourHippo_WebHook')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Runs the child pipelines that move and process files generated by the webhook/azure function",
				"activities": [
					{
						"name": "Move Files",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "X_PL_YourHippo_Move_WebHook_files",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Process Users",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Move Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "X_PL_YourHippo_Process_WebHook_User_Files",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Process Results",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Process Users",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "X_PL_YourHippo_Process_WebHook_Result_files",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "YourHippo"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/X_PL_YourHippo_Move_WebHook_files')]",
				"[concat(variables('factoryId'), '/pipelines/X_PL_YourHippo_Process_WebHook_User_Files')]",
				"[concat(variables('factoryId'), '/pipelines/X_PL_YourHippo_Process_WebHook_Result_files')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/xPL_MCM_Communities')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download Community list",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_MCM_Communities",
								"type": "DatasetReference",
								"parameters": {
									"APIKey": "x",
									"Query": "/OrganisationApi/Communities"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_MCM_Json",
								"type": "DatasetReference",
								"parameters": {
									"FileType": "x"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "MCM"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_MCM_Communities')]",
				"[concat(variables('factoryId'), '/datasets/DS_MCM_Json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/xPL_MCM_GetData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get MCM Data",
						"description": "Get the MCM data via Azure function",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "www.test.co.uk"
						}
					},
					{
						"name": "AZ Func Results",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get MCM Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "MCM_Json_Data",
							"value": {
								"value": "@activity('Get MCM Data').output.response",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Write to text file",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "VariableValue",
										"value": {
											"value": "@variables('MCM_Json_Data')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "VariableValue",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 1
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_MCM_Dummy_input",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_MCM_textFile",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Write to json file",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "AZ Func Results",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "VariableValue",
										"value": {
											"value": "@json(variables('MCM_Json_Data'))",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"filePattern": "arrayOfObjects"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "VariableValue",
											"type": "String"
										},
										"sink": {
											"path": "$['Column_1']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_MCM_Dummy_input",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_MCM_Json",
								"type": "DatasetReference",
								"parameters": {
									"FileType": "x"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"MCM_Json_Data": {
						"type": "String"
					}
				},
				"folder": {
					"name": "MCM"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_MCM_Dummy_input')]",
				"[concat(variables('factoryId'), '/datasets/DS_MCM_textFile')]",
				"[concat(variables('factoryId'), '/datasets/DS_MCM_Json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/xPL_MCM_Get_Generic')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Get data from the supplied endpoint (query/report) for the supplied community ID",
				"activities": [
					{
						"name": "Download Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Filename",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_MCM_Get_Generic",
								"type": "DatasetReference",
								"parameters": {
									"APIKey": "x",
									"Query": {
										"value": "@variables('Query')",
										"type": "Expression"
									},
									"CommunityID": {
										"value": "@variables('CommunityID')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_MCM_Json",
								"type": "DatasetReference",
								"parameters": {
									"FileType": "x"
								}
							}
						]
					},
					{
						"name": "Set Query",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set CommunityID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Query",
							"value": "/ReportsAndChartsApi/Get/CareNotesReport"
						}
					},
					{
						"name": "Set CommunityID",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "CommunityID",
							"value": "b1961c38-5b2f-4c4f-b60c-fabc3cdf7498"
						}
					},
					{
						"name": "Set Filename",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Query",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Filename",
							"value": {
								"value": "@last(split(variables('Query'), '/'))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Query": {
						"type": "String"
					},
					"CommunityID": {
						"type": "String"
					},
					"Filename": {
						"type": "String"
					}
				},
				"folder": {
					"name": "MCM"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_MCM_Get_Generic')]",
				"[concat(variables('factoryId'), '/datasets/DS_MCM_Json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AveryblobFileShare')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AveryblobFileShare",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "AveryPrivateNetwork/AveryblobStorageAccount"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureFileStorageLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AveryblobFileShare')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Averyblob_Fusion')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Files stored in averyblob fusion container. Connected through the Avery virtual network using the private endpoing",
				"linkedServiceName": {
					"referenceName": "AveryblobStorageAccount",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "AveryPrivateNetwork/AveryblobStorageAccount"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "fusion"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AveryblobStorageAccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Averyblob_Fusion_Archive')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Files stored in averyblob fusion container. Connected through the Avery virtual network using the private endpoing",
				"linkedServiceName": {
					"referenceName": "AveryblobStorageAccount",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "AveryPrivateNetwork/AveryblobStorageAccount"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@concat('archive/', formatDateTime(utcNow(), 'yyyy'), '/', formatDateTime(utcNow(), 'MM'), '/', formatDateTime(utcNow(), 'dd'), '/')\n",
							"type": "Expression"
						},
						"container": "fusion"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AveryblobStorageAccount')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AH1_Avery')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AH1_Avery",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Schema": {
						"type": "string"
					},
					"Table": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Generic"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().Table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH1_Avery')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AH1_Avery_AEMS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AH1_Avery",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Avery"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AEMS_ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "aems_version",
						"type": "int",
						"precision": 10
					},
					{
						"name": "homeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "uploadedBy",
						"type": "varchar"
					},
					{
						"name": "managerEmailed",
						"type": "varchar"
					},
					{
						"name": "enquiryStatus",
						"type": "varchar"
					},
					{
						"name": "enquiryID",
						"type": "varchar"
					},
					{
						"name": "initialEnquiry",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "enquirerSalutation",
						"type": "varchar"
					},
					{
						"name": "enquirerFirstName",
						"type": "varchar"
					},
					{
						"name": "enquirerLastName",
						"type": "varchar"
					},
					{
						"name": "enquirerSalutationTwo",
						"type": "varchar"
					},
					{
						"name": "enquirerLastNameTwo",
						"type": "varchar"
					},
					{
						"name": "enquirerFirstNameTwo",
						"type": "varchar"
					},
					{
						"name": "enquiryDate",
						"type": "varchar"
					},
					{
						"name": "enquirerRelationshipToResident",
						"type": "varchar"
					},
					{
						"name": "en_areacode",
						"type": "varchar"
					},
					{
						"name": "enquirerTelephone",
						"type": "varchar"
					},
					{
						"name": "enquiry_mobile",
						"type": "varchar"
					},
					{
						"name": "enquirerEmail",
						"type": "varchar"
					},
					{
						"name": "enquirerAddress",
						"type": "text"
					},
					{
						"name": "enquirerAddressOne",
						"type": "varchar"
					},
					{
						"name": "enquirerAddressTwo",
						"type": "varchar"
					},
					{
						"name": "enquirerAddressThree",
						"type": "varchar"
					},
					{
						"name": "enquiry_postcode",
						"type": "varchar"
					},
					{
						"name": "enquiry_postcode_two",
						"type": "varchar"
					},
					{
						"name": "residentSalutation",
						"type": "varchar"
					},
					{
						"name": "residentFirstName",
						"type": "varchar"
					},
					{
						"name": "residentLastName",
						"type": "varchar"
					},
					{
						"name": "residentDOB",
						"type": "varchar"
					},
					{
						"name": "residentSalutationTwo",
						"type": "varchar"
					},
					{
						"name": "residentFirstNameTwo",
						"type": "varchar"
					},
					{
						"name": "residentLastNameTwo",
						"type": "varchar"
					},
					{
						"name": "residentDOBTwo",
						"type": "varchar"
					},
					{
						"name": "residentNOK",
						"type": "varchar"
					},
					{
						"name": "residentAddress",
						"type": "text"
					},
					{
						"name": "residentAddressOne",
						"type": "varchar"
					},
					{
						"name": "residentAddressTwo",
						"type": "varchar"
					},
					{
						"name": "residentAddressThree",
						"type": "varchar"
					},
					{
						"name": "residentPostcode",
						"type": "varchar"
					},
					{
						"name": "residentTelephone",
						"type": "varchar"
					},
					{
						"name": "residentCareCategory",
						"type": "varchar"
					},
					{
						"name": "residentFundingCategory",
						"type": "varchar"
					},
					{
						"name": "residentCareCategoryTwo",
						"type": "varchar"
					},
					{
						"name": "funding_total",
						"type": "varchar"
					},
					{
						"name": "residentFunding",
						"type": "varchar"
					},
					{
						"name": "residentFundingTwo",
						"type": "varchar"
					},
					{
						"name": "enquiryDetails",
						"type": "text"
					},
					{
						"name": "enquiryType",
						"type": "varchar"
					},
					{
						"name": "responseTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "responseCurrentStatus",
						"type": "varchar"
					},
					{
						"name": "responseNeeded",
						"type": "varchar"
					},
					{
						"name": "responseAmountTried",
						"type": "int",
						"precision": 10
					},
					{
						"name": "followUpDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "followUpReason",
						"type": "varchar"
					},
					{
						"name": "uploadToCH",
						"type": "int",
						"precision": 10
					},
					{
						"name": "admissionDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "enquiryClosed",
						"type": "int",
						"precision": 10
					},
					{
						"name": "managerContacted",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "homeVisit",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "assessmentBooked",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "assesmentComplete",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "admission",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "homeVisitBooked",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "admissionBooked",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "video_booked",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "video_complete",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "homeVisitRequested",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "assesmentRequested",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "newEnquiry",
						"type": "int",
						"precision": 10
					},
					{
						"name": "cameFrom",
						"type": "varchar"
					},
					{
						"name": "enquirer_address",
						"type": "text"
					},
					{
						"name": "enquirer_postcode",
						"type": "varchar"
					},
					{
						"name": "lng",
						"type": "varchar"
					},
					{
						"name": "lat",
						"type": "varchar"
					},
					{
						"name": "enquirer_area",
						"type": "varchar"
					},
					{
						"name": "enquirer_county",
						"type": "varchar"
					},
					{
						"name": "nok_name",
						"type": "varchar"
					},
					{
						"name": "nok_surname",
						"type": "varchar"
					},
					{
						"name": "nok_county",
						"type": "varchar"
					},
					{
						"name": "nok_relation",
						"type": "varchar"
					},
					{
						"name": "nok_telephone",
						"type": "varchar"
					},
					{
						"name": "nok_mobile",
						"type": "varchar"
					},
					{
						"name": "nok_address",
						"type": "varchar"
					},
					{
						"name": "resident_county",
						"type": "varchar"
					},
					{
						"name": "nok_Salutation",
						"type": "varchar"
					},
					{
						"name": "newsletter_receive",
						"type": "int",
						"precision": 10
					},
					{
						"name": "newsletter_email",
						"type": "varchar"
					},
					{
						"name": "enquiry_urgent",
						"type": "int",
						"precision": 10
					},
					{
						"name": "optOut",
						"type": "int",
						"precision": 10
					},
					{
						"name": "type_news",
						"type": "varchar"
					},
					{
						"name": "type_mag",
						"type": "varchar"
					},
					{
						"name": "type_other",
						"type": "varchar"
					},
					{
						"name": "gp_name",
						"type": "varchar"
					},
					{
						"name": "gp_address",
						"type": "text"
					},
					{
						"name": "gp_telephone",
						"type": "varchar"
					},
					{
						"name": "gp_requested",
						"type": "varchar"
					},
					{
						"name": "gp_received",
						"type": "varchar"
					},
					{
						"name": "website",
						"type": "int",
						"precision": 10
					},
					{
						"name": "brochure",
						"type": "int",
						"precision": 10
					},
					{
						"name": "brochure_requestID",
						"type": "varchar"
					},
					{
						"name": "entryMethod",
						"type": "varchar"
					},
					{
						"name": "current_action_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "column_hash",
						"type": "text"
					},
					{
						"name": "receiveMarketing",
						"type": "int",
						"precision": 10
					},
					{
						"name": "willTopUp",
						"type": "text"
					},
					{
						"name": "enquiry_entered_from",
						"type": "varchar"
					},
					{
						"name": "enquiry_closed_reason",
						"type": "varchar"
					},
					{
						"name": "enquiry_deleted",
						"type": "int",
						"precision": 10
					},
					{
						"name": "enquiry_weight",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "AEMS_Enquiries"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH1_Avery')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AH1_Avery_Homes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AH1_Avery",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Avery"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "Homename",
						"type": "nchar"
					},
					{
						"name": "Intranet",
						"type": "decimal",
						"precision": 4,
						"scale": 0
					},
					{
						"name": "IntranetNew",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "Exch_Code",
						"type": "nchar"
					},
					{
						"name": "CH_Code",
						"type": "nchar"
					},
					{
						"name": "email",
						"type": "nchar"
					},
					{
						"name": "company",
						"type": "nchar"
					},
					{
						"name": "homeadd1",
						"type": "nchar"
					},
					{
						"name": "homeadd2",
						"type": "nchar"
					},
					{
						"name": "homeadd3",
						"type": "nchar"
					},
					{
						"name": "homeadd4",
						"type": "nchar"
					},
					{
						"name": "homeadd5",
						"type": "nchar"
					},
					{
						"name": "hometell",
						"type": "nchar"
					},
					{
						"name": "code",
						"type": "nchar"
					},
					{
						"name": "Beds",
						"type": "decimal",
						"precision": 4,
						"scale": 0
					},
					{
						"name": "Category",
						"type": "nchar"
					},
					{
						"name": "hometype",
						"type": "nchar"
					},
					{
						"name": "Newbuild",
						"type": "nchar"
					},
					{
						"name": "Group",
						"type": "nchar"
					},
					{
						"name": "Subgroup",
						"type": "nchar"
					},
					{
						"name": "Division",
						"type": "nchar"
					},
					{
						"name": "Divisional",
						"type": "nchar"
					},
					{
						"name": "Regional",
						"type": "nchar"
					},
					{
						"name": "Regional_Support",
						"type": "nchar"
					},
					{
						"name": "Manager",
						"type": "nchar"
					},
					{
						"name": "CSM",
						"type": "nchar"
					},
					{
						"name": "CSM2",
						"type": "nchar"
					},
					{
						"name": "Divisional_Email",
						"type": "nchar"
					},
					{
						"name": "regional_email",
						"type": "nchar"
					},
					{
						"name": "regional_support_email",
						"type": "nchar"
					},
					{
						"name": "Manager_Email",
						"type": "nchar"
					},
					{
						"name": "Deputy_Email",
						"type": "nchar"
					},
					{
						"name": "CSM_Email",
						"type": "nchar"
					},
					{
						"name": "CSM_Email2",
						"type": "nchar"
					},
					{
						"name": "agency_email",
						"type": "nchar"
					},
					{
						"name": "agencu_email2",
						"type": "nchar"
					},
					{
						"name": "Regional_Cover_email",
						"type": "nchar"
					},
					{
						"name": "admin_email",
						"type": "nchar"
					},
					{
						"name": "admin_assistant_email",
						"type": "nchar"
					},
					{
						"name": "reg_admin_email",
						"type": "nchar"
					},
					{
						"name": "reg_admin_deputy_email",
						"type": "nchar"
					},
					{
						"name": "Housekeeper_Email",
						"type": "nchar"
					},
					{
						"name": "Chef_Email",
						"type": "nchar"
					},
					{
						"name": "home_maint_email",
						"type": "nchar"
					},
					{
						"name": "sales_ledger_email",
						"type": "nchar"
					},
					{
						"name": "reg_estates_email",
						"type": "nchar"
					},
					{
						"name": "Food_Safety",
						"type": "decimal",
						"precision": 1,
						"scale": 0
					},
					{
						"name": "Food_Safety_date",
						"type": "date"
					},
					{
						"name": "Home_Manager_rating",
						"type": "nchar"
					},
					{
						"name": "FTE_hours",
						"type": "decimal",
						"precision": 5,
						"scale": 2
					},
					{
						"name": "Local_Page_URL",
						"type": "nvarchar"
					},
					{
						"name": "Food_budget_PPPD",
						"type": "decimal",
						"precision": 5,
						"scale": 2
					},
					{
						"name": "ChecksType",
						"type": "nvarchar"
					},
					{
						"name": "Procurement_Name",
						"type": "nchar"
					},
					{
						"name": "agency_select",
						"type": "nchar"
					},
					{
						"name": "agency_select2",
						"type": "nchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Homes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH1_Avery')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AH2_Agency')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AH2_Agency",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Schema": {
						"type": "string"
					},
					"Table": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Agency"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().Table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH2_Agency')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AH2_Avery')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "The Avery DB on AH2",
				"linkedServiceName": {
					"referenceName": "AH2_Avery",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Schema": {
						"type": "string"
					},
					"Table": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Generic"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().Table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH2_Avery')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AH2_Avery_Homes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AH2_Avery",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Avery"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "Homename",
						"type": "nchar"
					},
					{
						"name": "Intranet",
						"type": "decimal",
						"precision": 4,
						"scale": 0
					},
					{
						"name": "IntranetNew",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "Exch_Code",
						"type": "nchar"
					},
					{
						"name": "CH_Code",
						"type": "nchar"
					},
					{
						"name": "email",
						"type": "nchar"
					},
					{
						"name": "company",
						"type": "nchar"
					},
					{
						"name": "homeadd1",
						"type": "nchar"
					},
					{
						"name": "homeadd2",
						"type": "nchar"
					},
					{
						"name": "homeadd3",
						"type": "nchar"
					},
					{
						"name": "homeadd4",
						"type": "nchar"
					},
					{
						"name": "homeadd5",
						"type": "nchar"
					},
					{
						"name": "hometell",
						"type": "nchar"
					},
					{
						"name": "code",
						"type": "nchar"
					},
					{
						"name": "Beds",
						"type": "decimal",
						"precision": 4,
						"scale": 0
					},
					{
						"name": "Category",
						"type": "nchar"
					},
					{
						"name": "hometype",
						"type": "nchar"
					},
					{
						"name": "Newbuild",
						"type": "nchar"
					},
					{
						"name": "Group",
						"type": "nchar"
					},
					{
						"name": "Subgroup",
						"type": "nchar"
					},
					{
						"name": "Division",
						"type": "nchar"
					},
					{
						"name": "Divisional",
						"type": "nchar"
					},
					{
						"name": "Regional",
						"type": "nchar"
					},
					{
						"name": "Regional_Support",
						"type": "nchar"
					},
					{
						"name": "Manager",
						"type": "nchar"
					},
					{
						"name": "CSM",
						"type": "nchar"
					},
					{
						"name": "CSM2",
						"type": "nchar"
					},
					{
						"name": "Divisional_Email",
						"type": "nchar"
					},
					{
						"name": "regional_email",
						"type": "nchar"
					},
					{
						"name": "regional_support_email",
						"type": "nchar"
					},
					{
						"name": "Manager_Email",
						"type": "nchar"
					},
					{
						"name": "Deputy_Email",
						"type": "nchar"
					},
					{
						"name": "CSM_Email",
						"type": "nchar"
					},
					{
						"name": "CSM_Email2",
						"type": "nchar"
					},
					{
						"name": "agency_email",
						"type": "nchar"
					},
					{
						"name": "agencu_email2",
						"type": "nchar"
					},
					{
						"name": "Regional_Cover_email",
						"type": "nchar"
					},
					{
						"name": "admin_email",
						"type": "nchar"
					},
					{
						"name": "admin_assistant_email",
						"type": "nchar"
					},
					{
						"name": "reg_admin_email",
						"type": "nchar"
					},
					{
						"name": "reg_admin_deputy_email",
						"type": "nchar"
					},
					{
						"name": "Housekeeper_Email",
						"type": "nchar"
					},
					{
						"name": "Chef_Email",
						"type": "nchar"
					},
					{
						"name": "home_maint_email",
						"type": "nchar"
					},
					{
						"name": "sales_ledger_email",
						"type": "nchar"
					},
					{
						"name": "reg_estates_email",
						"type": "nchar"
					},
					{
						"name": "Food_Safety",
						"type": "decimal",
						"precision": 1,
						"scale": 0
					},
					{
						"name": "Food_Safety_date",
						"type": "date"
					},
					{
						"name": "Home_Manager_rating",
						"type": "nchar"
					},
					{
						"name": "FTE_hours",
						"type": "decimal",
						"precision": 5,
						"scale": 2
					},
					{
						"name": "Local_Page_URL",
						"type": "nvarchar"
					},
					{
						"name": "Food_budget_PPPD",
						"type": "decimal",
						"precision": 5,
						"scale": 2
					},
					{
						"name": "ChecksType",
						"type": "nvarchar"
					},
					{
						"name": "Procurement_Name",
						"type": "nchar"
					},
					{
						"name": "agency_select",
						"type": "nchar"
					},
					{
						"name": "agency_select2",
						"type": "nchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Homes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH2_Avery')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AH2_Avery_Homes_new')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Avery.Homes table replacing the dbo.Homes table",
				"linkedServiceName": {
					"referenceName": "AH2_Avery",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Avery"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "Homename",
						"type": "nchar"
					},
					{
						"name": "Intranet",
						"type": "decimal",
						"precision": 4,
						"scale": 0
					},
					{
						"name": "IntranetNew",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "Exch_Code",
						"type": "nchar"
					},
					{
						"name": "CH_Code",
						"type": "nchar"
					},
					{
						"name": "email",
						"type": "nchar"
					},
					{
						"name": "company",
						"type": "nchar"
					},
					{
						"name": "homeadd1",
						"type": "nchar"
					},
					{
						"name": "homeadd2",
						"type": "nchar"
					},
					{
						"name": "homeadd3",
						"type": "nchar"
					},
					{
						"name": "homeadd4",
						"type": "nchar"
					},
					{
						"name": "homeadd5",
						"type": "nchar"
					},
					{
						"name": "hometell",
						"type": "nchar"
					},
					{
						"name": "code",
						"type": "nchar"
					},
					{
						"name": "Beds",
						"type": "decimal",
						"precision": 4,
						"scale": 0
					},
					{
						"name": "Category",
						"type": "nchar"
					},
					{
						"name": "hometype",
						"type": "nchar"
					},
					{
						"name": "Newbuild",
						"type": "nchar"
					},
					{
						"name": "Group",
						"type": "nchar"
					},
					{
						"name": "Subgroup",
						"type": "nchar"
					},
					{
						"name": "Division",
						"type": "nchar"
					},
					{
						"name": "Divisional",
						"type": "nchar"
					},
					{
						"name": "Regional",
						"type": "nchar"
					},
					{
						"name": "Regional_Support",
						"type": "nchar"
					},
					{
						"name": "Manager",
						"type": "nchar"
					},
					{
						"name": "CSM",
						"type": "nchar"
					},
					{
						"name": "CSM2",
						"type": "nchar"
					},
					{
						"name": "Divisional_Email",
						"type": "nchar"
					},
					{
						"name": "regional_email",
						"type": "nchar"
					},
					{
						"name": "regional_support_email",
						"type": "nchar"
					},
					{
						"name": "Manager_Email",
						"type": "nchar"
					},
					{
						"name": "Deputy_Email",
						"type": "nchar"
					},
					{
						"name": "CSM_Email",
						"type": "nchar"
					},
					{
						"name": "CSM_Email2",
						"type": "nchar"
					},
					{
						"name": "agency_email",
						"type": "nchar"
					},
					{
						"name": "agencu_email2",
						"type": "nchar"
					},
					{
						"name": "Regional_Cover_email",
						"type": "nchar"
					},
					{
						"name": "admin_email",
						"type": "nchar"
					},
					{
						"name": "admin_assistant_email",
						"type": "nchar"
					},
					{
						"name": "reg_admin_email",
						"type": "nchar"
					},
					{
						"name": "reg_admin_deputy_email",
						"type": "nchar"
					},
					{
						"name": "Housekeeper_Email",
						"type": "nchar"
					},
					{
						"name": "Chef_Email",
						"type": "nchar"
					},
					{
						"name": "home_maint_email",
						"type": "nchar"
					},
					{
						"name": "sales_ledger_email",
						"type": "nchar"
					},
					{
						"name": "reg_estates_email",
						"type": "nchar"
					},
					{
						"name": "Food_Safety",
						"type": "decimal",
						"precision": 1,
						"scale": 0
					},
					{
						"name": "Food_Safety_date",
						"type": "date"
					},
					{
						"name": "Home_Manager_rating",
						"type": "nchar"
					},
					{
						"name": "FTE_hours",
						"type": "decimal",
						"precision": 5,
						"scale": 2
					},
					{
						"name": "Local_Page_URL",
						"type": "nvarchar"
					},
					{
						"name": "Food_budget_PPPD",
						"type": "decimal",
						"precision": 5,
						"scale": 2
					},
					{
						"name": "ChecksType",
						"type": "nvarchar"
					},
					{
						"name": "Procurement_Name",
						"type": "nchar"
					},
					{
						"name": "agency_select",
						"type": "nchar"
					},
					{
						"name": "agency_select2",
						"type": "nchar"
					}
				],
				"typeProperties": {
					"schema": "Avery",
					"table": "Homes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH2_Avery')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AH2_Capex')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AH2_Capex",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Schema": {
						"type": "string"
					},
					"Table": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Capex"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().Table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH2_Capex')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AH2_Polestar')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AH2_Polestar",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Schema": {
						"type": "string"
					},
					"Table": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Generic"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().Table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH2_Polestar')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AH2_TRANSFORM_DB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "No fixed table. Enter schema and table",
				"linkedServiceName": {
					"referenceName": "AH2_TRANSFORM_DB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Schema": {
						"type": "string"
					},
					"Table": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Generic"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().Table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AH2_TRANSFORM_DB_Avery_HomeDetails')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AH2_TRANSFORM_DB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Avery"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "HomesTableID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "IntranetID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ExchCode",
						"type": "varchar"
					},
					{
						"name": "CHCode",
						"type": "varchar"
					},
					{
						"name": "CBCode",
						"type": "varchar"
					},
					{
						"name": "Homename",
						"type": "varchar"
					},
					{
						"name": "HomeManager",
						"type": "varchar"
					},
					{
						"name": "RegionalDirector",
						"type": "varchar"
					},
					{
						"name": "OpsDirector",
						"type": "varchar"
					},
					{
						"name": "Group",
						"type": "varchar"
					},
					{
						"name": "SubGroup",
						"type": "varchar"
					},
					{
						"name": "Division",
						"type": "varchar"
					},
					{
						"name": "DivisionAltName",
						"type": "varchar"
					},
					{
						"name": "RowID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "Avery",
					"table": "HomeDetails"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AH2_TRANSFORM_DB_CareBlox_stg')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AH2_TRANSFORM_DB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Careblox/Azure SQL"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "CareBlox",
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AH2_TRANSFORM_DB_Careblox_AbsenceCodes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AH2_TRANSFORM_DB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Careblox/Azure SQL"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AbsenceID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AbsenceCode",
						"type": "varchar"
					},
					{
						"name": "AbsenceCode2",
						"type": "varchar"
					},
					{
						"name": "AbsenceGroupDescription",
						"type": "varchar"
					},
					{
						"name": "AbsenceGroupCode",
						"type": "varchar"
					},
					{
						"name": "AbsenceDescription",
						"type": "varchar"
					},
					{
						"name": "AbsenceListOrder",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UseBradfordFactor",
						"type": "bit"
					},
					{
						"name": "PayTypeNameStub",
						"type": "varchar"
					},
					{
						"name": "ExportToPayroll",
						"type": "bit"
					},
					{
						"name": "Active",
						"type": "bit"
					},
					{
						"name": "PayTypeNameStubSalary",
						"type": "varchar"
					},
					{
						"name": "SourceFileName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "CareBlox",
					"table": "tblAbsenceCodes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AH2_TRANSFORM_DB_Careblox_Calender')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AH2_TRANSFORM_DB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Careblox/Azure SQL"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "UniqueID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmployeeID",
						"type": "nvarchar"
					},
					{
						"name": "StartDate",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "EmployeeName",
						"type": "nvarchar"
					},
					{
						"name": "EndDate",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "Status",
						"type": "nvarchar"
					},
					{
						"name": "LocationID",
						"type": "nvarchar"
					},
					{
						"name": "StartDetails",
						"type": "varchar"
					},
					{
						"name": "EndDetails",
						"type": "varchar"
					},
					{
						"name": "EnteredOn",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "UpdatedOn",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "EnteredBy",
						"type": "nvarchar"
					},
					{
						"name": "UpdatedBy",
						"type": "nvarchar"
					},
					{
						"name": "Export",
						"type": "bit"
					},
					{
						"name": "ShowAlert",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Department",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RosterID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "Role",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DaysTaken",
						"type": "float",
						"precision": 15
					},
					{
						"name": "EnteredByID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BatchId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AbsenceCode",
						"type": "varchar"
					},
					{
						"name": "AbsenceCategory",
						"type": "varchar"
					},
					{
						"name": "BradfordFactorInclude",
						"type": "bit"
					},
					{
						"name": "Reviewed",
						"type": "bit"
					},
					{
						"name": "UpdatedByID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UpdateType",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "ExpectedEndDate",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "ActivityID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "ActivityLocationID",
						"type": "varchar"
					},
					{
						"name": "SentToUnit",
						"type": "bit"
					},
					{
						"name": "SourceFileName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "CareBlox",
					"table": "tblCalender"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AH2_TRANSFORM_DB_Careblox_EmpJobs')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AH2_TRANSFORM_DB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Careblox/Azure SQL"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "JobAutoID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmployeeID",
						"type": "varchar"
					},
					{
						"name": "ContractedHours",
						"type": "real",
						"precision": 7
					},
					{
						"name": "Department",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Role",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "JobNo",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "StartDate",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "Holidays",
						"type": "float",
						"precision": 15
					},
					{
						"name": "HolidayFull",
						"type": "float",
						"precision": 15
					},
					{
						"name": "SentToUnit",
						"type": "bit"
					},
					{
						"name": "BreakRule",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "ContractID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Deleted",
						"type": "bit"
					},
					{
						"name": "LastUpdate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "WorkingArrangements",
						"type": "varchar"
					},
					{
						"name": "VHEnabled",
						"type": "bit"
					},
					{
						"name": "VHBalance",
						"type": "real",
						"precision": 7
					},
					{
						"name": "VHBalanceDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "SicknessThreshold",
						"type": "real",
						"precision": 7
					},
					{
						"name": "SourceFileName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "CareBlox",
					"table": "tblEmpJobs"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AH2_TRANSFORM_DB_Careblox_Employees')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AH2_TRANSFORM_DB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Careblox/Azure SQL"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EmployeeAutoID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmployeeID",
						"type": "varchar"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "Forename",
						"type": "nvarchar"
					},
					{
						"name": "Middlename",
						"type": "nvarchar"
					},
					{
						"name": "Surname",
						"type": "nvarchar"
					},
					{
						"name": "LocationID",
						"type": "varchar"
					},
					{
						"name": "AddressLine1",
						"type": "nvarchar"
					},
					{
						"name": "AddressLine2",
						"type": "nvarchar"
					},
					{
						"name": "AddressLine3",
						"type": "nvarchar"
					},
					{
						"name": "AddressLine4",
						"type": "nvarchar"
					},
					{
						"name": "AddressLine5",
						"type": "nvarchar"
					},
					{
						"name": "PostCode",
						"type": "varchar"
					},
					{
						"name": "Country",
						"type": "nvarchar"
					},
					{
						"name": "Telephone",
						"type": "nvarchar"
					},
					{
						"name": "Mobile",
						"type": "nvarchar"
					},
					{
						"name": "Email",
						"type": "nvarchar"
					},
					{
						"name": "BirthDate",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "CountryOfBirth",
						"type": "nvarchar"
					},
					{
						"name": "YearOfEntry",
						"type": "varchar"
					},
					{
						"name": "DateStarted",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "LeavingDate",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "LeavingEnteredBy",
						"type": "nvarchar"
					},
					{
						"name": "LeavingEnteredOn",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "Gender",
						"type": "nvarchar"
					},
					{
						"name": "NINumber",
						"type": "nvarchar"
					},
					{
						"name": "EthnicOrigin",
						"type": "varchar"
					},
					{
						"name": "Religion",
						"type": "varchar"
					},
					{
						"name": "Disability",
						"type": "varchar"
					},
					{
						"name": "Nationality",
						"type": "varchar"
					},
					{
						"name": "Dependants",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "AccountNumber",
						"type": "nvarchar"
					},
					{
						"name": "AccountName",
						"type": "nvarchar"
					},
					{
						"name": "SortCode",
						"type": "nvarchar"
					},
					{
						"name": "BankName",
						"type": "nvarchar"
					},
					{
						"name": "BankBranch",
						"type": "nvarchar"
					},
					{
						"name": "BuildingSocRef",
						"type": "nvarchar"
					},
					{
						"name": "MaritalStatus",
						"type": "nvarchar"
					},
					{
						"name": "PayMethod",
						"type": "nvarchar"
					},
					{
						"name": "UploadAsNewStarter",
						"type": "bit"
					},
					{
						"name": "NeedsUploading",
						"type": "bit"
					},
					{
						"name": "HasLeft",
						"type": "bit"
					},
					{
						"name": "PackageID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ImportPackageID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ContractedHours",
						"type": "real",
						"precision": 7
					},
					{
						"name": "DefaultPayRate",
						"type": "real",
						"precision": 7
					},
					{
						"name": "LeavingReason",
						"type": "varchar"
					},
					{
						"name": "LeavingDestination",
						"type": "varchar"
					},
					{
						"name": "IncludeInNextPay",
						"type": "bit"
					},
					{
						"name": "OnSick",
						"type": "char"
					},
					{
						"name": "Export",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SageID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "TATagID",
						"type": "varchar"
					},
					{
						"name": "BankStaff",
						"type": "bit"
					},
					{
						"name": "PostCodeSearch",
						"type": "varchar"
					},
					{
						"name": "WorkingTimeWaiver",
						"type": "bit"
					},
					{
						"name": "SentToUnit",
						"type": "bit"
					},
					{
						"name": "BatchID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmployeeType",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "HolidayMonthStart",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CreatedByID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CreatedByName",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ShortDisplayName",
						"type": "varchar"
					},
					{
						"name": "DisplayColour",
						"type": "varchar"
					},
					{
						"name": "ApproverName",
						"type": "varchar"
					},
					{
						"name": "ApproverID",
						"type": "varchar"
					},
					{
						"name": "IsApprover",
						"type": "bit"
					},
					{
						"name": "TAApprover",
						"type": "varchar"
					},
					{
						"name": "RosterUnitList",
						"type": "varchar"
					},
					{
						"name": "PrimaryRosterUnit",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PortalEnabled",
						"type": "bit"
					},
					{
						"name": "PortalPassword",
						"type": "varchar"
					},
					{
						"name": "NoticePeriod",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "DataUpgradedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DataUpgradedBy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SourceFileName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "CareBlox",
					"table": "tblEmployees"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AH2_TRANSFORM_DB_Careblox_Payroll')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AH2_TRANSFORM_DB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Careblox/Azure SQL"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PayrollID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmployeeID",
						"type": "varchar"
					},
					{
						"name": "EmployeeName",
						"type": "nvarchar"
					},
					{
						"name": "LocationID",
						"type": "varchar"
					},
					{
						"name": "RoleID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Role",
						"type": "nvarchar"
					},
					{
						"name": "TypeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Type",
						"type": "nvarchar"
					},
					{
						"name": "Rate",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Units",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Comment",
						"type": "nvarchar"
					},
					{
						"name": "EnteredDate",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "EnteredBy",
						"type": "nvarchar"
					},
					{
						"name": "EnteredByName",
						"type": "nvarchar"
					},
					{
						"name": "PeriodNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "HasVariance",
						"type": "bit"
					},
					{
						"name": "MonthSplit",
						"type": "nvarchar"
					},
					{
						"name": "Comitted",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ApprovedDate",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "ApprovedBy",
						"type": "nvarchar"
					},
					{
						"name": "ApprovedByName",
						"type": "nvarchar"
					},
					{
						"name": "ImportedFromTA",
						"type": "bit"
					},
					{
						"name": "WorkedLocationID",
						"type": "varchar"
					},
					{
						"name": "BatchID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ItemDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "SourceFileName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "CareBlox",
					"table": "tblPayrollData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AH2_TRANSFORM_DB_Careblox_Periods')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AH2_TRANSFORM_DB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Careblox/Azure SQL"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PeriodID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CurrentPeriodNum",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DateCreated",
						"type": "smalldatetime",
						"precision": 16,
						"scale": 0
					},
					{
						"name": "LocationID",
						"type": "varchar"
					},
					{
						"name": "DateRange",
						"type": "varchar"
					},
					{
						"name": "GeneratedPayroll",
						"type": "bit"
					},
					{
						"name": "FromDate",
						"type": "date"
					},
					{
						"name": "ToDate",
						"type": "date"
					},
					{
						"name": "SourceFileName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "CareBlox",
					"table": "tblPeriods"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AH2_TRANSFORM_DB_Careblox_Rates')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AH2_TRANSFORM_DB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Careblox/Azure SQL"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "RatesAutoID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmployeeID",
						"type": "varchar"
					},
					{
						"name": "RoleID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TypeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Rate",
						"type": "smallmoney",
						"precision": 10,
						"scale": 4
					},
					{
						"name": "IsDefault",
						"type": "bit"
					},
					{
						"name": "SentToUnit",
						"type": "bit"
					},
					{
						"name": "Deleted",
						"type": "bit"
					},
					{
						"name": "LastUpdate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "SourceFileName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "CareBlox",
					"table": "tblRates"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AH2_TRANSFORM_DB_Careblox_Roles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AH2_TRANSFORM_DB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Careblox/Azure SQL"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "RoleID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RoleName",
						"type": "nvarchar"
					},
					{
						"name": "Department",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SentToUnit",
						"type": "bit"
					},
					{
						"name": "Code",
						"type": "nvarchar"
					},
					{
						"name": "AvailableToGroup",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "CareBlox",
					"table": "tblRoles"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AH2_TRANSFORM_DB_Careblox_Shifts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AH2_TRANSFORM_DB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Careblox/Azure SQL"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ShiftID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "HomeID",
						"type": "varchar"
					},
					{
						"name": "EmployeeID",
						"type": "varchar"
					},
					{
						"name": "RoleID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ShiftStart",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ShiftEnd",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "PayRate",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Department",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "SentToUnit",
						"type": "bit"
					},
					{
						"name": "Deleted",
						"type": "bit"
					},
					{
						"name": "RosterUnitID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CreatedBy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DeletedBy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DeletedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ITG_SourceID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "ITG_SourceName",
						"type": "varchar"
					},
					{
						"name": "ITG_Status",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "RosterType",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "CareBlox",
					"table": "tblShifts"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AH2_TRANSFORM_DB_Careblox_TAData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AH2_TRANSFORM_DB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Careblox/Azure SQL"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "LocalID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TAID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "EmployeeID",
						"type": "varchar"
					},
					{
						"name": "HomeID",
						"type": "varchar"
					},
					{
						"name": "RoleID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ShiftID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TAStatus",
						"type": "varchar"
					},
					{
						"name": "TADateIn",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ActualDateIn",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ConfirmedDateIn",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "EarlyInFlag",
						"type": "bit"
					},
					{
						"name": "EarlyInComment",
						"type": "varchar"
					},
					{
						"name": "LateInFlag",
						"type": "bit"
					},
					{
						"name": "LateInComment",
						"type": "varchar"
					},
					{
						"name": "TADateOut",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ActualDateOut",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ConfirmedDateOut",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "EarlyOutFlag",
						"type": "bit"
					},
					{
						"name": "EarlyOutComment",
						"type": "varchar"
					},
					{
						"name": "LateOutFlag",
						"type": "bit"
					},
					{
						"name": "LateOutComment",
						"type": "varchar"
					},
					{
						"name": "ManagerApprovalRequiredIn",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "ManagerApprovalRequiredOut",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "RecordedMinutes",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "TATagID",
						"type": "varchar"
					},
					{
						"name": "ImageFilename",
						"type": "varchar"
					},
					{
						"name": "Imported",
						"type": "bit"
					},
					{
						"name": "SrcUnit",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ExternalWorkerName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "CareBlox",
					"table": "tblTAData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AH2_TRANSFORM_DB_Careblox_Types')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AH2_TRANSFORM_DB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Careblox/Azure SQL"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TypeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TypeName",
						"type": "nvarchar"
					},
					{
						"name": "TypeDescription",
						"type": "nvarchar"
					},
					{
						"name": "PayGroup",
						"type": "nvarchar"
					},
					{
						"name": "StarCode",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OffDutyGroup",
						"type": "int",
						"precision": 10
					},
					{
						"name": "IsDefault",
						"type": "bit"
					},
					{
						"name": "IsDefaultMultiplier",
						"type": "float",
						"precision": 15
					},
					{
						"name": "SentToUnit",
						"type": "bit"
					},
					{
						"name": "CSLCode",
						"type": "int",
						"precision": 10
					},
					{
						"name": "IsDefault2",
						"type": "bit"
					},
					{
						"name": "IsDefault3",
						"type": "bit"
					},
					{
						"name": "Rosterable",
						"type": "bit"
					},
					{
						"name": "PayType",
						"type": "char"
					},
					{
						"name": "AvailableToGroup",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "CareBlox",
					"table": "tblTypes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AH2_TRANSFORM_DB_Query')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AH2_TRANSFORM_DB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Careblox/Azure SQL"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AH2_TRANSFORM_DB_SoftWorks_Clockings')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AH2_TRANSFORM_DB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Softworks"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "EmpNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ClockId",
						"type": "nvarchar"
					},
					{
						"name": "AbsId",
						"type": "nvarchar"
					},
					{
						"name": "DeptId",
						"type": "nvarchar"
					},
					{
						"name": "JobId",
						"type": "nvarchar"
					},
					{
						"name": "ProjId",
						"type": "nvarchar"
					},
					{
						"name": "AbsoluteClockTime",
						"type": "nvarchar"
					},
					{
						"name": "ClockType",
						"type": "nvarchar"
					},
					{
						"name": "ClockDate",
						"type": "date"
					},
					{
						"name": "ClockTime",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Seconds",
						"type": "nvarchar"
					},
					{
						"name": "EffectiveDate",
						"type": "date"
					},
					{
						"name": "ClockDuration",
						"type": "nvarchar"
					},
					{
						"name": "Application",
						"type": "nvarchar"
					},
					{
						"name": "SourceType",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "SourceData",
						"type": "nvarchar"
					},
					{
						"name": "SourceEdit",
						"type": "nvarchar"
					},
					{
						"name": "SourceClockingType",
						"type": "nvarchar"
					},
					{
						"name": "Longitude",
						"type": "nvarchar"
					},
					{
						"name": "Latitude",
						"type": "nvarchar"
					},
					{
						"name": "Accuracy",
						"type": "nvarchar"
					},
					{
						"name": "Decision",
						"type": "nvarchar"
					},
					{
						"name": "DelCode",
						"type": "nvarchar"
					},
					{
						"name": "UserId",
						"type": "nvarchar"
					},
					{
						"name": "DateEntered",
						"type": "date"
					},
					{
						"name": "Deleted",
						"type": "nvarchar"
					},
					{
						"name": "Duplicate",
						"type": "nvarchar"
					},
					{
						"name": "Ignore",
						"type": "nvarchar"
					},
					{
						"name": "InOut",
						"type": "nvarchar"
					},
					{
						"name": "InClocking",
						"type": "nvarchar"
					},
					{
						"name": "OutClocking",
						"type": "nvarchar"
					},
					{
						"name": "IsActive",
						"type": "nvarchar"
					},
					{
						"name": "New",
						"type": "nvarchar"
					},
					{
						"name": "Standard",
						"type": "nvarchar"
					},
					{
						"name": "Overtime",
						"type": "nvarchar"
					},
					{
						"name": "CallIn",
						"type": "nvarchar"
					},
					{
						"name": "ClockFlag",
						"type": "nvarchar"
					},
					{
						"name": "Edited",
						"type": "nvarchar"
					},
					{
						"name": "CalcInsert",
						"type": "nvarchar"
					},
					{
						"name": "Infringe",
						"type": "nvarchar"
					},
					{
						"name": "Previous",
						"type": "nvarchar"
					},
					{
						"name": "Problem",
						"type": "nvarchar"
					},
					{
						"name": "TwUser",
						"type": "nvarchar"
					},
					{
						"name": "ShiftMove",
						"type": "nvarchar"
					},
					{
						"name": "ShowFlags",
						"type": "nvarchar"
					},
					{
						"name": "ShowLongFlags",
						"type": "nvarchar"
					},
					{
						"name": "IsOverMidnight",
						"type": "nvarchar"
					},
					{
						"name": "DeviceTime",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "TimeZone",
						"type": "nvarchar"
					},
					{
						"name": "TimeZoneCod",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "PrevAbsTime",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "ReasonId",
						"type": "nvarchar"
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					},
					{
						"name": "ApprovalState",
						"type": "nvarchar"
					},
					{
						"name": "ApprovalStateCaption",
						"type": "nvarchar"
					},
					{
						"name": "PrevApprovalState",
						"type": "nvarchar"
					},
					{
						"name": "LocationText",
						"type": "nvarchar"
					},
					{
						"name": "LocationEditText",
						"type": "nvarchar"
					},
					{
						"name": "LocationTextExtended",
						"type": "nvarchar"
					},
					{
						"name": "Offline",
						"type": "nvarchar"
					},
					{
						"name": "AttachedDocumentId",
						"type": "nvarchar"
					},
					{
						"name": "AssumedId",
						"type": "nvarchar"
					},
					{
						"name": "SourceFileName",
						"type": "nvarchar"
					},
					{
						"name": "RowID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "SoftWorks",
					"table": "Clockings"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AH2_TRANSFORM_DB_SoftWorks_Clockings_JSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AH2_TRANSFORM_DB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Softworks"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "empNo",
						"type": "nvarchar"
					},
					{
						"name": "clockId",
						"type": "nvarchar"
					},
					{
						"name": "absId",
						"type": "nvarchar"
					},
					{
						"name": "deptId",
						"type": "nvarchar"
					},
					{
						"name": "jobId",
						"type": "nvarchar"
					},
					{
						"name": "projId",
						"type": "nvarchar"
					},
					{
						"name": "absoluteClockTime",
						"type": "nvarchar"
					},
					{
						"name": "clockType",
						"type": "nvarchar"
					},
					{
						"name": "clocDate",
						"type": "nvarchar"
					},
					{
						"name": "clockTime",
						"type": "nvarchar"
					},
					{
						"name": "seconds",
						"type": "nvarchar"
					},
					{
						"name": "effectiveDate",
						"type": "nvarchar"
					},
					{
						"name": "clockDuration",
						"type": "nvarchar"
					},
					{
						"name": "application",
						"type": "nvarchar"
					},
					{
						"name": "sourceType",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "sourceData",
						"type": "nvarchar"
					},
					{
						"name": "sourceEdit",
						"type": "nvarchar"
					},
					{
						"name": "sourceClockingType",
						"type": "nvarchar"
					},
					{
						"name": "longitude",
						"type": "nvarchar"
					},
					{
						"name": "latitude",
						"type": "nvarchar"
					},
					{
						"name": "accuracy",
						"type": "nvarchar"
					},
					{
						"name": "decision",
						"type": "nvarchar"
					},
					{
						"name": "delCode",
						"type": "nvarchar"
					},
					{
						"name": "userId",
						"type": "nvarchar"
					},
					{
						"name": "dateEntered",
						"type": "nvarchar"
					},
					{
						"name": "deleted",
						"type": "nvarchar"
					},
					{
						"name": "duplicate",
						"type": "nvarchar"
					},
					{
						"name": "ignore",
						"type": "nvarchar"
					},
					{
						"name": "inOut",
						"type": "nvarchar"
					},
					{
						"name": "inClocking",
						"type": "nvarchar"
					},
					{
						"name": "outClocking",
						"type": "nvarchar"
					},
					{
						"name": "isActive",
						"type": "nvarchar"
					},
					{
						"name": "new",
						"type": "nvarchar"
					},
					{
						"name": "standard",
						"type": "nvarchar"
					},
					{
						"name": "overtime",
						"type": "nvarchar"
					},
					{
						"name": "callIn",
						"type": "nvarchar"
					},
					{
						"name": "clockFlag",
						"type": "nvarchar"
					},
					{
						"name": "edited",
						"type": "nvarchar"
					},
					{
						"name": "calcInsert",
						"type": "nvarchar"
					},
					{
						"name": "infringe",
						"type": "nvarchar"
					},
					{
						"name": "previous",
						"type": "nvarchar"
					},
					{
						"name": "problem",
						"type": "nvarchar"
					},
					{
						"name": "twUser",
						"type": "nvarchar"
					},
					{
						"name": "shiftMove",
						"type": "nvarchar"
					},
					{
						"name": "showFlags",
						"type": "nvarchar"
					},
					{
						"name": "showLongFlags",
						"type": "nvarchar"
					},
					{
						"name": "isOverMidnight",
						"type": "nvarchar"
					},
					{
						"name": "deviceTime",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "TimeZone",
						"type": "nvarchar"
					},
					{
						"name": "TimeZoneCod",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "PrevAbsTime",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "ReasonId",
						"type": "nvarchar"
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					},
					{
						"name": "ApprovalState",
						"type": "nvarchar"
					},
					{
						"name": "ApprovalStateCaption",
						"type": "nvarchar"
					},
					{
						"name": "PrevApprovalState",
						"type": "nvarchar"
					},
					{
						"name": "LocationText",
						"type": "nvarchar"
					},
					{
						"name": "LocationEditText",
						"type": "nvarchar"
					},
					{
						"name": "LocationTextExtended",
						"type": "nvarchar"
					},
					{
						"name": "Offline",
						"type": "nvarchar"
					},
					{
						"name": "AttachedDocumentId",
						"type": "nvarchar"
					},
					{
						"name": "AssumedId",
						"type": "nvarchar"
					},
					{
						"name": "SourceFileName",
						"type": "nvarchar"
					},
					{
						"name": "RowID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "SoftWorks",
					"table": "Clockings_JSON"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AH2_TRANSFORM_DB_SoftWorks_Employee')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AH2_TRANSFORM_DB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Softworks"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Department",
						"type": "nvarchar"
					},
					{
						"name": "ClockNumber",
						"type": "nvarchar"
					},
					{
						"name": "Clocking",
						"type": "nvarchar"
					},
					{
						"name": "DateOfBirth",
						"type": "date"
					},
					{
						"name": "DateStarted",
						"type": "date"
					},
					{
						"name": "DateTerminated",
						"type": "date"
					},
					{
						"name": "Firstname",
						"type": "nvarchar"
					},
					{
						"name": "Surname",
						"type": "nvarchar"
					},
					{
						"name": "EmployeeName",
						"type": "nvarchar"
					},
					{
						"name": "EmployeeNumber",
						"type": "nvarchar"
					},
					{
						"name": "EmployeeEmail",
						"type": "nvarchar"
					},
					{
						"name": "EmployeeStatus",
						"type": "nvarchar"
					},
					{
						"name": "Salary",
						"type": "nvarchar"
					},
					{
						"name": "Roster",
						"type": "nvarchar"
					},
					{
						"name": "HourlyRate",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "PayType",
						"type": "nvarchar"
					},
					{
						"name": "PayNumber",
						"type": "nvarchar"
					},
					{
						"name": "MasterPolicy",
						"type": "nvarchar"
					},
					{
						"name": "SupervisorName",
						"type": "nvarchar"
					},
					{
						"name": "EmployeeCostCentre",
						"type": "nvarchar"
					},
					{
						"name": "AllocationGroup",
						"type": "nvarchar"
					},
					{
						"name": "ShiftlessPattern",
						"type": "nvarchar"
					},
					{
						"name": "DefaultBalanceCategory",
						"type": "nvarchar"
					},
					{
						"name": "EmployeeGender",
						"type": "nvarchar"
					},
					{
						"name": "HealthcareBankGroup",
						"type": "nvarchar"
					},
					{
						"name": "HealthcareBankStatus",
						"type": "nvarchar"
					},
					{
						"name": "SelfRosteringGroup",
						"type": "nvarchar"
					},
					{
						"name": "NextofKinContact",
						"type": "nvarchar"
					},
					{
						"name": "NextofKinTelNumber",
						"type": "nvarchar"
					},
					{
						"name": "NextofKinRelationship",
						"type": "nvarchar"
					},
					{
						"name": "TelephoneNo",
						"type": "nvarchar"
					},
					{
						"name": "Username",
						"type": "nvarchar"
					},
					{
						"name": "NameAsSupervisor",
						"type": "nvarchar"
					},
					{
						"name": "Address1",
						"type": "nvarchar"
					},
					{
						"name": "Address2",
						"type": "nvarchar"
					},
					{
						"name": "Address3",
						"type": "nvarchar"
					},
					{
						"name": "Address4",
						"type": "nvarchar"
					},
					{
						"name": "Postcode",
						"type": "nvarchar"
					},
					{
						"name": "NINumber",
						"type": "nvarchar"
					},
					{
						"name": "AccountName",
						"type": "nvarchar"
					},
					{
						"name": "SortCode",
						"type": "nvarchar"
					},
					{
						"name": "AccountNumber",
						"type": "nvarchar"
					},
					{
						"name": "Item",
						"type": "nvarchar"
					},
					{
						"name": "Notes",
						"type": "nvarchar"
					},
					{
						"name": "DocumentReference",
						"type": "nvarchar"
					},
					{
						"name": "DocumentName",
						"type": "nvarchar"
					},
					{
						"name": "JobTitle",
						"type": "nvarchar"
					},
					{
						"name": "SickLeaveEntitlement",
						"type": "nvarchar"
					},
					{
						"name": "HolidayEntitlement",
						"type": "nvarchar"
					},
					{
						"name": "ModeofTransport",
						"type": "nvarchar"
					},
					{
						"name": "HomeLegalName",
						"type": "nvarchar"
					},
					{
						"name": "ReviewDate",
						"type": "date"
					},
					{
						"name": "IsSupervisor",
						"type": "bit"
					},
					{
						"name": "Salaried",
						"type": "bit"
					},
					{
						"name": "CostCentre",
						"type": "nvarchar"
					},
					{
						"name": "DeptExportCode",
						"type": "nvarchar"
					},
					{
						"name": "DeptImportCode",
						"type": "nvarchar"
					},
					{
						"name": "Comments",
						"type": "nvarchar"
					},
					{
						"name": "SoftworksID",
						"type": "nvarchar"
					},
					{
						"name": "SourceFileName",
						"type": "nvarchar"
					},
					{
						"name": "RowTimeStamp",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RowID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "SoftWorks",
					"table": "Employee"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AH2_TRANSFORM_DB_SoftWorks_Employee_JSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AH2_TRANSFORM_DB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Softworks"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "department",
						"type": "nvarchar"
					},
					{
						"name": "clockNumber",
						"type": "nvarchar"
					},
					{
						"name": "clocking",
						"type": "nvarchar"
					},
					{
						"name": "dateOfBirth",
						"type": "nvarchar"
					},
					{
						"name": "dateStarted",
						"type": "nvarchar"
					},
					{
						"name": "dateTerminated",
						"type": "nvarchar"
					},
					{
						"name": "firstname",
						"type": "nvarchar"
					},
					{
						"name": "surname",
						"type": "nvarchar"
					},
					{
						"name": "employeeName",
						"type": "nvarchar"
					},
					{
						"name": "employeeNumber",
						"type": "nvarchar"
					},
					{
						"name": "employeeEmail",
						"type": "nvarchar"
					},
					{
						"name": "employeeStatus",
						"type": "nvarchar"
					},
					{
						"name": "salary",
						"type": "nvarchar"
					},
					{
						"name": "roster",
						"type": "nvarchar"
					},
					{
						"name": "hourlyRate",
						"type": "nvarchar"
					},
					{
						"name": "payType",
						"type": "nvarchar"
					},
					{
						"name": "payNumber",
						"type": "nvarchar"
					},
					{
						"name": "masterPolicy",
						"type": "nvarchar"
					},
					{
						"name": "supervisorName",
						"type": "nvarchar"
					},
					{
						"name": "employeeCostCentre",
						"type": "nvarchar"
					},
					{
						"name": "allocationGroup",
						"type": "nvarchar"
					},
					{
						"name": "shiftlessPattern",
						"type": "nvarchar"
					},
					{
						"name": "defaultBalanceCategory",
						"type": "nvarchar"
					},
					{
						"name": "employeeGender",
						"type": "nvarchar"
					},
					{
						"name": "healthcareBankGroup",
						"type": "nvarchar"
					},
					{
						"name": "healthcareBankStatus",
						"type": "nvarchar"
					},
					{
						"name": "selfRosteringGroup",
						"type": "nvarchar"
					},
					{
						"name": "nextofKinContact",
						"type": "nvarchar"
					},
					{
						"name": "nextofKinTel.Number",
						"type": "nvarchar"
					},
					{
						"name": "nextofKinRelationship",
						"type": "nvarchar"
					},
					{
						"name": "telephoneNo",
						"type": "nvarchar"
					},
					{
						"name": "username",
						"type": "nvarchar"
					},
					{
						"name": "nameAsSupervisor",
						"type": "nvarchar"
					},
					{
						"name": "address1",
						"type": "nvarchar"
					},
					{
						"name": "address2",
						"type": "nvarchar"
					},
					{
						"name": "address3",
						"type": "nvarchar"
					},
					{
						"name": "address4",
						"type": "nvarchar"
					},
					{
						"name": "postcode",
						"type": "nvarchar"
					},
					{
						"name": "nINumber",
						"type": "nvarchar"
					},
					{
						"name": "accountName",
						"type": "nvarchar"
					},
					{
						"name": "sortCode",
						"type": "nvarchar"
					},
					{
						"name": "accountNumber",
						"type": "nvarchar"
					},
					{
						"name": "item",
						"type": "nvarchar"
					},
					{
						"name": "notes",
						"type": "nvarchar"
					},
					{
						"name": "documentReference",
						"type": "nvarchar"
					},
					{
						"name": "documentName",
						"type": "nvarchar"
					},
					{
						"name": "jobTitle",
						"type": "nvarchar"
					},
					{
						"name": "sickLeaveEntitlement",
						"type": "nvarchar"
					},
					{
						"name": "holidayEntitlement",
						"type": "nvarchar"
					},
					{
						"name": "modeofTransport",
						"type": "nvarchar"
					},
					{
						"name": "homeLegalName",
						"type": "nvarchar"
					},
					{
						"name": "reviewDate",
						"type": "nvarchar"
					},
					{
						"name": "isSupervisor",
						"type": "nvarchar"
					},
					{
						"name": "salaried",
						"type": "nvarchar"
					},
					{
						"name": "costCentre",
						"type": "nvarchar"
					},
					{
						"name": "deptExportCode",
						"type": "nvarchar"
					},
					{
						"name": "deptImportCode",
						"type": "nvarchar"
					},
					{
						"name": "comments",
						"type": "nvarchar"
					},
					{
						"name": "softworksID",
						"type": "nvarchar"
					},
					{
						"name": "SourceFileName",
						"type": "nvarchar"
					},
					{
						"name": "RowID",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "SoftWorks",
					"table": "Employee_JSON"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AH2_TRANSFORM_Query')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AH2_TRANSFORM_DB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Generic"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH2_TRANSFORM_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AH2_YardiStage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AH2_YardiStage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Schema": {
						"type": "string"
					},
					"Table": {
						"type": "string"
					}
				},
				"folder": {
					"name": "YardiStage"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().Table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AH2_YardiStage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZStorage_careblox_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Careblox/Parquet Files"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@concat(formatDateTime(utcNow(), 'yyyy'),'/',formatDateTime(utcNow(), 'MM'),'/',formatDateTime(utcNow(), 'dd') )",
							"type": "Expression"
						},
						"container": "careblox"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "JobAutoID",
						"type": "INT64"
					},
					{
						"name": "EmployeeID",
						"type": "UTF8"
					},
					{
						"name": "ContractedHours",
						"type": "DOUBLE"
					},
					{
						"name": "Department",
						"type": "INT64"
					},
					{
						"name": "Role",
						"type": "INT64"
					},
					{
						"name": "JobNo",
						"type": "INT64"
					},
					{
						"name": "StartDate",
						"type": "INT64"
					},
					{
						"name": "Holidays",
						"type": "DOUBLE"
					},
					{
						"name": "HolidayFull",
						"type": "DOUBLE"
					},
					{
						"name": "SentToUnit",
						"type": "BOOLEAN"
					},
					{
						"name": "BreakRule",
						"type": "INT64"
					},
					{
						"name": "ContractID",
						"type": "INT64"
					},
					{
						"name": "Deleted",
						"type": "BOOLEAN"
					},
					{
						"name": "LastUpdate",
						"type": "INT64"
					},
					{
						"name": "WorkingArrangements",
						"type": "UTF8"
					},
					{
						"name": "VHEnabled",
						"type": "BOOLEAN"
					},
					{
						"name": "VHBalance",
						"type": "DOUBLE"
					},
					{
						"name": "VHBalanceDate",
						"type": "INT32"
					},
					{
						"name": "SicknessThreshold",
						"type": "DOUBLE"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZStorage_careblox_parquet_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Used to read parquet files produced from the careblox DB extraction",
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					},
					"DateString": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Careblox/Parquet Files"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(dataset().FileName,dataset().DateString,'.parquet')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(formatDateTime(utcNow(), 'yyyy'),'/',formatDateTime(utcNow(), 'MM'),'/',formatDateTime(utcNow(), 'dd') )",
							"type": "Expression"
						},
						"container": "careblox"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AveryArtisan_Artisan')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AveryArtisan_Artisan",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Schema": {
						"type": "string"
					},
					"Table": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Artisan"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().Table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AveryArtisan_Artisan')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_BroadShield_JSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Json File in broadshield container",
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Broadshield"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(dataset().FileName,'.json')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(formatDateTime(utcNow(), 'yyyy'),'/',formatDateTime(utcNow(), 'MM'),'/',formatDateTime(utcNow(), 'dd') )",
							"type": "Expression"
						},
						"container": "broadshield"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_BroadShield_JSON_AllData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Json File in broadshield container",
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Broadshield"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(dataset().FileName,'.json')",
							"type": "Expression"
						},
						"folderPath": "AllDataPull",
						"container": "broadshield"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_BroadShield_JSON_PrevDay')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Json File in broadshield container. Access the previous days folder and files",
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Broadshield"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(dataset().FileName,'.json')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(formatDateTime(utcNow(), 'yyyy'),'/',formatDateTime(utcNow(), 'MM'),'/',formatDateTime(subtractFromTime(utcNow(), 1, 'Day'), 'dd'))",
							"type": "Expression"
						},
						"container": "broadshield"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_BroadShield_Live_API')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Broadshield live API endpoint. Requires the endpoint and fromdate parameter to be enter. (YYYYMMDDHHmmss)",
				"linkedServiceName": {
					"referenceName": "Broadshield Live API",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Date": {
						"type": "string"
					},
					"Endpoint": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Broadshield"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat(dataset().Endpoint,'?fromDate=', dataset().Date)",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Broadshield Live API')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_BroadShield_Live_API_AllData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Broadshields live API. No Date Filter",
				"linkedServiceName": {
					"referenceName": "Broadshield Live API",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"EndPoint": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Broadshield/NoDateFilter"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat(dataset().EndPoint)",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Broadshield Live API')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_BroadShield_UAT_API')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Broadshield UAT API endpoint. Requires the endpoint and fromdate parameter to be enter. (YYYYMMDDHHmmss)",
				"linkedServiceName": {
					"referenceName": "Myrus_Careshield_UAT_API",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Date": {
						"type": "string"
					},
					"EndPoint": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Broadshield"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat(dataset().EndPoint,'fromDate=', dataset().Date)",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Myrus_Careshield_UAT_API')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_BroadShield_UAT_API_AllData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Myrus_Careshield_UAT_API",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"EndPoint": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Broadshield/NoDateFilter"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat(dataset().EndPoint)",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Myrus_Careshield_UAT_API')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CQC_CustomLocationJSONSchema')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CQC"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "CustomLocationJsonSchema.json",
						"folderPath": "customjsonschema",
						"container": "cqc"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"locationId": {
							"type": "string"
						},
						"providerId": {
							"type": "string"
						},
						"organisationType": {
							"type": "string"
						},
						"type": {
							"type": "string"
						},
						"name": {
							"type": "string"
						},
						"brandId": {
							"type": "string"
						},
						"brandName": {
							"type": "string"
						},
						"onspdCcgCode": {
							"type": "string"
						},
						"onspdCcgName": {
							"type": "string"
						},
						"onspdIcbCode": {
							"type": "string"
						},
						"onspdIcbName": {
							"type": "string"
						},
						"odsCode": {
							"type": "string"
						},
						"registrationStatus": {
							"type": "string"
						},
						"registrationDate": {
							"type": "string"
						},
						"dormancy": {
							"type": "string"
						},
						"onspdLatitude": {
							"type": "number"
						},
						"onspdLongitude": {
							"type": "number"
						},
						"careHome": {
							"type": "string"
						},
						"inspectionDirectorate": {
							"type": "string"
						},
						"postalAddressLine1": {
							"type": "string"
						},
						"postalAddressTownCity": {
							"type": "string"
						},
						"postalAddressCounty": {
							"type": "string"
						},
						"region": {
							"type": "string"
						},
						"postalCode": {
							"type": "string"
						},
						"uprn": {
							"type": "string"
						},
						"mainPhoneNumber": {
							"type": "string"
						},
						"registeredManagerAbsentDate": {
							"type": "string"
						},
						"website": {
							"type": "string"
						},
						"numberOfBeds": {
							"type": "integer"
						},
						"constituency": {
							"type": "string"
						},
						"localAuthority": {
							"type": "string"
						},
						"lastInspection": {
							"type": "object",
							"properties": {
								"date": {
									"type": "string"
								}
							}
						},
						"lastReport": {
							"type": "object",
							"properties": {
								"publicationDate": {
									"type": "string"
								}
							}
						},
						"historicRatings": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"reportDate": {
										"type": "string"
									},
									"reportLinkId": {
										"type": "string"
									},
									"overall": {
										"type": "object",
										"properties": {
											"rating": {
												"type": "string"
											},
											"keyQuestionRatings": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"name": {
															"type": "string"
														},
														"rating": {
															"type": "string"
														}
													}
												}
											}
										}
									}
								}
							}
						},
						"currentRatings": {
							"type": "object",
							"properties": {
								"overall": {
									"type": "object",
									"properties": {
										"rating": {
											"type": "string"
										},
										"reportDate": {
											"type": "string"
										},
										"reportLinkId": {
											"type": "string"
										},
										"keyQuestionRatings": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"name": {
														"type": "string"
													},
													"rating": {
														"type": "string"
													},
													"reportDate": {
														"type": "string"
													},
													"reportLinkId": {
														"type": "string"
													}
												}
											}
										}
									}
								},
								"reportDate": {
									"type": "string"
								}
							}
						},
						"assessment": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"assessmentPlanPublishedDateTime": {
										"type": "string"
									},
									"ratings": {
										"type": "object",
										"properties": {
											"asgRatings": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"assessmentPlanId": {
															"type": "string"
														},
														"title": {
															"type": "string"
														},
														"assessmentDate": {
															"type": "string"
														},
														"assessmentPlanStatus": {
															"type": "string"
														},
														"rating": {
															"type": "string"
														},
														"status": {
															"type": "string"
														},
														"narrative": {
															"type": "string"
														},
														"keyQuestionRatings": {
															"type": "array",
															"items": {
																"type": "object",
																"properties": {
																	"name": {
																		"type": "string"
																	},
																	"rating": {
																		"type": "string"
																	},
																	"status": {
																		"type": "string"
																	},
																	"narrative": {
																		"type": "string"
																	},
																	"percentageScore": {
																		"type": "string"
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CQC_CustomProviderJSONSchema')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CQC"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "CustomProviderJsonSchema.json",
						"folderPath": "customjsonschema",
						"container": "cqc"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"locationId": {
							"type": "string"
						},
						"providerId": {
							"type": "string"
						},
						"organisationType": {
							"type": "string"
						},
						"type": {
							"type": "string"
						},
						"name": {
							"type": "string"
						},
						"brandId": {
							"type": "string"
						},
						"brandName": {
							"type": "string"
						},
						"onspdCcgCode": {
							"type": "string"
						},
						"onspdCcgName": {
							"type": "string"
						},
						"onspdIcbCode": {
							"type": "string"
						},
						"onspdIcbName": {
							"type": "string"
						},
						"odsCode": {
							"type": "string"
						},
						"registrationStatus": {
							"type": "string"
						},
						"registrationDate": {
							"type": "string"
						},
						"dormancy": {
							"type": "string"
						},
						"onspdLatitude": {
							"type": "number"
						},
						"onspdLongitude": {
							"type": "number"
						},
						"careHome": {
							"type": "string"
						},
						"inspectionDirectorate": {
							"type": "string"
						},
						"postalAddressLine1": {
							"type": "string"
						},
						"postalAddressTownCity": {
							"type": "string"
						},
						"postalAddressCounty": {
							"type": "string"
						},
						"region": {
							"type": "string"
						},
						"postalCode": {
							"type": "string"
						},
						"uprn": {
							"type": "string"
						},
						"mainPhoneNumber": {
							"type": "string"
						},
						"registeredManagerAbsentDate": {
							"type": "string"
						},
						"website": {
							"type": "string"
						},
						"numberOfBeds": {
							"type": "integer"
						},
						"constituency": {
							"type": "string"
						},
						"localAuthority": {
							"type": "string"
						},
						"lastInspection": {
							"type": "object",
							"properties": {
								"date": {
									"type": "string"
								}
							}
						},
						"lastReport": {
							"type": "object",
							"properties": {
								"publicationDate": {
									"type": "string"
								}
							}
						},
						"historicRatings": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"reportDate": {
										"type": "string"
									},
									"reportLinkId": {
										"type": "string"
									},
									"overall": {
										"type": "object",
										"properties": {
											"rating": {
												"type": "string"
											},
											"keyQuestionRatings": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"name": {
															"type": "string"
														},
														"rating": {
															"type": "string"
														}
													}
												}
											}
										}
									}
								}
							}
						},
						"currentRatings": {
							"type": "object",
							"properties": {
								"overall": {
									"type": "object",
									"properties": {
										"rating": {
											"type": "string"
										},
										"reportDate": {
											"type": "string"
										},
										"reportLinkId": {
											"type": "string"
										},
										"keyQuestionRatings": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"name": {
														"type": "string"
													},
													"rating": {
														"type": "string"
													},
													"reportDate": {
														"type": "string"
													},
													"reportLinkId": {
														"type": "string"
													}
												}
											}
										}
									}
								},
								"reportDate": {
									"type": "string"
								}
							}
						},
						"assessment": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"assessmentPlanPublishedDateTime": {
										"type": "string"
									},
									"ratings": {
										"type": "object",
										"properties": {
											"asgRatings": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"assessmentPlanId": {
															"type": "string"
														},
														"title": {
															"type": "string"
														},
														"assessmentDate": {
															"type": "string"
														},
														"assessmentPlanStatus": {
															"type": "string"
														},
														"rating": {
															"type": "string"
														},
														"status": {
															"type": "string"
														},
														"narrative": {
															"type": "string"
														},
														"keyQuestionRatings": {
															"type": "array",
															"items": {
																"type": "object",
																"properties": {
																	"name": {
																		"type": "string"
																	},
																	"rating": {
																		"type": "string"
																	},
																	"status": {
																		"type": "string"
																	},
																	"narrative": {
																		"type": "string"
																	},
																	"percentageScore": {
																		"type": "string"
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CQC_HomeLocationList')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CQC"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "HomeLocationIDs.json",
						"folderPath": "locationlist",
						"container": "cqc"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"locationId": {
							"type": "string"
						},
						"providerId": {
							"type": "string"
						},
						"organisationType": {
							"type": "string"
						},
						"type": {
							"type": "string"
						},
						"name": {
							"type": "string"
						},
						"brandId": {
							"type": "string"
						},
						"brandName": {
							"type": "string"
						},
						"onspdCcgCode": {
							"type": "string"
						},
						"onspdCcgName": {
							"type": "string"
						},
						"onspdIcbCode": {
							"type": "string"
						},
						"onspdIcbName": {
							"type": "string"
						},
						"odsCode": {
							"type": "string"
						},
						"registrationStatus": {
							"type": "string"
						},
						"registrationDate": {
							"type": "string"
						},
						"dormancy": {
							"type": "string"
						},
						"onspdLatitude": {
							"type": "number"
						},
						"onspdLongitude": {
							"type": "number"
						},
						"careHome": {
							"type": "string"
						},
						"inspectionDirectorate": {
							"type": "string"
						},
						"postalAddressLine1": {
							"type": "string"
						},
						"postalAddressTownCity": {
							"type": "string"
						},
						"postalAddressCounty": {
							"type": "string"
						},
						"region": {
							"type": "string"
						},
						"postalCode": {
							"type": "string"
						},
						"uprn": {
							"type": "string"
						},
						"mainPhoneNumber": {
							"type": "string"
						},
						"registeredManagerAbsentDate": {
							"type": "string"
						},
						"website": {
							"type": "string"
						},
						"numberOfBeds": {
							"type": "integer"
						},
						"constituency": {
							"type": "string"
						},
						"localAuthority": {
							"type": "string"
						},
						"lastInspection": {
							"type": "object",
							"properties": {
								"date": {
									"type": "string"
								}
							}
						},
						"lastReport": {
							"type": "object",
							"properties": {
								"publicationDate": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"relatedLocationId": {
										"type": "string"
									},
									"relatedLocationName": {
										"type": "string"
									},
									"type": {
										"type": "string"
									},
									"reason": {
										"type": "string"
									}
								}
							}
						},
						"locationTypes": {
							"type": "array"
						},
						"regulatedActivities": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string"
									},
									"code": {
										"type": "string"
									},
									"contacts": {
										"type": "array"
									}
								}
							}
						},
						"gacServiceTypes": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string"
									},
									"description": {
										"type": "string"
									}
								}
							}
						},
						"specialisms": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string"
									}
								}
							}
						},
						"inspectionCategories": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"code": {
										"type": "string"
									},
									"primary": {
										"type": "string"
									},
									"name": {
										"type": "string"
									}
								}
							}
						},
						"inspectionAreas": {
							"type": "array"
						},
						"historicRatings": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"reportDate": {
										"type": "string"
									},
									"reportLinkId": {
										"type": "string"
									},
									"overall": {
										"type": "object",
										"properties": {
											"rating": {
												"type": "string"
											},
											"keyQuestionRatings": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"name": {
															"type": "string"
														},
														"rating": {
															"type": "string"
														}
													}
												}
											}
										}
									}
								}
							}
						},
						"reports": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"linkId": {
										"type": "string"
									},
									"reportDate": {
										"type": "string"
									},
									"firstVisitDate": {
										"type": "string"
									},
									"reportUri": {
										"type": "string"
									},
									"reportType": {
										"type": "string"
									}
								}
							}
						},
						"assessmentServiceGroup": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"assessmentServiceId": {
										"type": "string"
									},
									"assessmentServiceName": {
										"type": "string"
									},
									"status": {
										"type": "string"
									}
								}
							}
						},
						"assessment": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"assessmentPlanPublishedDateTime": {
										"type": "string"
									},
									"ratings": {
										"type": "object",
										"properties": {
											"asgRatings": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"assessmentPlanId": {
															"type": "string"
														},
														"title": {
															"type": "string"
														},
														"assessmentDate": {
															"type": "string"
														},
														"assessmentPlanStatus": {
															"type": "string"
														},
														"name": {
															"type": "string"
														},
														"rating": {
															"type": "string"
														},
														"status": {
															"type": "string"
														},
														"commentary": {
															"type": "string"
														},
														"commentaryDate": {
															"type": "string"
														},
														"narrative": {
															"type": "string"
														},
														"overallPeopleExperience": {
															"type": "string"
														},
														"overallPeopleExperienceDate": {
															"type": "string"
														},
														"keyQuestionRatings": {
															"type": "array",
															"items": {
																"type": "object",
																"properties": {
																	"name": {
																		"type": "string"
																	},
																	"rating": {
																		"type": "string"
																	},
																	"status": {
																		"type": "string"
																	},
																	"commentary": {
																		"type": "string"
																	},
																	"commentaryDate": {
																		"type": "string"
																	},
																	"narrative": {
																		"type": "string"
																	},
																	"percentageScore": {
																		"type": "string"
																	},
																	"topicareas": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"properties": {
																				"name": {
																					"type": "string"
																				},
																				"qualityStatementId": {
																					"type": "string"
																				},
																				"status": {
																					"type": "string"
																				},
																				"evidenceCategory": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"properties": {
																							"evidenceCategoryId": {
																								"type": "string"
																							},
																							"commentary": {
																								"type": "string"
																							},
																							"commentaryDate": {
																								"type": "string"
																							}
																						}
																					}
																				},
																				"qualityStatementscore": {
																					"type": "string"
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CQC_Merged_Location_File')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CQC"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@concat('locationresponses', '/', formatDateTime(utcNow(), 'yyyy'),'/',formatDateTime(utcNow(), 'MM'),'/',formatDateTime(utcNow(), 'dd'), '/', 'merged')",
							"type": "Expression"
						},
						"container": "cqc"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"locationId": {
							"type": "string"
						},
						"providerId": {
							"type": "string"
						},
						"organisationType": {
							"type": "string"
						},
						"type": {
							"type": "string"
						},
						"name": {
							"type": "string"
						},
						"brandId": {
							"type": "string"
						},
						"brandName": {
							"type": "string"
						},
						"onspdCcgCode": {
							"type": "string"
						},
						"onspdCcgName": {
							"type": "string"
						},
						"onspdIcbCode": {
							"type": "string"
						},
						"onspdIcbName": {
							"type": "string"
						},
						"odsCode": {
							"type": "string"
						},
						"registrationStatus": {
							"type": "string"
						},
						"registrationDate": {
							"type": "string"
						},
						"dormancy": {
							"type": "string"
						},
						"onspdLatitude": {
							"type": "number"
						},
						"onspdLongitude": {
							"type": "number"
						},
						"careHome": {
							"type": "string"
						},
						"inspectionDirectorate": {
							"type": "string"
						},
						"postalAddressLine1": {
							"type": "string"
						},
						"postalAddressTownCity": {
							"type": "string"
						},
						"postalAddressCounty": {
							"type": "string"
						},
						"region": {
							"type": "string"
						},
						"postalCode": {
							"type": "string"
						},
						"uprn": {
							"type": "string"
						},
						"mainPhoneNumber": {
							"type": "string"
						},
						"registeredManagerAbsentDate": {
							"type": "string"
						},
						"website": {
							"type": "string"
						},
						"numberOfBeds": {
							"type": "integer"
						},
						"constituency": {
							"type": "string"
						},
						"localAuthority": {
							"type": "string"
						},
						"lastInspection": {
							"type": "object",
							"properties": {
								"date": {
									"type": "string"
								}
							}
						},
						"lastReport": {
							"type": "object",
							"properties": {
								"publicationDate": {
									"type": "string"
								}
							}
						},
						"historicRatings": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"reportDate": {
										"type": "string"
									},
									"reportLinkId": {
										"type": "string"
									},
									"overall": {
										"type": "object",
										"properties": {
											"rating": {
												"type": "string"
											},
											"keyQuestionRatings": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"name": {
															"type": "string"
														},
														"rating": {
															"type": "string"
														}
													}
												}
											}
										}
									}
								}
							}
						},
						"currentRatings": {
							"type": "object",
							"properties": {
								"overall": {
									"type": "object",
									"properties": {
										"rating": {
											"type": "string"
										},
										"reportDate": {
											"type": "string"
										},
										"reportLinkId": {
											"type": "string"
										},
										"keyQuestionRatings": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"name": {
														"type": "string"
													},
													"rating": {
														"type": "string"
													},
													"reportDate": {
														"type": "string"
													},
													"reportLinkId": {
														"type": "string"
													}
												}
											}
										}
									}
								},
								"reportDate": {
									"type": "string"
								}
							}
						},
						"assessment": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"assessmentPlanPublishedDateTime": {
										"type": "string"
									},
									"ratings": {
										"type": "object",
										"properties": {
											"asgRatings": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"assessmentPlanId": {
															"type": "string"
														},
														"title": {
															"type": "string"
														},
														"assessmentDate": {
															"type": "string"
														},
														"assessmentPlanStatus": {
															"type": "string"
														},
														"rating": {
															"type": "string"
														},
														"status": {
															"type": "string"
														},
														"narrative": {
															"type": "string"
														},
														"keyQuestionRatings": {
															"type": "array",
															"items": {
																"type": "object",
																"properties": {
																	"name": {
																		"type": "string"
																	},
																	"rating": {
																		"type": "string"
																	},
																	"status": {
																		"type": "string"
																	},
																	"narrative": {
																		"type": "string"
																	},
																	"percentageScore": {
																		"type": "string"
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CQC_Merged_Provider_File')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CQC"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@concat('providerresponses', '/', formatDateTime(utcNow(), 'yyyy'),'/',formatDateTime(utcNow(), 'MM'),'/',formatDateTime(utcNow(), 'dd'), '/', 'merged')",
							"type": "Expression"
						},
						"container": "cqc"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"locationId": {
							"type": "string"
						},
						"providerId": {
							"type": "string"
						},
						"organisationType": {
							"type": "string"
						},
						"type": {
							"type": "string"
						},
						"name": {
							"type": "string"
						},
						"brandId": {
							"type": "string"
						},
						"brandName": {
							"type": "string"
						},
						"onspdCcgCode": {
							"type": "string"
						},
						"onspdCcgName": {
							"type": "string"
						},
						"onspdIcbCode": {
							"type": "string"
						},
						"onspdIcbName": {
							"type": "string"
						},
						"odsCode": {
							"type": "string"
						},
						"registrationStatus": {
							"type": "string"
						},
						"registrationDate": {
							"type": "string"
						},
						"dormancy": {
							"type": "string"
						},
						"onspdLatitude": {
							"type": "number"
						},
						"onspdLongitude": {
							"type": "number"
						},
						"careHome": {
							"type": "string"
						},
						"inspectionDirectorate": {
							"type": "string"
						},
						"postalAddressLine1": {
							"type": "string"
						},
						"postalAddressTownCity": {
							"type": "string"
						},
						"postalAddressCounty": {
							"type": "string"
						},
						"region": {
							"type": "string"
						},
						"postalCode": {
							"type": "string"
						},
						"uprn": {
							"type": "string"
						},
						"mainPhoneNumber": {
							"type": "string"
						},
						"registeredManagerAbsentDate": {
							"type": "string"
						},
						"website": {
							"type": "string"
						},
						"numberOfBeds": {
							"type": "integer"
						},
						"constituency": {
							"type": "string"
						},
						"localAuthority": {
							"type": "string"
						},
						"lastInspection": {
							"type": "object",
							"properties": {
								"date": {
									"type": "string"
								}
							}
						},
						"lastReport": {
							"type": "object",
							"properties": {
								"publicationDate": {
									"type": "string"
								}
							}
						},
						"historicRatings": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"reportDate": {
										"type": "string"
									},
									"reportLinkId": {
										"type": "string"
									},
									"overall": {
										"type": "object",
										"properties": {
											"rating": {
												"type": "string"
											},
											"keyQuestionRatings": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"name": {
															"type": "string"
														},
														"rating": {
															"type": "string"
														}
													}
												}
											}
										}
									}
								}
							}
						},
						"currentRatings": {
							"type": "object",
							"properties": {
								"overall": {
									"type": "object",
									"properties": {
										"rating": {
											"type": "string"
										},
										"reportDate": {
											"type": "string"
										},
										"reportLinkId": {
											"type": "string"
										},
										"keyQuestionRatings": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"name": {
														"type": "string"
													},
													"rating": {
														"type": "string"
													},
													"reportDate": {
														"type": "string"
													},
													"reportLinkId": {
														"type": "string"
													}
												}
											}
										}
									}
								},
								"reportDate": {
									"type": "string"
								}
							}
						},
						"assessment": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"assessmentPlanPublishedDateTime": {
										"type": "string"
									},
									"ratings": {
										"type": "object",
										"properties": {
											"asgRatings": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"assessmentPlanId": {
															"type": "string"
														},
														"title": {
															"type": "string"
														},
														"assessmentDate": {
															"type": "string"
														},
														"assessmentPlanStatus": {
															"type": "string"
														},
														"rating": {
															"type": "string"
														},
														"status": {
															"type": "string"
														},
														"narrative": {
															"type": "string"
														},
														"keyQuestionRatings": {
															"type": "array",
															"items": {
																"type": "object",
																"properties": {
																	"name": {
																		"type": "string"
																	},
																	"rating": {
																		"type": "string"
																	},
																	"status": {
																		"type": "string"
																	},
																	"narrative": {
																		"type": "string"
																	},
																	"percentageScore": {
																		"type": "string"
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CQC_ProviderList')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "CQC"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ProviderIDs.json",
						"folderPath": "providerlist",
						"container": "cqc"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"locationId": {
							"type": "string"
						},
						"providerId": {
							"type": "string"
						},
						"organisationType": {
							"type": "string"
						},
						"type": {
							"type": "string"
						},
						"name": {
							"type": "string"
						},
						"brandId": {
							"type": "string"
						},
						"brandName": {
							"type": "string"
						},
						"onspdCcgCode": {
							"type": "string"
						},
						"onspdCcgName": {
							"type": "string"
						},
						"onspdIcbCode": {
							"type": "string"
						},
						"onspdIcbName": {
							"type": "string"
						},
						"odsCode": {
							"type": "string"
						},
						"registrationStatus": {
							"type": "string"
						},
						"registrationDate": {
							"type": "string"
						},
						"dormancy": {
							"type": "string"
						},
						"onspdLatitude": {
							"type": "number"
						},
						"onspdLongitude": {
							"type": "number"
						},
						"careHome": {
							"type": "string"
						},
						"inspectionDirectorate": {
							"type": "string"
						},
						"postalAddressLine1": {
							"type": "string"
						},
						"postalAddressTownCity": {
							"type": "string"
						},
						"postalAddressCounty": {
							"type": "string"
						},
						"region": {
							"type": "string"
						},
						"postalCode": {
							"type": "string"
						},
						"uprn": {
							"type": "string"
						},
						"mainPhoneNumber": {
							"type": "string"
						},
						"registeredManagerAbsentDate": {
							"type": "string"
						},
						"website": {
							"type": "string"
						},
						"numberOfBeds": {
							"type": "integer"
						},
						"constituency": {
							"type": "string"
						},
						"localAuthority": {
							"type": "string"
						},
						"lastInspection": {
							"type": "object",
							"properties": {
								"date": {
									"type": "string"
								}
							}
						},
						"lastReport": {
							"type": "object",
							"properties": {
								"publicationDate": {
									"type": "string"
								}
							}
						},
						"relationships": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"relatedLocationId": {
										"type": "string"
									},
									"relatedLocationName": {
										"type": "string"
									},
									"type": {
										"type": "string"
									},
									"reason": {
										"type": "string"
									}
								}
							}
						},
						"locationTypes": {
							"type": "array"
						},
						"regulatedActivities": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string"
									},
									"code": {
										"type": "string"
									},
									"contacts": {
										"type": "array"
									}
								}
							}
						},
						"gacServiceTypes": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string"
									},
									"description": {
										"type": "string"
									}
								}
							}
						},
						"specialisms": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string"
									}
								}
							}
						},
						"inspectionCategories": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"code": {
										"type": "string"
									},
									"primary": {
										"type": "string"
									},
									"name": {
										"type": "string"
									}
								}
							}
						},
						"inspectionAreas": {
							"type": "array"
						},
						"historicRatings": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"reportDate": {
										"type": "string"
									},
									"reportLinkId": {
										"type": "string"
									},
									"overall": {
										"type": "object",
										"properties": {
											"rating": {
												"type": "string"
											},
											"keyQuestionRatings": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"name": {
															"type": "string"
														},
														"rating": {
															"type": "string"
														}
													}
												}
											}
										}
									}
								}
							}
						},
						"reports": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"linkId": {
										"type": "string"
									},
									"reportDate": {
										"type": "string"
									},
									"firstVisitDate": {
										"type": "string"
									},
									"reportUri": {
										"type": "string"
									},
									"reportType": {
										"type": "string"
									}
								}
							}
						},
						"assessmentServiceGroup": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"assessmentServiceId": {
										"type": "string"
									},
									"assessmentServiceName": {
										"type": "string"
									},
									"status": {
										"type": "string"
									}
								}
							}
						},
						"assessment": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"assessmentPlanPublishedDateTime": {
										"type": "string"
									},
									"ratings": {
										"type": "object",
										"properties": {
											"asgRatings": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"assessmentPlanId": {
															"type": "string"
														},
														"title": {
															"type": "string"
														},
														"assessmentDate": {
															"type": "string"
														},
														"assessmentPlanStatus": {
															"type": "string"
														},
														"name": {
															"type": "string"
														},
														"rating": {
															"type": "string"
														},
														"status": {
															"type": "string"
														},
														"commentary": {
															"type": "string"
														},
														"commentaryDate": {
															"type": "string"
														},
														"narrative": {
															"type": "string"
														},
														"overallPeopleExperience": {
															"type": "string"
														},
														"overallPeopleExperienceDate": {
															"type": "string"
														},
														"keyQuestionRatings": {
															"type": "array",
															"items": {
																"type": "object",
																"properties": {
																	"name": {
																		"type": "string"
																	},
																	"rating": {
																		"type": "string"
																	},
																	"status": {
																		"type": "string"
																	},
																	"commentary": {
																		"type": "string"
																	},
																	"commentaryDate": {
																		"type": "string"
																	},
																	"narrative": {
																		"type": "string"
																	},
																	"percentageScore": {
																		"type": "string"
																	},
																	"topicareas": {
																		"type": "array",
																		"items": {
																			"type": "object",
																			"properties": {
																				"name": {
																					"type": "string"
																				},
																				"qualityStatementId": {
																					"type": "string"
																				},
																				"status": {
																					"type": "string"
																				},
																				"evidenceCategory": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"properties": {
																							"evidenceCategoryId": {
																								"type": "string"
																							},
																							"commentary": {
																								"type": "string"
																							},
																							"commentaryDate": {
																								"type": "string"
																							}
																						}
																					}
																				},
																				"qualityStatementscore": {
																					"type": "string"
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CQC_locationresponses_file_Binary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileType": {
						"type": "string"
					}
				},
				"folder": {
					"name": "CQC"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@concat('locationresponses', '/', formatDateTime(utcNow(), 'yyyy'),'/',formatDateTime(utcNow(), 'MM'),'/',formatDateTime(utcNow(), 'dd'), '/', dataset().FileType)",
							"type": "Expression"
						},
						"container": "cqc"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CQC_providerresponses_file_Binary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileType": {
						"type": "string"
					}
				},
				"folder": {
					"name": "CQC"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@concat('providerresponses', '/', formatDateTime(utcNow(), 'yyyy'),'/',formatDateTime(utcNow(), 'MM'),'/',formatDateTime(utcNow(), 'dd'), '/', dataset().FileType)",
							"type": "Expression"
						},
						"container": "cqc"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CareBlox_Container')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Careblox"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "careblox"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CareBlox_Container_SubFolder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FolderName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Careblox"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().FolderName",
							"type": "Expression"
						},
						"container": "careblox"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CareBlox_FTP_Files')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CareBlox_FTP",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Careblox/FTP"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "FtpServerLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CareBlox_FTP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Exchequer_Excel_Budget2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "S:\\HeadOffice\\Dashboard\\LiveData\\Budget and actuals database uploader\\Budget Upload\\Source Files",
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Exchequer"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Budget 2 YE Dec",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Budget 2.xlsx",
						"container": "budget"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Exchequer_Excel_YE_Dec_Budget1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "File found on the s drive: S:\\HeadOffice\\Dashboard\\LiveData\\Budget and actuals database uploader\\Budget Upload\\Source Files",
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Exchequer"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Budget 1 YE Dec Formulas",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "YE Dec Budget 1.xlsx",
						"container": "budget"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Exchequer_Excel_YE_Mar_Budget1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "S:\\HeadOffice\\Dashboard\\LiveData\\Budget and actuals database uploader\\Budget Upload\\Source Files",
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Exchequer"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Budget 1 YE Mar Formulas",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "YE Mar Budget 1.xlsx",
						"container": "budget"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Fusion_Homes_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Fusion"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Homes Export.json",
						"container": "fusion"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"ServiceUser_ID": {
							"type": "integer"
						},
						"Home_ID": {
							"type": "integer"
						},
						"room_ID": {
							"type": "integer"
						},
						"CC_HID": {
							"type": "integer"
						},
						"CC_ClientID": {
							"type": "integer"
						},
						"Title": {
							"type": "string"
						},
						"Forename": {
							"type": "string"
						},
						"Surname": {
							"type": "string"
						},
						"DateOfBirth": {
							"type": "string"
						},
						"DateIn": {
							"type": "string"
						},
						"DateOut": {
							"type": "string"
						},
						"careCategory": {
							"type": "string"
						},
						"fundingType": {
							"type": "integer"
						},
						"fees": {
							"type": "number"
						},
						"deleted": {
							"type": "string"
						},
						"sex": {
							"type": "string"
						},
						"maritalStatus": {
							"type": "string"
						},
						"nationality": {
							"type": "string"
						},
						"ni_num": {
							"type": "string"
						},
						"NHS": {
							"type": "string"
						},
						"nhs_Expiry": {
							"type": "string"
						},
						"nickname": {
							"type": "string"
						},
						"status": {
							"type": "string"
						},
						"residencyType": {
							"type": "string"
						},
						"dependency": {
							"type": "integer"
						},
						"alertCode": {
							"type": "integer"
						},
						"admittedFrom": {
							"type": "string"
						},
						"admittedFrom_Ad1": {
							"type": "string"
						},
						"admittedFrom_Ad2": {
							"type": "string"
						},
						"admittedFrom_Ad3": {
							"type": "string"
						},
						"admittedFrom_Ad4": {
							"type": "string"
						},
						"admittedFrom_PC": {
							"type": "string"
						},
						"admittedFrom_Tel": {
							"type": "string"
						},
						"admissionCode": {
							"type": "string"
						},
						"ResContractSigned": {
							"type": "string"
						},
						"finalFundingDate": {
							"type": "string"
						},
						"dischargeCode": {
							"type": "string"
						},
						"dischargeLocation": {
							"type": "string"
						},
						"dateOfDeath": {
							"type": "string"
						},
						"timeOfDeath": {
							"type": "string"
						},
						"doctorName": {
							"type": "string"
						},
						"deathCause": {
							"type": "string"
						},
						"ceaseInvoicing": {
							"type": "string"
						},
						"eye_colour": {
							"type": "string"
						},
						"height_cm": {
							"type": "integer"
						},
						"height_m": {
							"type": "number"
						},
						"hair_colour": {
							"type": "string"
						},
						"hair_length": {
							"type": "string"
						},
						"eye_wear": {
							"type": "string"
						},
						"hearing_aid": {
							"type": "string"
						},
						"facial_hair": {
							"type": "string"
						},
						"occupation": {
							"type": "string"
						},
						"allergies": {
							"type": "string"
						},
						"important_information": {
							"type": "string"
						},
						"deathNotes": {
							"type": "string"
						},
						"ClientNumber": {
							"type": "string"
						},
						"ClientID": {
							"type": "string"
						},
						"su_med_history": {
							"type": "string"
						},
						"su_med_likes": {
							"type": "string"
						},
						"su_med_social": {
							"type": "string"
						},
						"su_med_allergies": {
							"type": "string"
						},
						"su_DL_requirements": {
							"type": "string"
						},
						"su_evac_notes": {
							"type": "string"
						},
						"care_hours": {
							"type": "integer"
						},
						"DNAR": {
							"type": "string"
						},
						"respectTEP": {
							"type": "string"
						},
						"respectTEP_date": {
							"type": "string"
						},
						"DOLS": {
							"type": "string"
						},
						"DOLSDate": {
							"type": "string"
						},
						"DOLSExpiry": {
							"type": "string"
						},
						"DOLSRenewal": {
							"type": "string"
						},
						"DNARExpiry": {
							"type": "string"
						},
						"EndOfLife": {
							"type": "string"
						},
						"DPLNumber": {
							"type": "string"
						},
						"Religion": {
							"type": "string"
						},
						"su_funeral_wishes": {
							"type": "string"
						},
						"admissionreason_notes": {
							"type": "string"
						},
						"KeyCareWorker": {
							"type": "string"
						},
						"KeyNurseWorker": {
							"type": "string"
						},
						"financial_notes": {
							"type": "string"
						},
						"hospital_num": {
							"type": "string"
						},
						"target_weight": {
							"type": "number"
						},
						"target_fluid": {
							"type": "number"
						},
						"gdpr_consent_sent": {
							"type": "string"
						},
						"gdpr_consent_received": {
							"type": "string"
						},
						"su_lang": {
							"type": "string"
						},
						"susexuality": {
							"type": "string"
						},
						"UseBedRails": {
							"type": "string"
						},
						"expectedRate": {
							"type": "number"
						},
						"expectedFundingType": {
							"type": "integer"
						},
						"adrt": {
							"type": "string"
						},
						"FNCAppliedFor": {
							"type": "string"
						},
						"TermsAndConditions": {
							"type": "string"
						},
						"ProofOfFunding": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Fusion_Json_File')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Filename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Fusion"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().Filename",
							"type": "Expression"
						},
						"container": "fusion"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Fusion_Resident')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Fusion"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Resident Export.csv",
						"container": "fusion"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ServiceUser_ID",
						"type": "String"
					},
					{
						"name": "Home_ID",
						"type": "String"
					},
					{
						"name": "room_ID",
						"type": "String"
					},
					{
						"name": "CC_HID",
						"type": "String"
					},
					{
						"name": "CC_ClientID",
						"type": "String"
					},
					{
						"name": "Title",
						"type": "String"
					},
					{
						"name": "Forename",
						"type": "String"
					},
					{
						"name": "Surname",
						"type": "String"
					},
					{
						"name": "DateOfBirth",
						"type": "String"
					},
					{
						"name": "DateIn",
						"type": "String"
					},
					{
						"name": "DateOut",
						"type": "String"
					},
					{
						"name": "careCategory",
						"type": "String"
					},
					{
						"name": "fundingType",
						"type": "String"
					},
					{
						"name": "fees",
						"type": "String"
					},
					{
						"name": "deleted",
						"type": "String"
					},
					{
						"name": "sex",
						"type": "String"
					},
					{
						"name": "maritalStatus",
						"type": "String"
					},
					{
						"name": "nationality",
						"type": "String"
					},
					{
						"name": "ni_num",
						"type": "String"
					},
					{
						"name": "NHS",
						"type": "String"
					},
					{
						"name": "nhs_Expiry",
						"type": "String"
					},
					{
						"name": "nickname",
						"type": "String"
					},
					{
						"name": "status",
						"type": "String"
					},
					{
						"name": "residencyType",
						"type": "String"
					},
					{
						"name": "dependency",
						"type": "String"
					},
					{
						"name": "alertCode",
						"type": "String"
					},
					{
						"name": "admittedFrom",
						"type": "String"
					},
					{
						"name": "admittedFrom_Ad1",
						"type": "String"
					},
					{
						"name": "admittedFrom_Ad2",
						"type": "String"
					},
					{
						"name": "admittedFrom_Ad3",
						"type": "String"
					},
					{
						"name": "admittedFrom_Ad4",
						"type": "String"
					},
					{
						"name": "admittedFrom_PC",
						"type": "String"
					},
					{
						"name": "admittedFrom_Tel",
						"type": "String"
					},
					{
						"name": "admissionCode",
						"type": "String"
					},
					{
						"name": "ResContractSigned",
						"type": "String"
					},
					{
						"name": "finalFundingDate",
						"type": "String"
					},
					{
						"name": "dischargeCode",
						"type": "String"
					},
					{
						"name": "dischargeLocation",
						"type": "String"
					},
					{
						"name": "dateOfDeath",
						"type": "String"
					},
					{
						"name": "timeOfDeath",
						"type": "String"
					},
					{
						"name": "doctorName",
						"type": "String"
					},
					{
						"name": "deathCause",
						"type": "String"
					},
					{
						"name": "ceaseInvoicing",
						"type": "String"
					},
					{
						"name": "eye_colour",
						"type": "String"
					},
					{
						"name": "height_cm",
						"type": "String"
					},
					{
						"name": "height_m",
						"type": "String"
					},
					{
						"name": "hair_colour",
						"type": "String"
					},
					{
						"name": "hair_length",
						"type": "String"
					},
					{
						"name": "eye_wear",
						"type": "String"
					},
					{
						"name": "hearing_aid",
						"type": "String"
					},
					{
						"name": "facial_hair",
						"type": "String"
					},
					{
						"name": "occupation",
						"type": "String"
					},
					{
						"name": "allergies",
						"type": "String"
					},
					{
						"name": "important_information",
						"type": "String"
					},
					{
						"name": "deathNotes",
						"type": "String"
					},
					{
						"name": "ClientNumber",
						"type": "String"
					},
					{
						"name": "ClientID",
						"type": "String"
					},
					{
						"name": "su_med_history",
						"type": "String"
					},
					{
						"name": "su_med_likes",
						"type": "String"
					},
					{
						"name": "su_med_social",
						"type": "String"
					},
					{
						"name": "su_med_allergies",
						"type": "String"
					},
					{
						"name": "su_DL_requirements",
						"type": "String"
					},
					{
						"name": "su_evac_notes",
						"type": "String"
					},
					{
						"name": "care_hours",
						"type": "String"
					},
					{
						"name": "DNAR",
						"type": "String"
					},
					{
						"name": "respectTEP",
						"type": "String"
					},
					{
						"name": "respectTEP_date",
						"type": "String"
					},
					{
						"name": "DOLS",
						"type": "String"
					},
					{
						"name": "DOLSDate",
						"type": "String"
					},
					{
						"name": "DOLSExpiry",
						"type": "String"
					},
					{
						"name": "DOLSRenewal",
						"type": "String"
					},
					{
						"name": "DNARExpiry",
						"type": "String"
					},
					{
						"name": "EndOfLife",
						"type": "String"
					},
					{
						"name": "DPLNumber",
						"type": "String"
					},
					{
						"name": "Religion",
						"type": "String"
					},
					{
						"name": "su_funeral_wishes",
						"type": "String"
					},
					{
						"name": "admissionreason_notes",
						"type": "String"
					},
					{
						"name": "KeyCareWorker",
						"type": "String"
					},
					{
						"name": "KeyNurseWorker",
						"type": "String"
					},
					{
						"name": "financial_notes",
						"type": "String"
					},
					{
						"name": "hospital_num",
						"type": "String"
					},
					{
						"name": "target_weight",
						"type": "String"
					},
					{
						"name": "target_fluid",
						"type": "String"
					},
					{
						"name": "gdpr_consent_sent",
						"type": "String"
					},
					{
						"name": "gdpr_consent_received",
						"type": "String"
					},
					{
						"name": "su_lang",
						"type": "String"
					},
					{
						"name": "susexuality",
						"type": "String"
					},
					{
						"name": "UseBedRails",
						"type": "String"
					},
					{
						"name": "expectedRate",
						"type": "String"
					},
					{
						"name": "expectedFundingType",
						"type": "String"
					},
					{
						"name": "adrt",
						"type": "String"
					},
					{
						"name": "FNCAppliedFor",
						"type": "String"
					},
					{
						"name": "TermsAndConditions",
						"type": "String"
					},
					{
						"name": "ProofOfFunding",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Fusion_Resident_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Fusion"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Resident Export.json",
						"container": "fusion"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"ServiceUser_ID": {
							"type": "integer"
						},
						"Home_ID": {
							"type": "integer"
						},
						"room_ID": {
							"type": "integer"
						},
						"CC_HID": {
							"type": "integer"
						},
						"CC_ClientID": {
							"type": "integer"
						},
						"Title": {
							"type": "string"
						},
						"Forename": {
							"type": "string"
						},
						"Surname": {
							"type": "string"
						},
						"DateOfBirth": {
							"type": "string"
						},
						"DateIn": {
							"type": "string"
						},
						"DateOut": {
							"type": "string"
						},
						"careCategory": {
							"type": "string"
						},
						"fundingType": {
							"type": "integer"
						},
						"fees": {
							"type": "number"
						},
						"deleted": {
							"type": "string"
						},
						"sex": {
							"type": "string"
						},
						"maritalStatus": {
							"type": "string"
						},
						"nationality": {
							"type": "string"
						},
						"ni_num": {
							"type": "string"
						},
						"NHS": {
							"type": "string"
						},
						"nhs_Expiry": {
							"type": "string"
						},
						"nickname": {
							"type": "string"
						},
						"status": {
							"type": "string"
						},
						"residencyType": {
							"type": "string"
						},
						"dependency": {
							"type": "integer"
						},
						"alertCode": {
							"type": "integer"
						},
						"admittedFrom": {
							"type": "string"
						},
						"admittedFrom_Ad1": {
							"type": "string"
						},
						"admittedFrom_Ad2": {
							"type": "string"
						},
						"admittedFrom_Ad3": {
							"type": "string"
						},
						"admittedFrom_Ad4": {
							"type": "string"
						},
						"admittedFrom_PC": {
							"type": "string"
						},
						"admittedFrom_Tel": {
							"type": "string"
						},
						"admissionCode": {
							"type": "string"
						},
						"ResContractSigned": {
							"type": "string"
						},
						"finalFundingDate": {
							"type": "string"
						},
						"dischargeCode": {
							"type": "string"
						},
						"dischargeLocation": {
							"type": "string"
						},
						"dateOfDeath": {
							"type": "string"
						},
						"timeOfDeath": {
							"type": "string"
						},
						"doctorName": {
							"type": "string"
						},
						"deathCause": {
							"type": "string"
						},
						"ceaseInvoicing": {
							"type": "string"
						},
						"eye_colour": {
							"type": "string"
						},
						"height_cm": {
							"type": "integer"
						},
						"height_m": {
							"type": "number"
						},
						"hair_colour": {
							"type": "string"
						},
						"hair_length": {
							"type": "string"
						},
						"eye_wear": {
							"type": "string"
						},
						"hearing_aid": {
							"type": "string"
						},
						"facial_hair": {
							"type": "string"
						},
						"occupation": {
							"type": "string"
						},
						"allergies": {
							"type": "string"
						},
						"important_information": {
							"type": "string"
						},
						"deathNotes": {
							"type": "string"
						},
						"ClientNumber": {
							"type": "string"
						},
						"ClientID": {
							"type": "string"
						},
						"su_med_history": {
							"type": "string"
						},
						"su_med_likes": {
							"type": "string"
						},
						"su_med_social": {
							"type": "string"
						},
						"su_med_allergies": {
							"type": "string"
						},
						"su_DL_requirements": {
							"type": "string"
						},
						"su_evac_notes": {
							"type": "string"
						},
						"care_hours": {
							"type": "integer"
						},
						"DNAR": {
							"type": "string"
						},
						"respectTEP": {
							"type": "string"
						},
						"respectTEP_date": {
							"type": "string"
						},
						"DOLS": {
							"type": "string"
						},
						"DOLSDate": {
							"type": "string"
						},
						"DOLSExpiry": {
							"type": "string"
						},
						"DOLSRenewal": {
							"type": "string"
						},
						"DNARExpiry": {
							"type": "string"
						},
						"EndOfLife": {
							"type": "string"
						},
						"DPLNumber": {
							"type": "string"
						},
						"Religion": {
							"type": "string"
						},
						"su_funeral_wishes": {
							"type": "string"
						},
						"admissionreason_notes": {
							"type": "string"
						},
						"KeyCareWorker": {
							"type": "string"
						},
						"KeyNurseWorker": {
							"type": "string"
						},
						"financial_notes": {
							"type": "string"
						},
						"hospital_num": {
							"type": "string"
						},
						"target_weight": {
							"type": "number"
						},
						"target_fluid": {
							"type": "number"
						},
						"gdpr_consent_sent": {
							"type": "string"
						},
						"gdpr_consent_received": {
							"type": "string"
						},
						"su_lang": {
							"type": "string"
						},
						"susexuality": {
							"type": "string"
						},
						"UseBedRails": {
							"type": "string"
						},
						"expectedRate": {
							"type": "number"
						},
						"expectedFundingType": {
							"type": "integer"
						},
						"adrt": {
							"type": "string"
						},
						"FNCAppliedFor": {
							"type": "string"
						},
						"TermsAndConditions": {
							"type": "string"
						},
						"ProofOfFunding": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Hydra_RadarFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "XMl file for Radar system. Combined values from fusion and Radar into a single file for Radar.",
				"linkedServiceName": {
					"referenceName": "Hydra_FTP",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Radar"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "FtpServerLocation",
						"fileName": "radar-output.xml"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Hydra_FTP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_MCM_Communities')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MCM API",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"APIKey": {
						"type": "string"
					},
					"Query": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MCM"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat(dataset().APIKey, '/', dataset().Query)",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MCM API')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_MCM_Data_Extract_CommunityId')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MCM_Data_Extract",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"MCM_endPoint": {
						"type": "string"
					},
					"MCM_api_key": {
						"type": "string"
					},
					"FunctionCode": {
						"type": "string"
					},
					"CommunityId": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MCM"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat('?code=',dataset().FunctionCode,'&MCM_endPoint=',dataset().MCM_endPoint, '&MCM_api_key=',dataset().MCM_api_key, '&communityId=', dataset().CommunityId)",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MCM_Data_Extract')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_MCM_Dummy_input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "DummyInputFile.txt",
						"container": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_MCM_Get_Generic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Dataset used to Get data from MCM API. Query (endpoint/report) is required as is a communityID",
				"linkedServiceName": {
					"referenceName": "MCM API",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"APIKey": {
						"type": "string"
					},
					"Query": {
						"type": "string"
					},
					"CommunityID": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MCM"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat(dataset().APIKey, '/', dataset().Query, '?communityID=', dataset().CommunityID)\n\n",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MCM API')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_MCM_Json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileType": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MCM"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@Concat(dataset().FileType, ' - ', formatDateTime(utcNow(), 'yyyy'),'-',formatDateTime(utcNow(), 'MM'),'-',formatDateTime(utcNow(), 'dd'), '.json')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(formatDateTime(utcNow(), 'yyyy'),'/',formatDateTime(utcNow(), 'MM'),'/',formatDateTime(utcNow(), 'dd') )",
							"type": "Expression"
						},
						"container": "mcm"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_MCM_textFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "MCM_API_v5.txt",
						"container": "mcm"
					},
					"columnDelimiter": "|",
					"rowDelimiter": "~",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_OnPrem_CH_GRG')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OnPrem_Coldharbour",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Schema": {
						"type": "string"
					},
					"Table": {
						"type": "string"
					}
				},
				"folder": {
					"name": "OnPrem"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().Table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OnPrem_Coldharbour')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_OnPrem_CH_IP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OnPrem_ColdHarbour_IP",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Schema": {
						"type": "string"
					},
					"Table": {
						"type": "string"
					}
				},
				"folder": {
					"name": "OnPrem"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().Table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OnPrem_ColdHarbour_IP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_OnPrem_Exchequer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OnPrem_Exchequer",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Schema": {
						"type": "string"
					},
					"Table": {
						"type": "string"
					}
				},
				"folder": {
					"name": "OnPrem"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().Table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OnPrem_Exchequer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PolestaStorageAcc_Fileshare_Json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageFileshare",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "FileShare"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureFileStorageLocation"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageFileshare')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PolestarStorageAcc_AEMS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Folder": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "AEMS"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Folder",
							"type": "Expression"
						},
						"container": "aems"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PolestarStorageAcc_Excel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Other"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Periods.xlsx",
						"container": "budget"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PolestarStorageAcc_Exchequer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Exchequer"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@formatDateTime(utcNow(), 'yyyy-MM-dd')",
							"type": "Expression"
						},
						"container": "exchequer"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PolestarStorageAcc_Exchequer_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Exchequer Company access report, CSV file stored in Storage account",
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Exchequer"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat('Exchequer$User$CompanyAccess$', utcNow('dd-MM-yyyy'),'.csv')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@formatDateTime(utcNow(), 'yyyy-MM-dd')",
							"type": "Expression"
						},
						"container": "exchequer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CompanyCode",
						"type": "String"
					},
					{
						"name": "CompanyName",
						"type": "String"
					},
					{
						"name": "UserID",
						"type": "String"
					},
					{
						"name": "UserName",
						"type": "String"
					},
					{
						"name": "ReportDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PolestarStorageAcc_Fileshare')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageFileshare",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "FileShare"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureFileStorageLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageFileshare')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PolestarStorageAcc_Fileshare_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageFileshare",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Filename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "FileShare"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureFileStorageLocation",
						"fileName": {
							"value": "@dataset().Filename",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageFileshare')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PolestarStorageAcc_Fileshare_Exchequer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "CSV file containing Exchequer companies and users with access to them.",
				"linkedServiceName": {
					"referenceName": "PolestarStorageFileshare",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Exchequer"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureFileStorageLocation",
						"fileName": {
							"value": "@concat('Exchequer$User$CompanyAccess$', utcNow('dd-MM-yyyy'),'.csv')",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageFileshare')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PolestarStorageAcc_Fileshare_Parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageFileshare",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "FileShare"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureFileStorageLocation"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageFileshare')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PolestarStorageAcc_Fileshare_radar_output_xml')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageFileshare",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "FileShare"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureFileStorageLocation",
						"fileName": {
							"value": "@concat('radar-output', ' - ', utcNow('yyyy-MM-dd'), '.xml')",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageFileshare')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PolestarStorageAcc_Other_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Other"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@utcNow('yyyy-MM-dd')",
							"type": "Expression"
						},
						"container": "other"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PolestarStorageAcc_Softworks')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Softworks"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(dataset().FileName,'.json')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@formatDateTime(utcNow(), 'yyyy-MM-dd')",
							"type": "Expression"
						},
						"container": "softworks"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PolestarStorageAcc_Softworks_RateSheets')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Softworks"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "RateSheets",
						"container": "softworks"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Employee Number",
						"type": "String"
					},
					{
						"name": "Employee Name",
						"type": "String"
					},
					{
						"name": "Contract Type",
						"type": "String"
					},
					{
						"name": "Contract Start Date",
						"type": "String"
					},
					{
						"name": "Contract End Date",
						"type": "String"
					},
					{
						"name": " External Reference ",
						"type": "String"
					},
					{
						"name": "Is Default",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_PolestarStorageAcc_careblox_Binary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Careblox/FTP"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@concat(formatDateTime(utcNow(), 'yyyy'),'/',formatDateTime(utcNow(), 'MM'),'/',formatDateTime(utcNow(), 'dd') )",
							"type": "Expression"
						},
						"container": "careblox"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Polestar_Storage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Generic"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Polestar_storage_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Generic"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Site_ref",
						"type": "String"
					},
					{
						"name": "HomeName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Polestar_storage_csv_NoQuotes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Generic"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "Site_ref",
						"type": "String"
					},
					{
						"name": "HomeName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Radar_AzureStorage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Date": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Radar"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat('radar-output', ' - ', dataset().Date, '.xml')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(formatDateTime(utcNow(), 'yyyy'),'/',formatDateTime(utcNow(), 'MM'),'/', formatDateTime(utcNow(), 'dd'))",
							"type": "Expression"
						},
						"container": "radar"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Softworks_2024RemaingHolidays')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Filename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Softworks"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().Filename",
							"type": "Expression"
						},
						"folderPath": "2024RemainingHoliday",
						"container": "softworks"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Number",
						"type": "String"
					},
					{
						"name": "Employee Name",
						"type": "String"
					},
					{
						"name": "Start Date",
						"type": "String"
					},
					{
						"name": "End Date",
						"type": "String"
					},
					{
						"name": "Hours Duration",
						"type": "String"
					},
					{
						"name": "Absence Type",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Softworks_API_Employees')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Softworks_API",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Softworks"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Softworks_API')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Sona_CB_RTW')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Sona"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Careblox RTW Report.xlsx",
						"container": "sona"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Sona_Ucheck_dataDump')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Sona"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "AVER3HO application data.csv",
						"container": "sona"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Reference",
						"type": "String"
					},
					{
						"name": "Sub Org Reference",
						"type": "String"
					},
					{
						"name": "Disclosure Body Reference",
						"type": "String"
					},
					{
						"name": "Forename",
						"type": "String"
					},
					{
						"name": "Middle Names",
						"type": "String"
					},
					{
						"name": "Surname",
						"type": "String"
					},
					{
						"name": "Email",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Date Of Birth",
						"type": "String"
					},
					{
						"name": "Current Address Line1",
						"type": "String"
					},
					{
						"name": "Current Address Line",
						"type": "String"
					},
					{
						"name": "Current Address Town",
						"type": "String"
					},
					{
						"name": "Current Address County",
						"type": "String"
					},
					{
						"name": "Current Address Postcode",
						"type": "String"
					},
					{
						"name": "Current Address Resident From",
						"type": "String"
					},
					{
						"name": "Current Address Resident To",
						"type": "String"
					},
					{
						"name": "Previous Addresses",
						"type": "String"
					},
					{
						"name": "Birth Town",
						"type": "String"
					},
					{
						"name": "Birth County",
						"type": "String"
					},
					{
						"name": "Birth Country",
						"type": "String"
					},
					{
						"name": "Birth Nationality",
						"type": "String"
					},
					{
						"name": "Nationality Change",
						"type": "String"
					},
					{
						"name": "New Nationality",
						"type": "String"
					},
					{
						"name": "Surname Change",
						"type": "String"
					},
					{
						"name": "Birth Surname",
						"type": "String"
					},
					{
						"name": "Birth Forename",
						"type": "String"
					},
					{
						"name": "Birth Surname To",
						"type": "String"
					},
					{
						"name": "Other Names",
						"type": "String"
					},
					{
						"name": "Disclosure Body",
						"type": "String"
					},
					{
						"name": "Level Of Check",
						"type": "String"
					},
					{
						"name": "Additional Checks",
						"type": "String"
					},
					{
						"name": "Submission Date",
						"type": "String"
					},
					{
						"name": "Passport Number",
						"type": "String"
					},
					{
						"name": "Driving Licence Number",
						"type": "String"
					},
					{
						"name": "Result",
						"type": "String"
					},
					{
						"name": "Result Issue Date",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Yardi_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Filename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Yardi"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().Filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(formatDateTime(utcNow(), 'yyyy'),'/',formatDateTime(utcNow(), 'MM'),'/',formatDateTime(utcNow(), 'dd') )",
							"type": "Expression"
						},
						"container": "yardi"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Yardi_Json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileType": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Yardi"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(dataset().FileType, ' - ', formatDateTime(utcNow(), 'yyyy'),'-',formatDateTime(utcNow(), 'MM'),'-',formatDateTime(utcNow(), 'dd'), '.json')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(formatDateTime(utcNow(), 'yyyy'),'/',formatDateTime(utcNow(), 'MM'),'/',formatDateTime(utcNow(), 'dd') )",
							"type": "Expression"
						},
						"container": "yardi"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_YourHippo_AllResults')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "YourHippo"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "AllResults_Page_1001-1500.json",
						"folderPath": "AllResults",
						"container": "yourhippo"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_YourHippo_Courses')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "YourHippo"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "AllCourses.json",
						"folderPath": "Courses",
						"container": "yourhippo"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"title": {
							"type": "string"
						},
						"published": {
							"type": "boolean"
						},
						"archived": {
							"type": "boolean"
						},
						"short_title": {
							"type": "string"
						},
						"tags": {
							"type": "array"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_YourHippo_EntityList')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "YourHippo"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "EntityList.json",
						"folderPath": "EntityList",
						"container": "yourhippo"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"name": {
							"type": "string"
						},
						"email": {
							"type": "string"
						},
						"entity_alt_name": {
							"type": "string"
						},
						"address": {
							"type": "string"
						},
						"starter_period": {
							"type": "integer"
						},
						"updated_at": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_YourHippo_Merged_Result_Exceptions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "YourHippo"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat('yh_merged_exceptions_results_', formatDateTime(utcNow(), 'yyyy'),'-',formatDateTime(utcNow(), 'MM'),'-',formatDateTime(utcNow(), 'dd'), '.json' )",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('mergedfiles', '/', formatDateTime(utcNow(), 'yyyy'),'/',formatDateTime(utcNow(), 'MM'),'/',formatDateTime(utcNow(), 'dd') )",
							"type": "Expression"
						},
						"container": "yourhippo"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"file_type": {
							"type": "string"
						},
						"id": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_YourHippo_Merged_results')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "YourHippo"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat('yh_merged_results_', formatDateTime(utcNow(), 'yyyy'),'-',formatDateTime(utcNow(), 'MM'),'-',formatDateTime(utcNow(), 'dd'), '.json' )",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('mergedfiles', '/', formatDateTime(utcNow(), 'yyyy'),'/',formatDateTime(utcNow(), 'MM'),'/',formatDateTime(utcNow(), 'dd') )",
							"type": "Expression"
						},
						"container": "yourhippo"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"results": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string"
									},
									"passed": {
										"type": "boolean"
									},
									"grade": {
										"type": "string"
									},
									"score": {
										"type": "integer"
									},
									"completed_at": {
										"type": "string"
									},
									"expires_at": {
										"type": "string"
									},
									"has_expired": {
										"type": "boolean"
									},
									"course": {
										"type": "object",
										"properties": {
											"id": {
												"type": "string"
											},
											"title": {
												"type": "string"
											}
										}
									},
									"user": {
										"type": "object",
										"properties": {
											"id": {
												"type": "string"
											},
											"name": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_YourHippo_Merged_users')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "YourHippo"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat('yh_merged_users_', formatDateTime(utcNow(), 'yyyy'),'-',formatDateTime(utcNow(), 'MM'),'-',formatDateTime(utcNow(), 'dd'), '.json' )",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('mergedfiles', '/', formatDateTime(utcNow(), 'yyyy'),'/',formatDateTime(utcNow(), 'MM'),'/',formatDateTime(utcNow(), 'dd') )",
							"type": "Expression"
						},
						"container": "yourhippo"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"results": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string"
									},
									"passed": {
										"type": "boolean"
									},
									"grade": {
										"type": "string"
									},
									"score": {
										"type": "integer"
									},
									"completed_at": {
										"type": "string"
									},
									"expires_at": {
										"type": "string"
									},
									"has_expired": {
										"type": "boolean"
									},
									"course": {
										"type": "object",
										"properties": {
											"id": {
												"type": "string"
											},
											"title": {
												"type": "string"
											}
										}
									},
									"user": {
										"type": "object",
										"properties": {
											"id": {
												"type": "string"
											},
											"name": {
												"type": "string"
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_YourHippo_Users')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "YourHippo"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "AllUsers.json",
						"folderPath": "Users",
						"container": "yourhippo"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"employee_number": {
							"type": "null"
						},
						"created_at": {
							"type": "string"
						},
						"start_date": {
							"type": "string"
						},
						"name": {
							"type": "string"
						},
						"email": {
							"type": "string"
						},
						"gender": {
							"type": "object",
							"properties": {
								"description": {
									"type": "string"
								}
							}
						},
						"job_title": {
							"type": "string"
						},
						"role": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								}
							}
						},
						"primaryEntity": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"name": {
									"type": "string"
								}
							}
						},
						"status": {
							"type": "null"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_YourHippo_WebHook_Files')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Folder": {
						"type": "string"
					}
				},
				"folder": {
					"name": "YourHippo"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@dataset().Folder",
							"type": "Expression"
						},
						"container": "yourhippo"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_YourHippo_WebHook_Json_Result_File')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "YourHippo"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "WebhookFiles/Result",
						"container": "yourhippo"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_YourHippo_WebHook_Json_User_File')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "YourHippo"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "WebhookFiles/User",
						"container": "yourhippo"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_YourHippo_WebHook_Route_Files')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "YourHippo"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "yourhippo"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_softworks_EmployeeHoliday')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Softworks"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "EmployeeHoliday",
						"container": "softworks"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Employee",
						"type": "String"
					},
					{
						"name": "EmployeeNumber",
						"type": "String"
					},
					{
						"name": "Start Date",
						"type": "String"
					},
					{
						"name": "End Date",
						"type": "String"
					},
					{
						"name": "Hours Duration",
						"type": "String"
					},
					{
						"name": "Absence Type",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Radar_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "radar-avery sql DB",
				"linkedServiceName": {
					"referenceName": "Radar_SQL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Schema": {
						"type": "string"
					},
					"Table": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Radar"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().Schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().Table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Radar_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AH1_Avery')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Avery DB on the AH1 server using the Avery user",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AH1_Avery_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AH2_Agency')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Agency DB on AH2",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AH2_Agency_properties_typeProperties_server')]",
					"database": "[parameters('AH2_Agency_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AH2_Agency_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AH2_Agency_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AH2_Avery')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Avery DB on AH2 Server",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AH2_Avery_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AH2_Capex')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AH2_Capex_properties_typeProperties_server')]",
					"database": "[parameters('AH2_Capex_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AH2_Capex_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AH2_Capex_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AH2_Polestar')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AH2_Polestar_properties_typeProperties_server')]",
					"database": "[parameters('AH2_Polestar_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AH2_Polestar_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AH2_Polestar_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AH2_TRANSFORM_DB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "The Transform_DB on AH2",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AH2_TRANSFORM_DB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AH2_YardiStage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AH2_YardiStage_properties_typeProperties_server')]",
					"database": "[parameters('AH2_YardiStage_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AH2_YardiStage_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AH2_YardiStage_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AveryArtisan_Artisan')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Asrtisan DB on AveryArtisan SQL server",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AveryArtisan_Artisan_properties_typeProperties_server')]",
					"database": "[parameters('AveryArtisan_Artisan_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AveryArtisan_Artisan_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AveryArtisan_Artisan_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Avery_ADF_KeyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('Avery_ADF_KeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AveryblobFileShare')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFileStorage",
				"typeProperties": {
					"connectionString": "[parameters('AveryblobFileShare_connectionString')]",
					"fileShare": "averyblobfileshare"
				},
				"connectVia": {
					"referenceName": "AveryVirtualNetworkIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AveryVirtualNetworkIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AveryblobStorageAccount')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AveryblobStorageAccount_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AveryVirtualNetworkIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AveryVirtualNetworkIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Broadshield Live API')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "API to Broadshield system for training and compliance data.",
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('Broadshield Live API_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CQC API')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('CQC API_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CareBlox_FTP')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "FTP directory hosted by Access group. Stores copies of SQL back up files for the CareBlox Payroll and Resolve database.",
				"annotations": [],
				"type": "FtpServer",
				"typeProperties": {
					"host": "[parameters('CareBlox_FTP_properties_typeProperties_host')]",
					"port": "5036",
					"enableSsl": true,
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('CareBlox_FTP_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('CareBlox_FTP_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Hydra_FTP')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Hydras FTP Server",
				"annotations": [],
				"type": "FtpServer",
				"typeProperties": {
					"host": "[parameters('Hydra_FTP_properties_typeProperties_host')]",
					"port": 21,
					"enableSsl": true,
					"enableServerCertificateValidation": false,
					"authenticationType": "Basic",
					"userName": "[parameters('Hydra_FTP_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Hydra_FTP_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MCM API')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "MCM's API ",
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('MCM API_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MCM_Data_Extract')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "An Azure function created to make calls to the MCM API",
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('MCM_Data_Extract_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Myrus_Careshield_UAT_API')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('Myrus_Careshield_UAT_API_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous",
					"authHeaders": {
						"Authorization": {
							"type": "SecureString",
							"value": "**********"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPrem_ColdHarbour_IP')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Cold Harbour Invoice processing DB",
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('OnPrem_ColdHarbour_IP_properties_typeProperties_server')]",
					"database": "[parameters('OnPrem_ColdHarbour_IP_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('OnPrem_ColdHarbour_IP_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('OnPrem_ColdHarbour_IP_password')]"
					}
				},
				"connectVia": {
					"referenceName": "AveryonPrem",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AveryonPrem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPrem_Coldharbour')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "On prem SQL Server hosting Cold Harbour GRG",
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('OnPrem_Coldharbour_properties_typeProperties_server')]",
					"database": "[parameters('OnPrem_Coldharbour_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('OnPrem_Coldharbour_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('OnPrem_Coldharbour_password')]"
					}
				},
				"connectVia": {
					"referenceName": "AveryonPrem",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AveryonPrem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPrem_Exchequer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('OnPrem_Exchequer_properties_typeProperties_server')]",
					"database": "[parameters('OnPrem_Exchequer_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('OnPrem_Exchequer_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('OnPrem_Exchequer_password')]"
					}
				},
				"connectVia": {
					"referenceName": "AveryonPrem",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AveryonPrem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PolestarStorageAcc')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('PolestarStorageAcc_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PolestarStorageFileshare')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFileStorage",
				"typeProperties": {
					"connectionString": "[parameters('PolestarStorageFileshare_connectionString')]",
					"fileShare": "polestar-storage-fileshare"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Radar_FTP')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FtpServer",
				"typeProperties": {
					"host": "[parameters('Radar_FTP_properties_typeProperties_host')]",
					"port": 21,
					"enableSsl": true,
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('Radar_FTP_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Radar_FTP_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Radar_SQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to Radar's integration server hosting Radar SQL DB",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('Radar_SQL_properties_typeProperties_server')]",
					"database": "[parameters('Radar_SQL_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('Radar_SQL_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Radar_SQL_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Softworks_API')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Softworks API",
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('Softworks_API_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('Softworks_API_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Softworks_API_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCH_EveryDay_1am')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_Radar_SQLTables",
							"type": "PipelineReference"
						},
						"parameters": {
							"DBItems": "[parameters('SCH_EveryDay_1am_properties_PL_Radar_SQLTables_parameters_DBItems')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2025-09-04T14:29:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								1
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_Radar_SQLTables')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCH_Fusion_MondayTransfer')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Runs the pipeline to move files from fusion to the file share so they can be loaded onto the VM",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_Fusion_Move_Files_To_VM",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2025-09-11T13:46:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								10
							],
							"hours": [
								6
							],
							"weekDays": [
								"Monday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_Fusion_Move_Files_To_VM')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCH_Weekly_Mon_6AM')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Once a week, Monday at 6am",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_ColdHarbour_Rooms",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2024-09-06T10:38:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								6
							],
							"weekDays": [
								"Monday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_ColdHarbour_Rooms')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sch_EveryDay_10-45pm')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_YourHippo_Move_WebHook_Files_Step2",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2025-04-04T09:20:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								45
							],
							"hours": [
								22
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_YourHippo_Move_WebHook_Files_Step2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sch_EveryDay_10pm')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_YourHippo_Move_WebHook_Files_Step1",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2025-04-04T09:19:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								22
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_YourHippo_Move_WebHook_Files_Step1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sch_EveryDay_11pm')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_YourHippo_Process_Merged_Files",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2025-04-04T09:22:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								23
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_YourHippo_Process_Merged_Files')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sch_EveryDay_AfterMidnight')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Runs everyday just after midnight (00:05)",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_Hydra_Output_File",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-12-17T15:55:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								10
							],
							"hours": [
								0
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_Hydra_Output_File')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sch_EveryDay_Every30Min')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2025-03-07T06:00:00",
						"endTime": "2025-04-02T17:30:02",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								9,
								10,
								11,
								12,
								13,
								14,
								15,
								16,
								17
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sch_EveryDay_Once_1-30am')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Every day at 1:30 AM",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-04-09T11:51:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								1
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sch_EveryDay_Once_10-15pm')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Scheduled to trigger once at 10:15pm, Everyday",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_AEMS_BackupToAveryTables",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2024-05-30T11:15:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								15
							],
							"hours": [
								22
							],
							"weekDays": [
								"Sunday",
								"Monday",
								"Tuesday",
								"Wednesday",
								"Thursday",
								"Friday",
								"Saturday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_AEMS_BackupToAveryTables')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sch_EveryDay_Once_11-45pm')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-10-02T16:09:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								45
							],
							"hours": [
								23
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sch_EveryDay_Once_2am')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Every day at 2am",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_CareBlox_Download",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "PL_YourHIppo_UniqueResults",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-03-12T16:04:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								2
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_CareBlox_Download')]",
				"[concat(variables('factoryId'), '/pipelines/PL_YourHIppo_UniqueResults')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sch_EveryDay_Once_3am')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Every day at 3am",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-04-05T11:03:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								3
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sch_EveryDay_Once_530am')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2025-06-24T08:45:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								5
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sch_EveryDay_Once_5am')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_GRG_Refresh_TRANSFORM",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "PL_AEMS_Post_Transfer_DuplicateClear",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "PL_CareBlox_Data_Load",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-03-19T14:52:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								5
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_GRG_Refresh_TRANSFORM')]",
				"[concat(variables('factoryId'), '/pipelines/PL_AEMS_Post_Transfer_DuplicateClear')]",
				"[concat(variables('factoryId'), '/pipelines/PL_CareBlox_Data_Load')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sch_MTWTF_6AM')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Every week day at 6 AM",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_Pricing",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2024-10-10T09:34:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								6
							],
							"weekDays": [
								"Monday",
								"Tuesday",
								"Wednesday",
								"Thursday",
								"Friday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_Pricing')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sch_MTWTF_Once_10pm')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Scheduled to trigger once at 10pm, on Mon, Tue, Wed, Thu, Fri",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_Homes",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "PL_SalariedStaff",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "PL_Agency_HomeName",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "PL_Pricing_CreateOrAlter_Views",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "PL_Avery_RLS_TRANSFORM",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "PL_Agency_WAC",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2024-03-05T21:55:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								22
							],
							"weekDays": [
								"Monday",
								"Tuesday",
								"Wednesday",
								"Thursday",
								"Friday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_Homes')]",
				"[concat(variables('factoryId'), '/pipelines/PL_SalariedStaff')]",
				"[concat(variables('factoryId'), '/pipelines/PL_Agency_HomeName')]",
				"[concat(variables('factoryId'), '/pipelines/PL_Pricing_CreateOrAlter_Views')]",
				"[concat(variables('factoryId'), '/pipelines/PL_Avery_RLS_TRANSFORM')]",
				"[concat(variables('factoryId'), '/pipelines/PL_Agency_WAC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sch_MTWTF_Once_9pm')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Every M, T, W, T, F at 9pm",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_Artisan",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "PL_CH_Residents",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "PL_CH_TransactionData",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2024-07-02T10:32:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								21
							],
							"weekDays": [
								"Monday",
								"Tuesday",
								"Wednesday",
								"Thursday",
								"Friday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_Artisan')]",
				"[concat(variables('factoryId'), '/pipelines/PL_CH_Residents')]",
				"[concat(variables('factoryId'), '/pipelines/PL_CH_TransactionData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sch_Monthly_Once_1st_4am')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Once a Month on the 1st",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_CQC_Required_Files",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "PL_CH_Snapshot",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 1,
						"startTime": "2024-10-25T09:23:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								4
							],
							"monthDays": [
								1
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_CQC_Required_Files')]",
				"[concat(variables('factoryId'), '/pipelines/PL_CH_Snapshot')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sch_Monthly_Once_1st_5am')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Once a month on the 1st at 5am",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_CQC_Proces_API_Results",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 1,
						"startTime": "2024-10-25T09:24:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								5
							],
							"monthDays": [
								1
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_CQC_Proces_API_Results')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sch_Monthly_Once_27th')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Executes at 19:45 on the 27th of each Month for the Exchequer Company Access audit report.",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_Exchequer_CompanyAccessAudit",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 1,
						"startTime": "2024-06-27T14:25:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								45
							],
							"hours": [
								19
							],
							"monthDays": [
								27
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_Exchequer_CompanyAccessAudit')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AveryVirtualNetworkIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"description": "Integration runtime to Avery's virtual network",
				"typeProperties": {
					"computeProperties": {
						"location": "UK South",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false,
							"customProperties": []
						},
						"pipelineExternalComputeScaleProperties": {
							"timeToLive": 60,
							"numberOfPipelineNodes": 1,
							"numberOfExternalNodes": 1
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AveryonPrem')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "Runtime for on prem servers at Avery. Installed on 10.0.4.5",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_SoftWorks_JSON_Employee')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_AH2_TRANSFORM_DB_SoftWorks_Employee_JSON",
								"type": "DatasetReference"
							},
							"name": "EmployeeJSONTable"
						},
						{
							"dataset": {
								"referenceName": "DS_AH2_TRANSFORM_DB_SoftWorks_Clockings_JSON",
								"type": "DatasetReference"
							},
							"name": "ClockingsJSONTable"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_AH2_TRANSFORM_DB_SoftWorks_Employee",
								"type": "DatasetReference"
							},
							"name": "EmployeeTable"
						},
						{
							"dataset": {
								"referenceName": "DS_AH2_TRANSFORM_DB_SoftWorks_Clockings",
								"type": "DatasetReference"
							},
							"name": "ClockingsTable"
						}
					],
					"transformations": [
						{
							"name": "EmployeeDateConversion"
						},
						{
							"name": "EmployeeUpsertCondition",
							"description": "Upsert condition set to always be true so all fields are updated with latest values and any new records are inserted. The Key column used to check for upsert is the EmployeeNumber and is set on the sink task and "
						},
						{
							"name": "ClockingsDateConversion"
						},
						{
							"name": "ClockingsUpsertCondition"
						}
					],
					"scriptLines": [
						"source(output(",
						"          department as string,",
						"          clockNumber as string,",
						"          clocking as string,",
						"          dateOfBirth as string,",
						"          dateStarted as string,",
						"          dateTerminated as string,",
						"          firstname as string,",
						"          surname as string,",
						"          employeeName as string,",
						"          employeeNumber as string,",
						"          employeeEmail as string,",
						"          employeeStatus as string,",
						"          salary as string,",
						"          roster as string,",
						"          hourlyRate as string,",
						"          payType as string,",
						"          payNumber as string,",
						"          masterPolicy as string,",
						"          supervisorName as string,",
						"          employeeCostCentre as string,",
						"          allocationGroup as string,",
						"          shiftlessPattern as string,",
						"          defaultBalanceCategory as string,",
						"          employeeGender as string,",
						"          healthcareBankGroup as string,",
						"          healthcareBankStatus as string,",
						"          selfRosteringGroup as string,",
						"          nextofKinContact as string,",
						"          {nextofKinTel.Number} as string,",
						"          nextofKinRelationship as string,",
						"          telephoneNo as string,",
						"          username as string,",
						"          nameAsSupervisor as string,",
						"          address1 as string,",
						"          address2 as string,",
						"          address3 as string,",
						"          address4 as string,",
						"          postcode as string,",
						"          nINumber as string,",
						"          accountName as string,",
						"          sortCode as string,",
						"          accountNumber as string,",
						"          item as string,",
						"          notes as string,",
						"          documentReference as string,",
						"          documentName as string,",
						"          jobTitle as string,",
						"          sickLeaveEntitlement as string,",
						"          holidayEntitlement as string,",
						"          modeofTransport as string,",
						"          homeLegalName as string,",
						"          reviewDate as string,",
						"          isSupervisor as string,",
						"          salaried as string,",
						"          costCentre as string,",
						"          deptExportCode as string,",
						"          deptImportCode as string,",
						"          comments as string,",
						"          softworksID as string,",
						"          SourceFileName as string,",
						"          RowID as integer",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> EmployeeJSONTable",
						"source(output(",
						"          empNo as string,",
						"          clockId as string,",
						"          absId as string,",
						"          deptId as string,",
						"          jobId as string,",
						"          projId as string,",
						"          absoluteClockTime as string,",
						"          clockType as string,",
						"          clocDate as string,",
						"          clockTime as string,",
						"          seconds as string,",
						"          effectiveDate as string,",
						"          clockDuration as string,",
						"          application as string,",
						"          sourceType as long,",
						"          sourceData as string,",
						"          sourceEdit as string,",
						"          sourceClockingType as string,",
						"          longitude as string,",
						"          latitude as string,",
						"          accuracy as string,",
						"          decision as string,",
						"          delCode as string,",
						"          userId as string,",
						"          dateEntered as string,",
						"          deleted as string,",
						"          duplicate as string,",
						"          ignore as string,",
						"          inOut as string,",
						"          inClocking as string,",
						"          outClocking as string,",
						"          isActive as string,",
						"          new as string,",
						"          standard as string,",
						"          overtime as string,",
						"          callIn as string,",
						"          clockFlag as string,",
						"          edited as string,",
						"          calcInsert as string,",
						"          infringe as string,",
						"          previous as string,",
						"          problem as string,",
						"          twUser as string,",
						"          shiftMove as string,",
						"          showFlags as string,",
						"          showLongFlags as string,",
						"          isOverMidnight as string,",
						"          deviceTime as long,",
						"          TimeZone as string,",
						"          TimeZoneCod as long,",
						"          PrevAbsTime as long,",
						"          ReasonId as string,",
						"          Comments as string,",
						"          ApprovalState as string,",
						"          ApprovalStateCaption as string,",
						"          PrevApprovalState as string,",
						"          LocationText as string,",
						"          LocationEditText as string,",
						"          LocationTextExtended as string,",
						"          Offline as string,",
						"          AttachedDocumentId as string,",
						"          AssumedId as string,",
						"          SourceFileName as string,",
						"          RowID as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> ClockingsJSONTable",
						"EmployeeJSONTable derive(dateOfBirth = substring(dateOfBirth, 5, 4) + '-' + substring(dateOfBirth, 3, 2) + '-' + substring(dateOfBirth, 1, 2),",
						"          dateStarted = case(substring(dateStarted, 5, 2) > substring(toString(year(currentUTC())), 3, 2), '19' + substring(dateStarted, 5, 2) + '-' + substring(dateStarted, 3, 2) + '-' + substring(dateStarted, 1, 2), '20' + substring(dateStarted, 5, 2) + '-' + substring(dateStarted, 3, 2) + '-' + substring(dateStarted, 1, 2)),",
						"          dateTerminated = case(dateTerminated=='301299', '2099-12-30', '20' + substring(dateTerminated, 5, 2) + '-' + substring(dateTerminated, 3, 2) + '-' + substring(dateTerminated, 1, 2)),",
						"          reviewDate = case(reviewDate == '', '1900-01-01', substring(reviewDate, 5, 4) + '-' + substring(reviewDate, 3, 2) + '-' + substring(reviewDate, 1, 2)),",
						"          RowTimeStamp = currentUTC()) ~> EmployeeDateConversion",
						"EmployeeDateConversion alterRow(upsertIf(true())) ~> EmployeeUpsertCondition",
						"ClockingsJSONTable derive(ClockDateCon = substring(clocDate, 5, 4) + '-' + substring(clocDate, 3, 2) + '-' + substring(clocDate, 1, 2),",
						"          EffectiveDateCon = substring(effectiveDate, 5, 4) + '-' + substring(effectiveDate, 3, 2) + '-' + substring(effectiveDate, 1, 2),",
						"          DateEnteredCon = substring(dateEntered, 5, 4) + '-' + substring(dateEntered, 3, 2) + '-' + substring(dateEntered, 1, 2),",
						"          ClockTimeCon = toTimestamp(clockTime, 'HH:mm')) ~> ClockingsDateConversion",
						"ClockingsDateConversion alterRow(upsertIf(true())) ~> ClockingsUpsertCondition",
						"EmployeeUpsertCondition sink(allowSchemaDrift: false,",
						"     validateSchema: false,",
						"     input(",
						"          Department as string,",
						"          ClockNumber as string,",
						"          Clocking as string,",
						"          DateOfBirth as date,",
						"          DateStarted as date,",
						"          DateTerminated as date,",
						"          Firstname as string,",
						"          Surname as string,",
						"          EmployeeName as string,",
						"          EmployeeNumber as string,",
						"          EmployeeEmail as string,",
						"          EmployeeStatus as string,",
						"          Salary as string,",
						"          Roster as string,",
						"          HourlyRate as decimal(8,2),",
						"          PayType as string,",
						"          PayNumber as string,",
						"          MasterPolicy as string,",
						"          SupervisorName as string,",
						"          EmployeeCostCentre as string,",
						"          AllocationGroup as string,",
						"          ShiftlessPattern as string,",
						"          DefaultBalanceCategory as string,",
						"          EmployeeGender as string,",
						"          HealthcareBankGroup as string,",
						"          HealthcareBankStatus as string,",
						"          SelfRosteringGroup as string,",
						"          NextofKinContact as string,",
						"          NextofKinTelNumber as string,",
						"          NextofKinRelationship as string,",
						"          TelephoneNo as string,",
						"          Username as string,",
						"          NameAsSupervisor as string,",
						"          Address1 as string,",
						"          Address2 as string,",
						"          Address3 as string,",
						"          Address4 as string,",
						"          Postcode as string,",
						"          NINumber as string,",
						"          AccountName as string,",
						"          SortCode as string,",
						"          AccountNumber as string,",
						"          Item as string,",
						"          Notes as string,",
						"          DocumentReference as string,",
						"          DocumentName as string,",
						"          JobTitle as string,",
						"          SickLeaveEntitlement as string,",
						"          HolidayEntitlement as string,",
						"          ModeofTransport as string,",
						"          HomeLegalName as string,",
						"          ReviewDate as date,",
						"          IsSupervisor as boolean,",
						"          Salaried as boolean,",
						"          CostCentre as string,",
						"          DeptExportCode as string,",
						"          DeptImportCode as string,",
						"          Comments as string,",
						"          SoftworksID as string,",
						"          SourceFileName as string,",
						"          RowTimeStamp as timestamp,",
						"          RowID as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['EmployeeNumber'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Department = department,",
						"          ClockNumber = clockNumber,",
						"          Clocking = clocking,",
						"          DateOfBirth = dateOfBirth,",
						"          DateStarted = dateStarted,",
						"          DateTerminated = dateTerminated,",
						"          Firstname = firstname,",
						"          Surname = surname,",
						"          EmployeeName = employeeName,",
						"          EmployeeNumber = employeeNumber,",
						"          EmployeeEmail = employeeEmail,",
						"          EmployeeStatus = employeeStatus,",
						"          Salary = salary,",
						"          Roster = roster,",
						"          HourlyRate = hourlyRate,",
						"          PayType = payType,",
						"          PayNumber = payNumber,",
						"          MasterPolicy = masterPolicy,",
						"          SupervisorName = supervisorName,",
						"          EmployeeCostCentre = employeeCostCentre,",
						"          AllocationGroup = allocationGroup,",
						"          ShiftlessPattern = shiftlessPattern,",
						"          DefaultBalanceCategory = defaultBalanceCategory,",
						"          EmployeeGender = employeeGender,",
						"          HealthcareBankGroup = healthcareBankGroup,",
						"          HealthcareBankStatus = healthcareBankStatus,",
						"          SelfRosteringGroup = selfRosteringGroup,",
						"          NextofKinContact = nextofKinContact,",
						"          NextofKinTelNumber = {nextofKinTel.Number},",
						"          NextofKinRelationship = nextofKinRelationship,",
						"          TelephoneNo = telephoneNo,",
						"          Username = username,",
						"          NameAsSupervisor = nameAsSupervisor,",
						"          Address1 = address1,",
						"          Address2 = address2,",
						"          Address3 = address3,",
						"          Address4 = address4,",
						"          Postcode = postcode,",
						"          NINumber = nINumber,",
						"          AccountName = accountName,",
						"          SortCode = sortCode,",
						"          AccountNumber = accountNumber,",
						"          Item = item,",
						"          Notes = notes,",
						"          DocumentReference = documentReference,",
						"          DocumentName = documentName,",
						"          JobTitle = jobTitle,",
						"          SickLeaveEntitlement = sickLeaveEntitlement,",
						"          HolidayEntitlement = holidayEntitlement,",
						"          ModeofTransport = modeofTransport,",
						"          HomeLegalName = homeLegalName,",
						"          ReviewDate = reviewDate,",
						"          IsSupervisor = isSupervisor,",
						"          Salaried = salaried,",
						"          CostCentre = costCentre,",
						"          DeptExportCode = deptExportCode,",
						"          DeptImportCode = deptImportCode,",
						"          Comments = comments,",
						"          SoftworksID = softworksID,",
						"          SourceFileName,",
						"          RowTimeStamp",
						"     )) ~> EmployeeTable",
						"ClockingsUpsertCondition sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          EmpNo as integer,",
						"          ClockId as string,",
						"          AbsId as string,",
						"          DeptId as string,",
						"          JobId as string,",
						"          ProjId as string,",
						"          AbsoluteClockTime as string,",
						"          ClockType as string,",
						"          ClockDate as date,",
						"          ClockTime as timestamp,",
						"          Seconds as string,",
						"          EffectiveDate as date,",
						"          ClockDuration as string,",
						"          Application as string,",
						"          SourceType as long,",
						"          SourceData as string,",
						"          SourceEdit as string,",
						"          SourceClockingType as string,",
						"          Longitude as string,",
						"          Latitude as string,",
						"          Accuracy as string,",
						"          Decision as string,",
						"          DelCode as string,",
						"          UserId as string,",
						"          DateEntered as date,",
						"          Deleted as string,",
						"          Duplicate as string,",
						"          Ignore as string,",
						"          InOut as string,",
						"          InClocking as string,",
						"          OutClocking as string,",
						"          IsActive as string,",
						"          New as string,",
						"          Standard as string,",
						"          Overtime as string,",
						"          CallIn as string,",
						"          ClockFlag as string,",
						"          Edited as string,",
						"          CalcInsert as string,",
						"          Infringe as string,",
						"          Previous as string,",
						"          Problem as string,",
						"          TwUser as string,",
						"          ShiftMove as string,",
						"          ShowFlags as string,",
						"          ShowLongFlags as string,",
						"          IsOverMidnight as string,",
						"          DeviceTime as long,",
						"          TimeZone as string,",
						"          TimeZoneCod as long,",
						"          PrevAbsTime as long,",
						"          ReasonId as string,",
						"          Comments as string,",
						"          ApprovalState as string,",
						"          ApprovalStateCaption as string,",
						"          PrevApprovalState as string,",
						"          LocationText as string,",
						"          LocationEditText as string,",
						"          LocationTextExtended as string,",
						"          Offline as string,",
						"          AttachedDocumentId as string,",
						"          AssumedId as string,",
						"          SourceFileName as string,",
						"          RowID as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['EmpNo','ClockId','AbsId','JobId','AbsoluteClockTime'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          EmpNo = empNo,",
						"          ClockId = clockId,",
						"          AbsId = absId,",
						"          DeptId = deptId,",
						"          JobId = jobId,",
						"          ProjId = projId,",
						"          AbsoluteClockTime = absoluteClockTime,",
						"          ClockType = clockType,",
						"          ClockDate = ClockDateCon,",
						"          ClockTime = ClockTimeCon,",
						"          Seconds = seconds,",
						"          EffectiveDate = EffectiveDateCon,",
						"          ClockDuration = clockDuration,",
						"          Application = application,",
						"          SourceType = sourceType,",
						"          SourceData = sourceData,",
						"          SourceEdit = sourceEdit,",
						"          SourceClockingType = sourceClockingType,",
						"          Longitude = longitude,",
						"          Latitude = latitude,",
						"          Accuracy = accuracy,",
						"          Decision = decision,",
						"          DelCode = delCode,",
						"          UserId = userId,",
						"          DateEntered = DateEnteredCon,",
						"          Deleted = deleted,",
						"          Duplicate = duplicate,",
						"          Ignore = ignore,",
						"          InOut = inOut,",
						"          InClocking = inClocking,",
						"          OutClocking = outClocking,",
						"          IsActive = isActive,",
						"          New = new,",
						"          Standard = standard,",
						"          Overtime = overtime,",
						"          CallIn = callIn,",
						"          ClockFlag = clockFlag,",
						"          Edited = edited,",
						"          CalcInsert = calcInsert,",
						"          Infringe = infringe,",
						"          Previous = previous,",
						"          Problem = problem,",
						"          TwUser = twUser,",
						"          ShiftMove = shiftMove,",
						"          ShowFlags = showFlags,",
						"          ShowLongFlags = showLongFlags,",
						"          IsOverMidnight = isOverMidnight,",
						"          DeviceTime = deviceTime,",
						"          TimeZone,",
						"          TimeZoneCod,",
						"          PrevAbsTime,",
						"          ReasonId,",
						"          Comments,",
						"          ApprovalState,",
						"          ApprovalStateCaption,",
						"          PrevApprovalState,",
						"          LocationText,",
						"          LocationEditText,",
						"          LocationTextExtended,",
						"          Offline,",
						"          AttachedDocumentId,",
						"          AssumedId,",
						"          SourceFileName",
						"     )) ~> ClockingsTable"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB_SoftWorks_Employee_JSON')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB_SoftWorks_Clockings_JSON')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB_SoftWorks_Employee')]",
				"[concat(variables('factoryId'), '/datasets/DS_AH2_TRANSFORM_DB_SoftWorks_Clockings')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AveryAzureBlobFileSharePrivateEndPoint')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AveryAzureBlobFileSharePrivateEndPoint_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AveryAzureBlobFileSharePrivateEndPoint_properties_groupId')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AveryAzureBlobStorageAccountPrivateEndPoint')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AveryAzureBlobStorageAccountPrivateEndPoint_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AveryAzureBlobStorageAccountPrivateEndPoint_properties_groupId')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Sona_Avery_Immigration_file')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Sona"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Current Skilled Workers",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Rolling Immigration Data.xlsx",
						"container": "sona"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Sona_Verifile_RTW_Data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PolestarStorageAcc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Sona"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Verifile - Avery_RTW_Expiry_Date.csv",
						"container": "sona"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Reference",
						"type": "String"
					},
					{
						"name": "Sub Org Reference",
						"type": "String"
					},
					{
						"name": "Disclosure Body Reference",
						"type": "String"
					},
					{
						"name": "Forename",
						"type": "String"
					},
					{
						"name": "Middle Names",
						"type": "String"
					},
					{
						"name": "Surname",
						"type": "String"
					},
					{
						"name": "Email",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Date Of Birth",
						"type": "String"
					},
					{
						"name": "Current Address Line1",
						"type": "String"
					},
					{
						"name": "Current Address Line",
						"type": "String"
					},
					{
						"name": "Current Address Town",
						"type": "String"
					},
					{
						"name": "Current Address County",
						"type": "String"
					},
					{
						"name": "Current Address Postcode",
						"type": "String"
					},
					{
						"name": "Current Address Resident From",
						"type": "String"
					},
					{
						"name": "Current Address Resident To",
						"type": "String"
					},
					{
						"name": "Previous Addresses",
						"type": "String"
					},
					{
						"name": "Birth Town",
						"type": "String"
					},
					{
						"name": "Birth County",
						"type": "String"
					},
					{
						"name": "Birth Country",
						"type": "String"
					},
					{
						"name": "Birth Nationality",
						"type": "String"
					},
					{
						"name": "Nationality Change",
						"type": "String"
					},
					{
						"name": "New Nationality",
						"type": "String"
					},
					{
						"name": "Surname Change",
						"type": "String"
					},
					{
						"name": "Birth Surname",
						"type": "String"
					},
					{
						"name": "Birth Forename",
						"type": "String"
					},
					{
						"name": "Birth Surname To",
						"type": "String"
					},
					{
						"name": "Other Names",
						"type": "String"
					},
					{
						"name": "Disclosure Body",
						"type": "String"
					},
					{
						"name": "Level Of Check",
						"type": "String"
					},
					{
						"name": "Additional Checks",
						"type": "String"
					},
					{
						"name": "Submission Date",
						"type": "String"
					},
					{
						"name": "Passport Number",
						"type": "String"
					},
					{
						"name": "Driving Licence Number",
						"type": "String"
					},
					{
						"name": "Result",
						"type": "String"
					},
					{
						"name": "Result Issue Date",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PolestarStorageAcc')]"
			]
		}
	]
}