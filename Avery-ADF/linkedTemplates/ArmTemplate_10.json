{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Avery-ADF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_GRG_Residents')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy GRG Resident data",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ADANAL_DEC",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ADANAL_DEC",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ADDRESS1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDRESS1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDRESS2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS3",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDRESS3",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS4",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDRESS4",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADMSN_ANAL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADMSN_ANAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADMSN_TYPE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADMSN_TYPE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADM_REASON",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADM_REASON",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADTYP_DEC",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ADTYP_DEC",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ANAL_GROUP",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ANAL_GROUP",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AUTHORITY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AUTHORITY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AmendDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "AmendDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "BIRTHDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "BIRTHDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CARECAT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CARECAT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CONTSIGNED",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CONTSIGNED",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "CreateDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreateDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DISABILITY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DISABILITY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ENQ_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ENQ_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "HOME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HOME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LASTADDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "LASTADDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "LASTDIDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "LASTDIDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "LOC_DESC",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LOC_DESC",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LOC_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LOC_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "MARKETING",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MARKETING",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "NINUMBER",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "NINUMBER",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "OCC_IGNORE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "OCC_IGNORE",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "ORES_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ORES_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ORIGADDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ORIGADDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "POSTCODE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "POSTCODE",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "RELIGION",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RELIGION",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RESPAYINT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RESPAYINT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RES_CODE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "RES_CODE",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "RES_FNAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RES_FNAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RES_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RES_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RES_SNAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RES_SNAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ROOM",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ROOM",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "ROOMCAT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ROOMCAT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ROOM_DESC",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ROOM_DESC",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ROOM_TYPE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ROOM_TYPE",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "SEX",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "SEX",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "STATUS",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "STATUS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TEL_NO1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TEL_NO1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TEL_NO2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TEL_NO2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TITLE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TITLE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "USERDEF",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "USERDEF",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AUTHCODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AUTHCODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DOUBLEINS",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DOUBLEINS",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "FIRSTAWARE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "FIRSTAWARE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "FIRSTVISIT",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "FIRSTVISIT",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "REAL_FNAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "REAL_FNAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "REAL_SNAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "REAL_SNAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "REAL_TITLE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "REAL_TITLE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SIGIND",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "SIGIND",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "THIRDPARTY",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "THIRDPARTY",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "USERFIELD1",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "USERFIELD1",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "USERFIELD2",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "USERFIELD2",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "USERFIELD3",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "USERFIELD3",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "NHSNUMBER",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "NHSNUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ALTCOMMS",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ALTCOMMS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ALTCOMMS_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ALTCOMMS_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ASS_ACTBY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ASS_ACTBY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ASS_ACTBY_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ASS_ACTBY_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ASS_ACTDT",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ASS_ACTDT",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CONNECTION",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CONNECTION",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CONNECTIONDET",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CONNECTIONDET",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CONNECTION_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CONNECTION_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "FUNDERREF",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FUNDERREF",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LANGUAGE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LANGUAGE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LANGUAGE_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LANGUAGE_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "MOVEDINFROM",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MOVEDINFROM",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MOVEDINFROM_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "MOVEDINFROM_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PATIENTREF",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PATIENTREF",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PICID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PICID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PREVCODE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "PREVCODE",
											"type": "String",
											"physicalType": "char"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_Polestar",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "Resident"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "GRG",
									"Table": "Resident"
								}
							}
						]
					},
					{
						"name": "Export Residents",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT \n    ADANAL_DEC\n    ,ADDRESS1\n    ,ADDRESS2\n    ,ADDRESS3\n    ,ADDRESS4\n    ,ADMSN_ANAL\n    ,ADMSN_TYPE\n    ,ADM_REASON\n    ,ADTYP_DEC\n    ,ANAL_GROUP\n    ,AUTHORITY\n    ,AmendDateTime\n    ,BIRTHDATE\n    ,CARECAT\n    ,CONTSIGNED\n    ,CreateDateTime\n    ,DISABILITY\n    ,ENQ_REF\n    ,HOME\n    ,HOME_REF\n    ,LASTADDATE\n    ,LASTDIDATE\n    ,LOC_DESC\n    ,LOC_REF\n    ,MARKETING\n    ,NINUMBER\n    ,OCC_IGNORE\n    ,ORES_REF\n    ,ORIGADDATE\n    ,POSTCODE\n    ,RELIGION\n    ,RESPAYINT\n    ,RES_CODE\n    --,RES_FNAME\n\t,CASE \n\t\tWHEN CHARINDEX('&', RES_FNAME) > 0 THEN RES_FNAME\n\t\tWHEN CHARINDEX('-', RES_FNAME) > 0 THEN RES_FNAME\n\t\tELSE (SUBSTRING(RES_FNAME, 1, CHARINDEX(' ', RES_FNAME + ' ')))\n\tEND AS RES_FNAME\n    ,RES_REF\n    ,RES_SNAME\n    ,ROOM\n    ,ROOMCAT\n    ,ROOM_DESC\n    ,ROOM_TYPE\n    ,SEX\n    ,STATUS\n    ,TEL_NO1\n    ,TEL_NO2\n    ,TITLE\n    ,USERDEF\n    ,AUTHCODE\n    ,DOUBLEINS\n    ,FIRSTAWARE\n    ,FIRSTVISIT\n    ,REAL_FNAME\n    ,REAL_SNAME\n    ,REAL_TITLE\n    ,SIGIND\n    ,THIRDPARTY\n    ,USERFIELD1\n    ,USERFIELD2\n    ,USERFIELD3\n    ,NHSNUMBER\n    ,ALTCOMMS\n    ,ALTCOMMS_REF\n    ,ASS_ACTBY\n    ,ASS_ACTBY_REF\n    ,ASS_ACTDT\n    ,CONNECTION\n    ,CONNECTIONDET\n    ,CONNECTION_REF\n    ,FUNDERREF\n    ,LANGUAGE\n    ,LANGUAGE_REF\n    ,MOVEDINFROM\n    ,MOVEDINFROM_REF\n    ,PATIENTREF\n    ,PICID\n    ,PREVCODE\n\t,CASE \n\t\tWHEN CHARINDEX('\"', RES_FNAME) > 0 THEN\n\t\t\tLTRIM(SUBSTRING(\n\t\t\t\tRES_FNAME, \n\t\t\t\tCHARINDEX('\"',RES_FNAME, 1) + 1,\n\t\t\t\tCHARINDEX('\"', RES_FNAME, CHARINDEX('\"', RES_FNAME) + 1) - CHARINDEX('\"', RES_FNAME) - 1))\n\t\tWHEN CHARINDEX('(', RES_FNAME) > 0 THEN\n\t\t\tLTRIM(SUBSTRING(\n\t\t\t\tRES_FNAME, \n\t\t\t\tCHARINDEX('(',RES_FNAME, 1) + 1,\n\t\t\t\tCHARINDEX(')', RES_FNAME, CHARINDEX('(', RES_FNAME) + 1) - CHARINDEX('(', RES_FNAME) - 1))\n\t\tWHEN CHARINDEX('''', RES_FNAME) > 0 THEN\n\t\t\tLTRIM(SUBSTRING(\n\t\t\t\tRES_FNAME, \n\t\t\t\tCHARINDEX('''',RES_FNAME, 1) + 1,\n\t\t\t\tCHARINDEX('''', RES_FNAME, CHARINDEX('''', RES_FNAME) + 1) - CHARINDEX('''', RES_FNAME) - 1))\n\t\tELSE ''\n\tEND AS Preferred_Name\nFROM \n    dbo.RESIDENT\nWHERE\n    HOME_REF IN (@{variables('Home_Ref_List')})",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ADANAL_DEC",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ADANAL_DEC",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ADDRESS1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDRESS1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDRESS2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS3",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDRESS3",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADDRESS4",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADDRESS4",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADMSN_ANAL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADMSN_ANAL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADMSN_TYPE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADMSN_TYPE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADM_REASON",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ADM_REASON",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ADTYP_DEC",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ADTYP_DEC",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ANAL_GROUP",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ANAL_GROUP",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AUTHORITY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AUTHORITY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AmendDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "AmendDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "BIRTHDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "BIRTHDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CARECAT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CARECAT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CONTSIGNED",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CONTSIGNED",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "CreateDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreateDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DISABILITY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DISABILITY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ENQ_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ENQ_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "HOME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HOME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LASTADDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "LASTADDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "LASTDIDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "LASTDIDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "LOC_DESC",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LOC_DESC",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LOC_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LOC_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "MARKETING",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MARKETING",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "NINUMBER",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "NINUMBER",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "OCC_IGNORE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "OCC_IGNORE",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "ORES_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ORES_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ORIGADDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ORIGADDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "POSTCODE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "POSTCODE",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "RELIGION",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RELIGION",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RESPAYINT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RESPAYINT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RES_CODE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "RES_CODE",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "RES_FNAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RES_FNAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RES_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RES_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RES_SNAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RES_SNAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ROOM",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ROOM",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "ROOMCAT",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ROOMCAT",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ROOM_DESC",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ROOM_DESC",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ROOM_TYPE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ROOM_TYPE",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "SEX",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "SEX",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "STATUS",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "STATUS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TEL_NO1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TEL_NO1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TEL_NO2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TEL_NO2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TITLE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TITLE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "USERDEF",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "USERDEF",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AUTHCODE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AUTHCODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DOUBLEINS",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "DOUBLEINS",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "FIRSTAWARE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "FIRSTAWARE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "FIRSTVISIT",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "FIRSTVISIT",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "REAL_FNAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "REAL_FNAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "REAL_SNAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "REAL_SNAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "REAL_TITLE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "REAL_TITLE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SIGIND",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "SIGIND",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "THIRDPARTY",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "THIRDPARTY",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "USERFIELD1",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "USERFIELD1",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "USERFIELD2",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "USERFIELD2",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "USERFIELD3",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "USERFIELD3",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "NHSNUMBER",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "NHSNUMBER",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ALTCOMMS",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ALTCOMMS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ALTCOMMS_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ALTCOMMS_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ASS_ACTBY",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ASS_ACTBY",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ASS_ACTBY_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ASS_ACTBY_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ASS_ACTDT",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ASS_ACTDT",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CONNECTION",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CONNECTION",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CONNECTIONDET",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CONNECTIONDET",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CONNECTION_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CONNECTION_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "FUNDERREF",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FUNDERREF",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LANGUAGE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LANGUAGE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LANGUAGE_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LANGUAGE_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "MOVEDINFROM",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MOVEDINFROM",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MOVEDINFROM_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "MOVEDINFROM_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PATIENTREF",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PATIENTREF",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PICID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PICID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PREVCODE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "PREVCODE",
											"type": "String",
											"physicalType": "char"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_GRG",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "GRG",
									"Table": "RESIDENT"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Home_Ref_List": {
						"type": "String",
						"defaultValue": "644,627,637,649,638,603,611,607,655,624,623,633,628,632,641,650,654,618,642,643,629,647,653,660,621,630,620,606,622,631,610,605,634,604,635,645,646,651,636,639,659,652,640,648"
					}
				},
				"folder": {
					"name": "Yardi/YardiStage"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Homes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copies Homes table from AH1 to AH2 and also updates HomesID's in TRANSFORM_DB Avery.HomeID",
				"activities": [
					{
						"name": "Copy AH1 data to AH2",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_AH1_Homes-AH2_Homes",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Update HomeID table",
						"description": "Updates Avery.HomeDetails table in the TRANSFORM_DB with latest data ",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Copy AH1 data to AH2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Transform_HomeDetails",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Update Occupancy on AH2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Update HomeID table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_AH1_Occupancy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Avery"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-10T09:35:49Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Pricing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Pipeline to update Pricing tables outside GRG refresh Window",
				"activities": [
					{
						"name": "Upsert Coldharbour Rooms",
						"description": "Updates the ColdHarbour.Rooms table from the Polestar DB. Polestar DB is a replication of the GRG database (CH reporting suite/DB)",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_ColdHarbour_Rooms",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Update Occupancy",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Upsert Coldharbour Rooms",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_ColdHarbour_RoomsWithInHomeResidents",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Avery"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-10T09:35:49Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Softworks_JSON_SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Employee JSON Data to SQL",
						"description": "Copies data from the JSON file exported from the API to the Softworks.Employee_JSON table. All stored as String data.",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set EmployeeList File",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE SoftWorks.Employee_JSON",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['department']"
										},
										"sink": {
											"name": "department",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['clockNumber']"
										},
										"sink": {
											"name": "clockNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['clocking']"
										},
										"sink": {
											"name": "clocking",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['dateOfBirth']"
										},
										"sink": {
											"name": "dateOfBirth",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['dateStarted']"
										},
										"sink": {
											"name": "dateStarted",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['dateTerminated']"
										},
										"sink": {
											"name": "dateTerminated",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['firstname']"
										},
										"sink": {
											"name": "firstname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['surname']"
										},
										"sink": {
											"name": "surname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['employeeName']"
										},
										"sink": {
											"name": "employeeName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['employeeNumber']"
										},
										"sink": {
											"name": "employeeNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['employeeEmail']"
										},
										"sink": {
											"name": "employeeEmail",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['employeeStatus']"
										},
										"sink": {
											"name": "employeeStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['salary']"
										},
										"sink": {
											"name": "salary",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['roster']"
										},
										"sink": {
											"name": "roster",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['hourlyRate']"
										},
										"sink": {
											"name": "hourlyRate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['payType']"
										},
										"sink": {
											"name": "payType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['payNumber']"
										},
										"sink": {
											"name": "payNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['masterPolicy']"
										},
										"sink": {
											"name": "masterPolicy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['supervisorName']"
										},
										"sink": {
											"name": "supervisorName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['employeeCostCentre']"
										},
										"sink": {
											"name": "employeeCostCentre",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['allocationGroup']"
										},
										"sink": {
											"name": "allocationGroup",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['shiftlessPattern']"
										},
										"sink": {
											"name": "shiftlessPattern",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['defaultBalanceCategory']"
										},
										"sink": {
											"name": "defaultBalanceCategory",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['employeeGender']"
										},
										"sink": {
											"name": "employeeGender",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['healthcareBankGroup']"
										},
										"sink": {
											"name": "healthcareBankGroup",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['healthcareBankStatus']"
										},
										"sink": {
											"name": "healthcareBankStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['selfRosteringGroup']"
										},
										"sink": {
											"name": "selfRosteringGroup",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['nextofKinContact']"
										},
										"sink": {
											"name": "nextofKinContact",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['nextofKinTel.Number']"
										},
										"sink": {
											"name": "nextofKinTel.Number",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['nextofKinRelationship']"
										},
										"sink": {
											"name": "nextofKinRelationship",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['telephoneNo']"
										},
										"sink": {
											"name": "telephoneNo",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['username']"
										},
										"sink": {
											"name": "username",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['nameAsSupervisor']"
										},
										"sink": {
											"name": "nameAsSupervisor",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['address1']"
										},
										"sink": {
											"name": "address1",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['address2']"
										},
										"sink": {
											"name": "address2",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['address3']"
										},
										"sink": {
											"name": "address3",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['address4']"
										},
										"sink": {
											"name": "address4",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['postcode']"
										},
										"sink": {
											"name": "postcode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['nINumber']"
										},
										"sink": {
											"name": "nINumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['accountName']"
										},
										"sink": {
											"name": "accountName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['sortCode']"
										},
										"sink": {
											"name": "sortCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['accountNumber']"
										},
										"sink": {
											"name": "accountNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['item']"
										},
										"sink": {
											"name": "item",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['notes']"
										},
										"sink": {
											"name": "notes",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['documentReference']"
										},
										"sink": {
											"name": "documentReference",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['documentName']"
										},
										"sink": {
											"name": "documentName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['jobTitle']"
										},
										"sink": {
											"name": "jobTitle",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['sickLeaveEntitlement']"
										},
										"sink": {
											"name": "sickLeaveEntitlement",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['holidayEntitlement']"
										},
										"sink": {
											"name": "holidayEntitlement",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['modeofTransport']"
										},
										"sink": {
											"name": "modeofTransport",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['homeLegalName']"
										},
										"sink": {
											"name": "homeLegalName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['reviewDate']"
										},
										"sink": {
											"name": "reviewDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['isSupervisor']"
										},
										"sink": {
											"name": "isSupervisor",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['salaried']"
										},
										"sink": {
											"name": "salaried",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['costCentre']"
										},
										"sink": {
											"name": "costCentre",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['deptExportCode']"
										},
										"sink": {
											"name": "deptExportCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['deptImportCode']"
										},
										"sink": {
											"name": "deptImportCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['comments']"
										},
										"sink": {
											"name": "comments",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['softworksID']"
										},
										"sink": {
											"name": "softworksID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName"
										}
									}
								],
								"collectionReference": "$['Employees']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Softworks",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('EmployeeListFile')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_SoftWorks_Employee_JSON",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Upsert to Tables",
						"description": "Upsert data from Softworks.Employee_JSON table to the Softworks.Employee table, converting several of the data types in the process. Uses the EmployeeNumber as the Key Field.",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Copy Employee JSON Data to SQL",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_SoftWorks_JSON_Employee",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"EmployeeJSONTable": {},
									"ClockingsJSONTable": {},
									"EmployeeTable": {},
									"ClockingsTable": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Copy Clockings JSON data to SQL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Clockings File",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE SoftWorks.Clockings_JSON",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['empNo']"
										},
										"sink": {
											"name": "empNo",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['clockId']"
										},
										"sink": {
											"name": "clockId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['absId']"
										},
										"sink": {
											"name": "absId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['deptId']"
										},
										"sink": {
											"name": "deptId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['jobId']"
										},
										"sink": {
											"name": "jobId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['projId']"
										},
										"sink": {
											"name": "projId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['absoluteClockTime']"
										},
										"sink": {
											"name": "absoluteClockTime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['clockType']"
										},
										"sink": {
											"name": "clockType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['clocDate']"
										},
										"sink": {
											"name": "clocDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['clockTime']"
										},
										"sink": {
											"name": "clockTime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['seconds']"
										},
										"sink": {
											"name": "seconds",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['effectiveDate']"
										},
										"sink": {
											"name": "effectiveDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['clockDuration']"
										},
										"sink": {
											"name": "clockDuration",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['application']"
										},
										"sink": {
											"name": "application",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['sourceType']"
										},
										"sink": {
											"name": "sourceType",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['sourceData']"
										},
										"sink": {
											"name": "sourceData",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['sourceEdit']"
										},
										"sink": {
											"name": "sourceEdit",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['sourceClockingType']"
										},
										"sink": {
											"name": "sourceClockingType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['longitude']"
										},
										"sink": {
											"name": "longitude",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['latitude']"
										},
										"sink": {
											"name": "latitude",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['accuracy']"
										},
										"sink": {
											"name": "accuracy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['decision']"
										},
										"sink": {
											"name": "decision",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['delCode']"
										},
										"sink": {
											"name": "delCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['userId']"
										},
										"sink": {
											"name": "userId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['dateEntered']"
										},
										"sink": {
											"name": "dateEntered",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['deleted']"
										},
										"sink": {
											"name": "deleted",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['duplicate']"
										},
										"sink": {
											"name": "duplicate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ignore']"
										},
										"sink": {
											"name": "ignore",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['inOut']"
										},
										"sink": {
											"name": "inOut",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['inClocking']"
										},
										"sink": {
											"name": "inClocking",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['outClocking']"
										},
										"sink": {
											"name": "outClocking",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['isActive']"
										},
										"sink": {
											"name": "isActive",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['new']"
										},
										"sink": {
											"name": "new",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['standard']"
										},
										"sink": {
											"name": "standard",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['overtime']"
										},
										"sink": {
											"name": "overtime",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['callIn']"
										},
										"sink": {
											"name": "callIn",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['clockFlag']"
										},
										"sink": {
											"name": "clockFlag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['edited']"
										},
										"sink": {
											"name": "edited",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['calcInsert']"
										},
										"sink": {
											"name": "calcInsert",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['infringe']"
										},
										"sink": {
											"name": "infringe",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['previous']"
										},
										"sink": {
											"name": "previous",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['problem']"
										},
										"sink": {
											"name": "problem",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['twUser']"
										},
										"sink": {
											"name": "twUser",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['shiftMove']"
										},
										"sink": {
											"name": "shiftMove",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['showFlags']"
										},
										"sink": {
											"name": "showFlags",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['showLongFlags']"
										},
										"sink": {
											"name": "showLongFlags",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['isOverMidnight']"
										},
										"sink": {
											"name": "isOverMidnight",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['deviceTime']"
										},
										"sink": {
											"name": "deviceTime",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['TimeZone']"
										},
										"sink": {
											"name": "TimeZone",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['TimeZoneCod']"
										},
										"sink": {
											"name": "TimeZoneCod",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['PrevAbsTime']"
										},
										"sink": {
											"name": "PrevAbsTime",
											"type": "Int64"
										}
									},
									{
										"source": {
											"path": "[['ReasonId']"
										},
										"sink": {
											"name": "ReasonId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Comments']"
										},
										"sink": {
											"name": "Comments",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ApprovalState']"
										},
										"sink": {
											"name": "ApprovalState",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ApprovalStateCaption']"
										},
										"sink": {
											"name": "ApprovalStateCaption",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['PrevApprovalState']"
										},
										"sink": {
											"name": "PrevApprovalState",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['LocationText']"
										},
										"sink": {
											"name": "LocationText",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['LocationEditText']"
										},
										"sink": {
											"name": "LocationEditText",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['LocationTextExtended']"
										},
										"sink": {
											"name": "LocationTextExtended",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Offline']"
										},
										"sink": {
											"name": "Offline",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['AttachedDocumentId']"
										},
										"sink": {
											"name": "AttachedDocumentId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['AssumedId']"
										},
										"sink": {
											"name": "AssumedId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['Clockings']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Softworks",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('ClockingsFile')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_SoftWorks_Clockings_JSON",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Set EmployeeList File",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Copy Clockings JSON data to SQL",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "EmployeeListFile",
							"value": {
								"value": "@concat('EmployeeList$', formatDateTime(utcNow(), 'dd-MM-yyyy'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Clockings File",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ClockingsFile",
							"value": {
								"value": "@concat('Clockings$', formatDateTime(subtractFromTime(subtractFromTime(utcNow(), dayOfWeek(utcNow()), 'Day'), 6, 'Day'), 'dd-MM-yyyy'), '$', formatDateTime(subtractFromTime(utcNow(), dayOfWeek(utcNow()), 'Day'), 'dd-MM-yyyy'))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"EmployeeListFile": {
						"type": "String"
					},
					"ClockingsFile": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Softworks/Children Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-10T11:21:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Yardi_CH_IP_LedgerDetails')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Export Ledger and comments",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set SITE_REF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT\t \n\t'@{variables('Home_Ref')}' AS HOME_REF,\n\tSite.SiteId AS siteid,\n\tSite.SiteName as sitename, \n\tRESIDENT.RES_CODE as resident_no,\n\tInvPosting.account_No, \n\tInvPosting.Cre_DateT AS created_date, \n\tInvPosting.Inv_Date AS transaction_date,\n\tCASE \n\t\tWHEN InvPosting.Tran_Type = 'U' THEN 'Receipt'\n\t\tWHEN InvPosting.Tran_Type = 'I' THEN 'Invoice'\n\t\tWHEN InvPosting.Tran_Type = 'C' THEN 'Credit'\n\t\tWHEN InvPosting.Tran_Type = 'J' THEN 'Adjustment'\n\t\tELSE ''\n\tEND AS transaction_type,\n\tInvPosting.Ref1 AS transaction_ref1, \n\tInvPosting.Ref2 AS transaction_ref2, \n\tInvPosting.Value AS transaction_value, \n\tInvPosting.Balance AS transaction_balance, \n\tMemo,\n\tUSERCOMM AS UserComment\nFROM\t\t \n\tInvPosting (NOLOCK) \n\t\n\tJOIN Site (NOLOCK) \n\t\tON Site.Site_Ref = InvPosting.Site_Ref\n\n\tLEFT JOIN RESIDENT (NOLOCK)\n\t\tON RESIDENT.RES_REF = INVPOSTING.RES_REF\nWHERE\t\n\tInvPosting.Site_Ref  = '@{variables('SITE_REF')}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_IP",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat(variables('Home_Ref'), ' - Full Ledger Comments - ', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Lookup Home",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT HOME_REF, HomeName, SITE_REF FROM ColdHarbourHomeID WHERE HOME_REF = '@{variables('Home_Ref')}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Set SITE_REF",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup Home",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "SITE_REF",
							"value": {
								"value": "@activity('Lookup Home').output.firstRow.SITE_REF",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Home_Ref": {
						"type": "String"
					},
					"SITE_REF": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "Yardi/CHIP"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Yardi_GRG_Data_MultiHome')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Extracts data Yardi require to single csv files for multiple homes",
				"activities": [
					{
						"name": "Export Rooms",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT\n    AmendDateTime,\n    CreateDateTime,\n    HOME_REF,\n    OLOC_REF,\n    OROOM_REF,\n    ROOM_CAT,\n    ROOM_CAT_DESC,\n    ROOM_CODE,\n    ROOM_DESC,\n    ROOM_NO_BEDS,\n    ROOM_REF,\n    ROOM_TYPE,\n    ROOM_TYPE_DESC,\n    CHARGEPERIOD,\n    CURRENTRATE,\n    RATEDATE,\n    ROOM_UDF1,\n    ROOM_UDF2,\n    ROOM_UDF3,\n    ROOM_UDF4,\n    USEFLAG\nFROM \n    dbo.ROOMS\nWHERE\n    HOME_REF IN (@{variables('Home_Ref_List')})",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_GRG",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('Rooms -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Export Residents",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Export Rooms",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT \n    ADANAL_DEC\n    ,ADDRESS1\n    ,ADDRESS2\n    ,ADDRESS3\n    ,ADDRESS4\n    ,ADMSN_ANAL\n    ,ADMSN_TYPE\n    ,ADM_REASON\n    ,ADTYP_DEC\n    ,ANAL_GROUP\n    ,AUTHORITY\n    ,AmendDateTime\n    ,BIRTHDATE\n    ,CARECAT\n    ,CONTSIGNED\n    ,CreateDateTime\n    ,DISABILITY\n    ,ENQ_REF\n    ,HOME\n    ,HOME_REF\n    ,LASTADDATE\n    ,LASTDIDATE\n    ,LOC_DESC\n    ,LOC_REF\n    ,MARKETING\n    ,NINUMBER\n    ,OCC_IGNORE\n    ,ORES_REF\n    ,ORIGADDATE\n    ,POSTCODE\n    ,RELIGION\n    ,RESPAYINT\n    ,RES_CODE\n    --,RES_FNAME\n    ,CASE \n\t\tWHEN CHARINDEX('&', RES_FNAME) > 0 THEN RES_FNAME\n        WHEN CHARINDEX(' and ', RES_FNAME) > 0 THEN RES_FNAME\n\t\tWHEN CHARINDEX('-', RES_FNAME) > 0 THEN RES_FNAME\n        WHEN RES_FNAME LIKE ' %' AND LTRIM(RTRIM(RES_FNAME)) NOT LIKE '%[(\"'']%' THEN LTRIM(RES_FNAME)\n        WHEN LTRIM(RTRIM(RES_FNAME)) LIKE '% %' AND LTRIM(RTRIM(RES_FNAME)) NOT LIKE '%[(\"'']%' THEN RES_FNAME\n        WHEN RES_FNAME = '.' THEN ''\n        WHEN RES_FNAME = '*' THEN ''\n\t\tELSE (SUBSTRING(LTRIM(RES_FNAME), 1, CHARINDEX(' ', LTRIM(RES_FNAME) + ' ')))\n\tEND AS RES_FNAME\n    ,RES_REF\n    ,CASE \n        WHEN LTRIM(RES_SNAME) = '.' THEN ''\n        WHEN RES_FNAME = '*' THEN ''\n        ELSE LTRIM(RES_SNAME)\n    END AS RES_SNAME\n    ,ROOM\n    ,ROOMCAT\n    ,ROOM_DESC\n    ,ROOM_TYPE\n    ,SEX\n    ,STATUS\n    ,TEL_NO1\n    ,TEL_NO2\n    ,TITLE\n    ,USERDEF\n    ,AUTHCODE\n    ,DOUBLEINS\n    ,FIRSTAWARE\n    ,FIRSTVISIT\n    ,REAL_FNAME\n    ,REAL_SNAME\n    ,REAL_TITLE\n    ,SIGIND\n    ,THIRDPARTY\n    ,USERFIELD1\n    ,USERFIELD2\n    ,USERFIELD3\n    ,NHSNUMBER\n    ,ALTCOMMS\n    ,ALTCOMMS_REF\n    ,ASS_ACTBY\n    ,ASS_ACTBY_REF\n    ,ASS_ACTDT\n    ,CONNECTION\n    ,CONNECTIONDET\n    ,CONNECTION_REF\n    ,FUNDERREF\n    ,LANGUAGE\n    ,LANGUAGE_REF\n    ,MOVEDINFROM\n    ,MOVEDINFROM_REF\n    ,PATIENTREF\n    ,PICID\n    ,PREVCODE\n\t,CASE \n\t\tWHEN CHARINDEX('\"', RES_FNAME) > 0 THEN\n\t\t\tLTRIM(SUBSTRING(\n\t\t\t\tRES_FNAME, \n\t\t\t\tCHARINDEX('\"',RES_FNAME, 1) + 1,\n\t\t\t\tCHARINDEX('\"', RES_FNAME, CHARINDEX('\"', RES_FNAME) + 1) - CHARINDEX('\"', RES_FNAME) - 1))\n\t\tWHEN CHARINDEX('(', RES_FNAME) > 0 THEN\n\t\t\tLTRIM(SUBSTRING(\n\t\t\t\tRES_FNAME, \n\t\t\t\tCHARINDEX('(',RES_FNAME, 1) + 1,\n\t\t\t\tCHARINDEX(')', RES_FNAME, CHARINDEX('(', RES_FNAME) + 1) - CHARINDEX('(', RES_FNAME) - 1))\n\t\tWHEN CHARINDEX('''', RES_FNAME) > 0 THEN\n\t\t\tLTRIM(SUBSTRING(\n\t\t\t\tRES_FNAME, \n\t\t\t\tCHARINDEX('''',RES_FNAME, 1) + 1,\n\t\t\t\tCHARINDEX('''', RES_FNAME, CHARINDEX('''', RES_FNAME) + 1) - CHARINDEX('''', RES_FNAME) - 1))\n\t\tELSE ''\n\tEND AS Preferred_Name\nFROM \n    dbo.RESIDENT\nWHERE\n    HOME_REF IN (@{variables('Home_Ref_List')})",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_GRG",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('Residents -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Export Resident Contacts",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Export Residents",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT\n    Address1\n    ,Address2\n    ,Address3\n    ,Address4\n    ,AmendDateTime\n    ,Cont_SubType\n    ,Cont_SubTypeDec\n    ,CreateDateTime\n    ,REPLACE(REPLACE(REPLACE(LTRIM(Forenames), '.', ''), ',', ''), '*', '') AS Forenames\n    ,GRGApp_GrGsRef\n    ,GRGrep_Cnta_Det_Ref\n    ,Gen_Comments\n    ,PostCode\n    ,RelType\n    ,RelTypeDec\n    ,Res_Ref\n    ,REPLACE(REPLACE(REPLACE(LTRIM(Surname), '.', ''), ',', ''), '*', '') AS Surname\n    ,Tel_No1\n    ,Tel_No2\n    ,TitleDec\n    ,oCnta_Det_Ref\n    ,Email\n    ,LASTUPDATE\nFROM \n    dbo.RESCONTACTS\nWHERE\n    Res_Ref IN (SELECT ORES_REF FROM RESIDENT WHERE HOME_REF IN (@{variables('Home_Ref_List')}))",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_GRG",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('Resident Contacts -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Export Resident Movement",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Export Resident Contacts",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT \n    ACTDEATHDT\n    ,ADANAL_DEC\n    ,ADTYP_DEC\n    ,AD_REF\n    ,AmendDateTime\n    ,CAUSE\n    ,CAUSEDEATH\n    ,CreateDateTime\n    ,DATE\n    ,DISCHDECEAS\n    ,DISDEST\n    ,DISREASON\n    ,DISTYPE\n    ,DOCTOR\n    ,FINALDISCH\n    ,HOME_REF\n    ,INITIALADM\n    ,INOUT\n    ,LOC_REF\n    ,MOVE_REF\n    ,PLACE\n    ,REASON\n    ,RES_REF\n    ,ROOM\n    ,ROOM_TYPE\n    ,TIME\n    ,MOVE_TIME\n    ,ANALCHANGE\n    ,COMPOSITE\n    ,MOVESUB_REF\n    ,PREVDISDEST\n    ,PREVDISTYPE\nFROM \n    dbo.ADMIN_DISCHARGE\nWHERE\n    HOME_REF IN (@{variables('Home_Ref_List')})",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_GRG",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('Resident Movement -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Export Accounts",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Export Resident Movement",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT\n    ACCNO\n    ,ACCSUFFIX\n    ,ACCTYPE\n    ,ACCTYPE2\n    ,ACCTYPE_DECODE\n    ,ACC_REF\n    ,AmendDateTime\n    ,CALENDAR\n    ,CAL_REF\n    ,CHGPER\n    ,Cnta_Det_Ref\n    ,Cont_Ref\n    ,CreateDateTime\n    ,DAILYRATE\n    ,ENDDATE\n    ,FINALINV\n    ,FS_REF\n    ,FUNDSOURCE\n    ,HOME_REF\n    ,LASTRATEDT\n    ,ORIGREF\n    ,PENSBOOK\n    ,PROFILE\n    ,RATE\n    ,RECGRP\n    ,RECGRPDESC\n    ,RELACCREF\n    ,RES_REF\n    ,RecType\n    ,STARTDATE\n    ,SUFFIXSUPERCEDED\n    ,ANAL3\n    ,ATTENTION\n    ,AUTHORISED\n    ,CONSULTANT\n    ,CRCONTROL\n    ,DEBTORCODE\n    ,FUNDREQEDI\n    ,FURC_DEC\n    ,INPFUNDAPR\n    ,LOCALITY\n    ,NURFUNDAPR\n    ,RECONCILED\n    ,BANKACC\n    ,BANKACCNAME\n    ,BANKADDRESS1\n    ,BANKADDRESS2\n    ,BANKADDRESS3\n    ,BANKADDRESS4\n    ,BANKNAME\n    ,BANKPOSTCODE\n    ,BANKSORTCODE\n    ,BANKSTREF\n    ,BANKTRTYPE\n    ,DDMANDREF\n    ,SOCOLDAY\n    ,SOCOLLECT\n    ,SOVALUE\n    ,USAGE\n    ,CALCODE\n    ,PCTDESC\n    ,REVDATE\nFROM \n    ACCOUNT \nWHERE\n    HOME_REF IN (@{variables('Home_Ref_List')})",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_GRG",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('Accounts -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Export Fund Source Contacts",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Export Accounts",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT \n    Address1\n    ,Address2\n    ,Address3\n    ,Address4\n    ,AmendDateTime\n    ,CreateDateTime\n    ,EMAIL\n    ,FundSourceName\n    ,GRGApp_GrGsRef\n    ,GRGrep_Cnta_Det_Ref\n    ,Inv_Narrative\n    ,PostCode\n    ,Tel_No1\n    ,Tel_No2\n    ,oCnta_Det_Ref\n    ,CQUIN\n    ,CQUIN_REF\n    ,CQUIN_TYPE\n    ,EDICONTACT\n    ,PAYDAYS\n    ,PAYDAYSDOM\n    ,PAYDAYSDOMDESC\n    ,PAYMONTH\n    ,PAYMONTHDESC\nFROM \n    dbo.FSCONTACTS\nWHERE\n    GRGApp_GrGsRef IN (@{variables('Home_Ref_List')})",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_GRG",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('Fund Source Contacts -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Home_Ref_List": {
						"type": "String",
						"defaultValue": "644,627,637,649,638,603,611,607,655,624,623,633,628,632,641,650,654,618,642,643,629,647,653,660,621,630,620,606,622,631,610,605,634,604,635,645,646,651,636,639,659,652,640,648"
					}
				},
				"folder": {
					"name": "Yardi/GRG"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Yardi_GRG_Data_SingleHome')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Extracts data Yardi require to csv files for a single home",
				"activities": [
					{
						"name": "Export Rooms",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Filename",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT\n    AmendDateTime,\n    CreateDateTime,\n    HOME_REF,\n    OLOC_REF,\n    OROOM_REF,\n    ROOM_CAT,\n    ROOM_CAT_DESC,\n    ROOM_CODE,\n    ROOM_DESC,\n    ROOM_NO_BEDS,\n    ROOM_REF,\n    ROOM_TYPE,\n    ROOM_TYPE_DESC,\n    CHARGEPERIOD,\n    CURRENTRATE,\n    RATEDATE,\n    ROOM_UDF1,\n    ROOM_UDF2,\n    ROOM_UDF3,\n    ROOM_UDF4,\n    USEFLAG\nFROM \n    dbo.ROOMS\nWHERE\n    HOME_REF = '@{variables('Home_Ref')}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_GRG",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat(variables('Filename'), ' - Rooms -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Look up Home name",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT TOP 1 HomeName FROM Avery.HOME WHERE ColdHarbourHOME_REF = '@{variables('Home_Ref')}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AH2_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						}
					},
					{
						"name": "Set Filename",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Look up Home name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Filename",
							"value": {
								"value": "@activity('Look up Home name').output.firstRow.HomeName",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Export Residents",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Export Rooms",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT \n    ADANAL_DEC\n    ,ADDRESS1\n    ,ADDRESS2\n    ,ADDRESS3\n    ,ADDRESS4\n    ,ADMSN_ANAL\n    ,ADMSN_TYPE\n    ,ADM_REASON\n    ,ADTYP_DEC\n    ,ANAL_GROUP\n    ,AUTHORITY\n    ,AmendDateTime\n    ,BIRTHDATE\n    ,CARECAT\n    ,CONTSIGNED\n    ,CreateDateTime\n    ,DISABILITY\n    ,ENQ_REF\n    ,HOME\n    ,HOME_REF\n    ,LASTADDATE\n    ,LASTDIDATE\n    ,LOC_DESC\n    ,LOC_REF\n    ,MARKETING\n    ,NINUMBER\n    ,OCC_IGNORE\n    ,ORES_REF\n    ,ORIGADDATE\n    ,POSTCODE\n    ,RELIGION\n    ,RESPAYINT\n    ,RES_CODE\n    --,RES_FNAME\n    ,CASE \n\t\tWHEN CHARINDEX('&', RES_FNAME) > 0 THEN RES_FNAME\n        WHEN CHARINDEX(' and ', RES_FNAME) > 0 THEN RES_FNAME\n\t\tWHEN CHARINDEX('-', RES_FNAME) > 0 THEN RES_FNAME\n        WHEN RES_FNAME LIKE ' %' AND LTRIM(RTRIM(RES_FNAME)) NOT LIKE '%[(\"'']%' THEN LTRIM(RES_FNAME)\n        WHEN LTRIM(RTRIM(RES_FNAME)) LIKE '% %' AND LTRIM(RTRIM(RES_FNAME)) NOT LIKE '%[(\"'']%' THEN RES_FNAME\n        WHEN RES_FNAME = '.' THEN ''\n        WHEN RES_FNAME = '*' THEN ''\n\t\tELSE (SUBSTRING(LTRIM(RES_FNAME), 1, CHARINDEX(' ', LTRIM(RES_FNAME) + ' ')))\n\tEND AS RES_FNAME\n    ,RES_REF\n    ,CASE \n        WHEN LTRIM(RES_SNAME) = '.' THEN ''\n        WHEN RES_FNAME = '*' THEN ''\n        ELSE LTRIM(RES_SNAME)\n    END AS RES_SNAME\n    ,ROOM\n    ,ROOMCAT\n    ,ROOM_DESC\n    ,ROOM_TYPE\n    ,SEX\n    ,STATUS\n    ,TEL_NO1\n    ,TEL_NO2\n    ,TITLE\n    ,USERDEF\n    ,AUTHCODE\n    ,DOUBLEINS\n    ,FIRSTAWARE\n    ,FIRSTVISIT\n    ,REAL_FNAME\n    ,REAL_SNAME\n    ,REAL_TITLE\n    ,SIGIND\n    ,THIRDPARTY\n    ,USERFIELD1\n    ,USERFIELD2\n    ,USERFIELD3\n    ,NHSNUMBER\n    ,ALTCOMMS\n    ,ALTCOMMS_REF\n    ,ASS_ACTBY\n    ,ASS_ACTBY_REF\n    ,ASS_ACTDT\n    ,CONNECTION\n    ,CONNECTIONDET\n    ,CONNECTION_REF\n    ,FUNDERREF\n    ,LANGUAGE\n    ,LANGUAGE_REF\n    ,MOVEDINFROM\n    ,MOVEDINFROM_REF\n    ,PATIENTREF\n    ,PICID\n    ,PREVCODE\n\t,CASE \n\t\tWHEN CHARINDEX('\"', RES_FNAME) > 0 THEN\n\t\t\tLTRIM(SUBSTRING(\n\t\t\t\tRES_FNAME, \n\t\t\t\tCHARINDEX('\"',RES_FNAME, 1) + 1,\n\t\t\t\tCHARINDEX('\"', RES_FNAME, CHARINDEX('\"', RES_FNAME) + 1) - CHARINDEX('\"', RES_FNAME) - 1))\n\t\tWHEN CHARINDEX('(', RES_FNAME) > 0 THEN\n\t\t\tLTRIM(SUBSTRING(\n\t\t\t\tRES_FNAME, \n\t\t\t\tCHARINDEX('(',RES_FNAME, 1) + 1,\n\t\t\t\tCHARINDEX(')', RES_FNAME, CHARINDEX('(', RES_FNAME) + 1) - CHARINDEX('(', RES_FNAME) - 1))\n\t\tWHEN CHARINDEX('''', RES_FNAME) > 0 THEN\n\t\t\tLTRIM(SUBSTRING(\n\t\t\t\tRES_FNAME, \n\t\t\t\tCHARINDEX('''',RES_FNAME, 1) + 1,\n\t\t\t\tCHARINDEX('''', RES_FNAME, CHARINDEX('''', RES_FNAME) + 1) - CHARINDEX('''', RES_FNAME) - 1))\n\t\tELSE ''\n\tEND AS Preferred_Name\nFROM \n    dbo.RESIDENT\nWHERE\n    HOME_REF = '@{variables('Home_Ref')}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_GRG",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat(variables('Filename'), ' - Residents -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Export Resident Contacts",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Export Residents",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT\n    Address1\n    ,Address2\n    ,Address3\n    ,Address4\n    ,AmendDateTime\n    ,Cont_SubType\n    ,Cont_SubTypeDec\n    ,CreateDateTime\n    ,REPLACE(REPLACE(REPLACE(LTRIM(Forenames), '.', ''), ',', ''), '*', '') AS Forenames\n    ,GRGApp_GrGsRef\n    ,GRGrep_Cnta_Det_Ref\n    ,Gen_Comments\n    ,PostCode\n    ,RelType\n    ,RelTypeDec\n    ,Res_Ref\n    ,REPLACE(REPLACE(REPLACE(LTRIM(Surname), '.', ''), ',', ''), '*', '') AS Surname\n    ,Tel_No1\n    ,Tel_No2\n    ,TitleDec\n    ,oCnta_Det_Ref\n    ,Email\n    ,LASTUPDATE\nFROM \n    dbo.RESCONTACTS\nWHERE\n    Res_Ref IN (SELECT ORES_REF FROM RESIDENT WHERE HOME_REF = '@{variables('Home_Ref')}')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_GRG",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat(variables('Filename'), ' - Resident Contacts -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Export Resident Movement",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Export Resident Contacts",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT \n    ACTDEATHDT\n    ,ADANAL_DEC\n    ,ADTYP_DEC\n    ,AD_REF\n    ,AmendDateTime\n    ,CAUSE\n    ,CAUSEDEATH\n    ,CreateDateTime\n    ,DATE\n    ,DISCHDECEAS\n    ,DISDEST\n    ,DISREASON\n    ,DISTYPE\n    ,DOCTOR\n    ,FINALDISCH\n    ,HOME_REF\n    ,INITIALADM\n    ,INOUT\n    ,LOC_REF\n    ,MOVE_REF\n    ,PLACE\n    ,REASON\n    ,RES_REF\n    ,ROOM\n    ,ROOM_TYPE\n    ,TIME\n    ,MOVE_TIME\n    ,ANALCHANGE\n    ,COMPOSITE\n    ,MOVESUB_REF\n    ,PREVDISDEST\n    ,PREVDISTYPE\nFROM \n    dbo.ADMIN_DISCHARGE\nWHERE\n    HOME_REF = '@{variables('Home_Ref')}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_GRG",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat(variables('Filename'), ' - Resident Movement -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Export Accounts",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Export Resident Movement",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT\n    ACCNO\n    ,ACCSUFFIX\n    ,ACCTYPE\n    ,ACCTYPE2\n    ,ACCTYPE_DECODE\n    ,ACC_REF\n    ,AmendDateTime\n    ,CALENDAR\n    ,CAL_REF\n    ,CHGPER\n    ,Cnta_Det_Ref\n    ,Cont_Ref\n    ,CreateDateTime\n    ,DAILYRATE\n    ,ENDDATE\n    ,FINALINV\n    ,FS_REF\n    ,FUNDSOURCE\n    ,HOME_REF\n    ,LASTRATEDT\n    ,ORIGREF\n    ,PENSBOOK\n    ,PROFILE\n    ,RATE\n    ,RECGRP\n    ,RECGRPDESC\n    ,RELACCREF\n    ,RES_REF\n    ,RecType\n    ,STARTDATE\n    ,SUFFIXSUPERCEDED\n    ,ANAL3\n    ,ATTENTION\n    ,AUTHORISED\n    ,CONSULTANT\n    ,CRCONTROL\n    ,DEBTORCODE\n    ,FUNDREQEDI\n    ,FURC_DEC\n    ,INPFUNDAPR\n    ,LOCALITY\n    ,NURFUNDAPR\n    ,RECONCILED\n    ,BANKACC\n    ,BANKACCNAME\n    ,BANKADDRESS1\n    ,BANKADDRESS2\n    ,BANKADDRESS3\n    ,BANKADDRESS4\n    ,BANKNAME\n    ,BANKPOSTCODE\n    ,BANKSORTCODE\n    ,BANKSTREF\n    ,BANKTRTYPE\n    ,DDMANDREF\n    ,SOCOLDAY\n    ,SOCOLLECT\n    ,SOVALUE\n    ,USAGE\n    ,CALCODE\n    ,PCTDESC\n    ,REVDATE\nFROM \n    ACCOUNT \nWHERE\n    HOME_REF = '@{variables('Home_Ref')}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_GRG",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat(variables('Filename'), ' - Accounts -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Export Fund Source Contacts",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Export Accounts",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT \n    Address1\n    ,Address2\n    ,Address3\n    ,Address4\n    ,AmendDateTime\n    ,CreateDateTime\n    ,EMAIL\n    ,FundSourceName\n    ,GRGApp_GrGsRef\n    ,GRGrep_Cnta_Det_Ref\n    ,Inv_Narrative\n    ,PostCode\n    ,Tel_No1\n    ,Tel_No2\n    ,oCnta_Det_Ref\n    ,CQUIN\n    ,CQUIN_REF\n    ,CQUIN_TYPE\n    ,EDICONTACT\n    ,PAYDAYS\n    ,PAYDAYSDOM\n    ,PAYDAYSDOMDESC\n    ,PAYMONTH\n    ,PAYMONTHDESC\nFROM \n    dbo.FSCONTACTS\nWHERE\n    GRGApp_GrGsRef = '@{variables('Home_Ref')}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_GRG",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat(variables('Filename'), ' - Fund Source Contacts -', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Home_Ref": {
						"type": "String",
						"defaultValue": "611"
					},
					"Filename": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Yardi/GRG"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Yardi_Vendors')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Export Vendors to YardiStage",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Clear YardiStage Vendor Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT 'XRR227' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XRR227.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XRR227.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XAWT01' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XAWT01.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XAWT01.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XKR117' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XKR117.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XKR117.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XWWT03' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XWWT03.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XWWT03.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XLR118' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XLR118.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XLR118.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'KNOW01' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM KNOW01.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            KNOW01.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'KNOW03' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM KNOW03.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            KNOW03.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'BOUR01' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM BOUR01.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            BOUR01.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'ZCR229' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM ZCR229.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            ZCR229.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'WTRB02' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM WTRB02.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            WTRB02.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'WTRB04' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM WTRB04.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            WTRB04.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XGR225' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XGR225.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XGR225.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XBR120' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XBR120.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XBR120.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XFR121' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XFR121.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XFR121.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XOWT04' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XOWT04.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XOWT04.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XXR228' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XXR228.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XXR228.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'ZBWT05' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM ZBWT05.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            ZBWT05.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'WTRB07' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM WTRB07.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            WTRB07.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XPWT06' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XPWT06.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XPWT06.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XQR119' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XQR119.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XQR119.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XCWT07' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XCWT07.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XCWT07.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XUWT08' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XUWT08.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XUWT08.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'ZAWT09' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM ZAWT09.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            ZAWT09.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'WTRB12' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM WTRB12.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            WTRB12.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'WTRB01' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM WTRB01.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            WTRB01.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XDWT10' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XDWT10.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XDWT10.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'WTRB05' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM WTRB05.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            WTRB05.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'KNOW02' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM KNOW02.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            KNOW02.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'WTRB03' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM WTRB03.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            WTRB03.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XER224' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XER224.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XER224.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'PEMB01' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM PEMB01.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            PEMB01.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XHWT11' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XHWT11.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XHWT11.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'SEVE01' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM SEVE01.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            SEVE01.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XIR226' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XIR226.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XIR226.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XSWT12' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XSWT12.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XSWT12.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XTWT02' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XTWT02.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XTWT02.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XYWT13' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XYWT13.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XYWT13.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'WTRB06' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM WTRB06.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            WTRB06.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XJWT14' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XJWT14.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XJWT14.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XMR122' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XMR122.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XMR122.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'WTRB11' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM WTRB11.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            WTRB11.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XZWT15' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XZWT15.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XZWT15.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XNR123' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XNR123.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XNR123.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XVWT16' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XVWT16.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XVWT16.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CompanyCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CompanyCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LatestDate",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LatestDate",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acCustSupp",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acCustSupp",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acCompany",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acCompany",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acArea",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acArea",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acAccType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acAccType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acStatementTo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acStatementTo",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acVATRegNo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acVATRegNo",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acAddressLine1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acAddressLine1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acAddressLine2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acAddressLine2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acAddressLine3",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acAddressLine3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acAddressLine4",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acAddressLine4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acAddressLine5",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acAddressLine5",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acDespAddr",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "acDespAddr",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "acDespAddressLine1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acDespAddressLine1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acDespAddressLine2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acDespAddressLine2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acDespAddressLine3",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acDespAddressLine3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acDespAddressLine4",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acDespAddressLine4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acDespAddressLine5",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acDespAddressLine5",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acContact",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acContact",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acPhone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acPhone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acFax",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acFax",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acTheirAcc",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acTheirAcc",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acOwnTradTerm",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "acOwnTradTerm",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "acTradeTerms1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acTradeTerms1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acTradeTerms2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acTradeTerms2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acCurrency",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acCurrency",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acVATCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acVATCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acPayTerms",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acPayTerms",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acCreditLimit",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "acCreditLimit",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "acDiscount",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "acDiscount",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "acCreditStatus",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acCreditStatus",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acCostCentre",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acCostCentre",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acDiscountBand",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acDiscountBand",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acOrderConsolidationMode",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acOrderConsolidationMode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acDefSettleDays",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acDefSettleDays",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acSpare5",
											"type": "Byte[]",
											"physicalType": "varbinary"
										},
										"sink": {
											"name": "acSpare5",
											"type": "Byte[]",
											"physicalType": "varbinary"
										}
									},
									{
										"source": {
											"name": "acBalance",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "acBalance",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "acDepartment",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acDepartment",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acECMember",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "acECMember",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "acNLineCount",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acNLineCount",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acStatement",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "acStatement",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "acSalesGL",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acSalesGL",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acLocation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acLocation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acAccStatus",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acAccStatus",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acPayType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acPayType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acOldBankSort",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acOldBankSort",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acOldBankAcc",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acOldBankAcc",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acBankRef",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acBankRef",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acAvePay",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acAvePay",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acPhone2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acPhone2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acCOSGL",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acCOSGL",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acDrCrGL",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acDrCrGL",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acLastUsed",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acLastUsed",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acUserDef1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acUserDef1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acUserDef2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acUserDef2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acInvoiceTo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acInvoiceTo",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acSOPAutoWOff",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "acSOPAutoWOff",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "acFormSet",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acFormSet",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acBookOrdVal",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "acBookOrdVal",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "acDirDebMode",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acDirDebMode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acCCStart",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acCCStart",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acCCEnd",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acCCEnd",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acCCName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acCCName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acCCNumber",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acCCNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acCCSwitch",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acCCSwitch",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acDefSettleDisc",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "acDefSettleDisc",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "acStateDeliveryMode",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acStateDeliveryMode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acSpare2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acSpare2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acSendReader",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "acSendReader",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "acEBusPword",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acEBusPword",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acPostCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acPostCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acAltCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acAltCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acUseForEbus",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acUseForEbus",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acZIPAttachments",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acZIPAttachments",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acUserDef3",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acUserDef3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acUserDef4",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acUserDef4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acWebLiveCatalog",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acWebLiveCatalog",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acWebPrevCatalog",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acWebPrevCatalog",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acTimeStamp",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acTimeStamp",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acVATCountryCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acVATCountryCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acSSDDeliveryTerms",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acSSDDeliveryTerms",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acInclusiveVATCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acInclusiveVATCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acSSDModeOfTransport",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acSSDModeOfTransport",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acPrivateRec",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "acPrivateRec",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "acLastOperator",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acLastOperator",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acDocDeliveryMode",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acDocDeliveryMode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acSendHTML",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "acSendHTML",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "acEmailAddr",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acEmailAddr",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acOfficeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acOfficeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acDefTagNo",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acDefTagNo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acUserDef5",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acUserDef5",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acUserDef6",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acUserDef6",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acUserDef7",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acUserDef7",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acUserDef8",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acUserDef8",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acUserDef9",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acUserDef9",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acUserDef10",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acUserDef10",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acBankSortCode",
											"type": "Byte[]",
											"physicalType": "varbinary"
										},
										"sink": {
											"name": "acBankSortCode",
											"type": "Byte[]",
											"physicalType": "varbinary"
										}
									},
									{
										"source": {
											"name": "acBankAccountCode",
											"type": "Byte[]",
											"physicalType": "varbinary"
										},
										"sink": {
											"name": "acBankAccountCode",
											"type": "Byte[]",
											"physicalType": "varbinary"
										}
									},
									{
										"source": {
											"name": "acMandateID",
											"type": "Byte[]",
											"physicalType": "varbinary"
										},
										"sink": {
											"name": "acMandateID",
											"type": "Byte[]",
											"physicalType": "varbinary"
										}
									},
									{
										"source": {
											"name": "acMandateDate",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acMandateDate",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acDeliveryPostCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acDeliveryPostCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acSubType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acSubType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acLongAcCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acLongAcCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acAllowOrderPayments",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "acAllowOrderPayments",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "acOrderPaymentsGLCode",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acOrderPaymentsGLCode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acCountry",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acCountry",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acDeliveryCountry",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acDeliveryCountry",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acPPDMode",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acPPDMode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acDefaultToQR",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "acDefaultToQR",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "acTaxRegion",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acTaxRegion",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acAnonymisationStatus",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acAnonymisationStatus",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acAnonymisedDate",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acAnonymisedDate",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acAnonymisedTime",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acAnonymisedTime",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acRCEndUser",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acRCEndUser",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PositionId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PositionId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_Exchequer",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "ExchequerVendors"
								}
							}
						]
					},
					{
						"name": "Export Vendors",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Export Vendors to YardiStage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT \n    CompanyCode\n    ,LatestDate\n    ,acCode\n    ,acCustSupp\n    ,acCompany\n    ,acArea\n    ,acAccType\n    ,acStatementTo\n    ,acVATRegNo\n    ,acAddressLine1\n    ,acAddressLine2\n    ,acAddressLine3\n    ,acAddressLine4\n    ,acAddressLine5\n    ,acDespAddr\n    ,acDespAddressLine1\n    ,acDespAddressLine2\n    ,acDespAddressLine3\n    ,acDespAddressLine4\n    ,acDespAddressLine5\n    ,acContact\n    ,acPhone\n    ,acFax\n    ,acTheirAcc\n    ,acOwnTradTerm\n    ,acTradeTerms1\n    ,acTradeTerms2\n    ,acCurrency\n    ,acVATCode\n    ,acPayTerms\n    ,acCreditLimit\n    ,acDiscount\n    ,acCreditStatus\n    ,acCostCentre\n    ,acDiscountBand\n    ,acOrderConsolidationMode\n    ,acDefSettleDays\n    ,acSpare5\n    ,acBalance\n    ,acDepartment\n    ,acECMember\n    ,acNLineCount\n    ,acStatement\n    ,acSalesGL\n    ,acLocation\n    ,acAccStatus\n    ,acPayType\n    ,acOldBankSort\n    ,acOldBankAcc\n    ,acBankRef\n    ,acAvePay\n    ,acPhone2\n    ,acCOSGL\n    ,acDrCrGL\n    ,acLastUsed\n    ,acUserDef1\n    ,acUserDef2\n    ,acInvoiceTo\n    ,acSOPAutoWOff\n    ,acFormSet\n    ,acBookOrdVal\n    ,acDirDebMode\n    ,acCCStart\n    ,acCCEnd\n    ,acCCName\n    ,acCCNumber\n    ,acCCSwitch\n    ,acDefSettleDisc\n    ,acStateDeliveryMode\n    ,acSpare2\n    ,acSendReader\n    ,acEBusPword\n    ,acPostCode\n    ,acAltCode\n    ,acUseForEbus\n    ,acZIPAttachments\n    ,acUserDef3\n    ,acUserDef4\n    ,acWebLiveCatalog\n    ,acWebPrevCatalog\n    ,acTimeStamp\n    ,acVATCountryCode\n    ,acSSDDeliveryTerms\n    ,acInclusiveVATCode\n    ,acSSDModeOfTransport\n    ,acPrivateRec\n    ,acLastOperator\n    ,acDocDeliveryMode\n    ,acSendHTML\n    ,acEmailAddr\n    ,acOfficeType\n    ,acDefTagNo\n    ,acUserDef5\n    ,acUserDef6\n    ,acUserDef7\n    ,acUserDef8\n    ,acUserDef9\n    ,acUserDef10\n    ,acBankSortCode\n    ,acBankAccountCode\n    ,acMandateID\n    ,acMandateDate\n    ,acDeliveryPostCode\n    ,acSubType\n    ,acLongAcCode\n    ,acAllowOrderPayments\n    ,acOrderPaymentsGLCode\n    ,acCountry\n    ,acDeliveryCountry\n    ,acPPDMode\n    ,acDefaultToQR\n    ,acTaxRegion\n    ,acAnonymisationStatus\n    ,acAnonymisedDate\n    ,acAnonymisedTime\n    ,acRCEndUser\n    ,PositionId\nFROM \n    dbo.ExchequerVendors\nWHERE\n    CompanyCode IN (@{variables('CompanyCodeList')})",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": "@concat('Exchequer Vendors - ', utcNow('yyyy-MM-dd'), '.csv')"
								}
							}
						]
					},
					{
						"name": "Clear YardiStage Vendor Table",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "List ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AH2_YardiStage",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].[ExchequerVendors]"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Company List",
						"description": "Sets an array to contain the list of companies required for exporting",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ExchequerCompanyList",
							"value": [
								"'XFR121'",
								"'WTRB06'",
								"'XYWT13'",
								"'XMR122'"
							]
						}
					},
					{
						"name": "List ID",
						"description": "Converts the company IDs in the array to a list variable to be used in the SQL Query Source in Export Vendors",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Company List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "CompanyCodeList",
							"value": {
								"value": "@join(variables('ExchequerCompanyList'), ',')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Export All Vendors",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Export Vendors",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT \n    CompanyCode\n    ,LatestDate\n    ,acCode\n    ,acCustSupp\n    ,acCompany\n    ,acArea\n    ,acAccType\n    ,acStatementTo\n    ,acVATRegNo\n    ,acAddressLine1\n    ,acAddressLine2\n    ,acAddressLine3\n    ,acAddressLine4\n    ,acAddressLine5\n    ,acDespAddr\n    ,acDespAddressLine1\n    ,acDespAddressLine2\n    ,acDespAddressLine3\n    ,acDespAddressLine4\n    ,acDespAddressLine5\n    ,acContact\n    ,acPhone\n    ,acFax\n    ,acTheirAcc\n    ,acOwnTradTerm\n    ,acTradeTerms1\n    ,acTradeTerms2\n    ,acCurrency\n    ,acVATCode\n    ,acPayTerms\n    ,acCreditLimit\n    ,acDiscount\n    ,acCreditStatus\n    ,acCostCentre\n    ,acDiscountBand\n    ,acOrderConsolidationMode\n    ,acDefSettleDays\n    ,acSpare5\n    ,acBalance\n    ,acDepartment\n    ,acECMember\n    ,acNLineCount\n    ,acStatement\n    ,acSalesGL\n    ,acLocation\n    ,acAccStatus\n    ,acPayType\n    ,acOldBankSort\n    ,acOldBankAcc\n    ,acBankRef\n    ,acAvePay\n    ,acPhone2\n    ,acCOSGL\n    ,acDrCrGL\n    ,acLastUsed\n    ,acUserDef1\n    ,acUserDef2\n    ,acInvoiceTo\n    ,acSOPAutoWOff\n    ,acFormSet\n    ,acBookOrdVal\n    ,acDirDebMode\n    ,acCCStart\n    ,acCCEnd\n    ,acCCName\n    ,acCCNumber\n    ,acCCSwitch\n    ,acDefSettleDisc\n    ,acStateDeliveryMode\n    ,acSpare2\n    ,acSendReader\n    ,acEBusPword\n    ,acPostCode\n    ,acAltCode\n    ,acUseForEbus\n    ,acZIPAttachments\n    ,acUserDef3\n    ,acUserDef4\n    ,acWebLiveCatalog\n    ,acWebPrevCatalog\n    ,acTimeStamp\n    ,acVATCountryCode\n    ,acSSDDeliveryTerms\n    ,acInclusiveVATCode\n    ,acSSDModeOfTransport\n    ,acPrivateRec\n    ,acLastOperator\n    ,acDocDeliveryMode\n    ,acSendHTML\n    ,acEmailAddr\n    ,acOfficeType\n    ,acDefTagNo\n    ,acUserDef5\n    ,acUserDef6\n    ,acUserDef7\n    ,acUserDef8\n    ,acUserDef9\n    ,acUserDef10\n    ,acBankSortCode\n    ,acBankAccountCode\n    ,acMandateID\n    ,acMandateDate\n    ,acDeliveryPostCode\n    ,acSubType\n    ,acLongAcCode\n    ,acAllowOrderPayments\n    ,acOrderPaymentsGLCode\n    ,acCountry\n    ,acDeliveryCountry\n    ,acPPDMode\n    ,acDefaultToQR\n    ,acTaxRegion\n    ,acAnonymisationStatus\n    ,acAnonymisedDate\n    ,acAnonymisedTime\n    ,acRCEndUser\n    ,PositionId\nFROM \n    dbo.ExchequerVendors",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('Exchequer All Vendors - ', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Filename": {
						"type": "String"
					},
					"ExchequerCompanyList": {
						"type": "Array"
					},
					"CompanyCodeList": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Yardi/Exchequer"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_YourHippo_WebHook')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Runs the child pipelines that move and process files generated by the webhook/azure function",
				"activities": [
					{
						"name": "Move Files",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_YourHippo_Move_WebHook_files",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Process Users",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Move Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_YourHippo_Process_WebHook_User_Files",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Process Results",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Process Users",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_YourHippo_Process_WebHook_Result_files",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "YourHippo"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCH_Weekly_Mon_6AM')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Once a week, Monday at 6am",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_ColdHarbour_Rooms",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2024-09-06T10:38:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								6
							],
							"weekDays": [
								"Monday"
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sch_EveryDay_AfterMidnight')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Runs everyday just after midnight (00:05)",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_Hydra_Output_File",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-12-17T15:55:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								5
							],
							"hours": [
								0
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sch_EveryDay_Once_10-15pm')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Scheduled to trigger once at 10:15pm, Everyday",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_AEMS_BackupToAveryTables",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "PL_YourHippo_Delete_Archive_Files",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2024-05-30T11:15:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								15
							],
							"hours": [
								22
							],
							"weekDays": [
								"Sunday",
								"Monday",
								"Tuesday",
								"Wednesday",
								"Thursday",
								"Friday",
								"Saturday"
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sch_Monthly_Once_1st_4am')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Once a Month on the 1st",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_CQC_Required_Files",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 1,
						"startTime": "2024-10-25T09:23:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								4
							],
							"monthDays": [
								1
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Softworks')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Employees",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SoftWorks_API_Employee",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Clockings",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Employees",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SoftWorks_API_Clockings",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load data to TRANSFORM_DB",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Clockings",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Softworks_JSON_SQL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Softworks"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-05T14:58:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_Softworks_JSON_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sch_EveryDay_Every30Min')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_YourHippo_WebHook",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2025-03-07T06:00:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								30,
								0
							],
							"hours": [
								9,
								10,
								11,
								12,
								13,
								14,
								15,
								16,
								17
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_YourHippo_WebHook')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sch_EveryDay_Once_2am')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Every day at 2am",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_CareBlox_Download",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-03-12T16:04:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								2
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sch_EveryDay_Once_3am')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Every day at 3am",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_CareBlox_Data_Load",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-04-05T11:03:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								3
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sch_MTWTF_6AM')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Every week day at 6 AM",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_Pricing",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2024-10-10T09:34:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								6
							],
							"weekDays": [
								"Monday",
								"Tuesday",
								"Wednesday",
								"Thursday",
								"Friday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_Pricing')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sch_MTWTF_Once_10pm')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Scheduled to trigger once at 10pm, on Mon, Tue, Wed, Thu, Fri",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_Homes",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "PL_SalariedStaff",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "PL_Agency_HomeName",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "PL_Pricing_CreateOrAlter_Views",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "PL_Avery_RLS_TRANSFORM",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "PL_Agency_WAC",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2024-03-05T21:55:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								22
							],
							"weekDays": [
								"Monday",
								"Tuesday",
								"Wednesday",
								"Thursday",
								"Friday"
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_Homes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sch_MTWTF_Once_9pm')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Every M, T, W, T, F at 9pm",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_Artisan",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "PL_CH_Residents",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2024-07-02T10:32:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								21
							],
							"weekDays": [
								"Monday",
								"Tuesday",
								"Wednesday",
								"Thursday",
								"Friday"
							]
						}
					}
				}
			},
			"dependsOn": []
		}
	]
}