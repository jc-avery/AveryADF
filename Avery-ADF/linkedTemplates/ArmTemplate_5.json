{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Avery-ADF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_Artisan_Occupancy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copies across the Artisan Occupancy Data from AH1 to Artisan DB",
				"activities": [
					{
						"name": "Occupancy Upsert",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Home",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Home",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "HomeID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "HomeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "IntranetID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 4
										},
										"sink": {
											"name": "IntranetID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Private_Occupancy",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Private_Occupancy",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Other_Occupancy",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Other_Occupancy",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Occupancy",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Total_Occupancy",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "DateToday",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "DateToday",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "InRespite_LA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "InRespite_LA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "InRespite_Private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "InRespite_Private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "InLA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "InLA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "In_Private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "In_Private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "TransfLA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "TransfLA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Tranfprivate",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Tranfprivate",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Outchange_of_needs_la",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Outchange_of_needs_la",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "outchange_of_needs_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "outchange_of_needs_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "out_respite_la",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "out_respite_la",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "out_respite_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "out_respite_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "out_AD_LA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "out_AD_LA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Out_AD_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Out_AD_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "outother_la",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "outother_la",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "outother_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "outother_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "budget",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 6
										},
										"sink": {
											"name": "budget",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 6
										}
									},
									{
										"source": {
											"name": "budgetinc",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 10
										},
										"sink": {
											"name": "budgetinc",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 10
										}
									},
									{
										"source": {
											"name": "total_ad",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "total_ad",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "total_rip",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "total_rip",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Closed",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Closed",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "respites",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "respites",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH1_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "vArtisanOccupancy"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AveryArtisan_Artisan",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Artisan",
									"Table": "PWRBI_OCC"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Artisan/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-07-09T15:51:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Avery_RLS_TRANSFORM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy RLS view to TRANSFORM DB",
				"activities": [
					{
						"name": "Avery RLS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"HomeID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "HomeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "HomeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "IntranetID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "IntranetID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "HomeName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HomeData",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeData",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RegionData",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RegionData",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DivisionData",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DivisionData",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HomeSubGroupData",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeSubGroupData",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AllData",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AllData",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Avery",
									"Table": "vRLS"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Avery",
									"Table": "RLS"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "RLS"
				},
				"annotations": [],
				"lastPublishTime": "2024-07-24T08:35:22Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_Courses')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download Courses Data",
						"description": "Connects to Myrus API Courses end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Courses File Name",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_Live_API",
								"type": "DatasetReference",
								"parameters": {
									"Date": {
										"value": "@variables('API_Date')",
										"type": "Expression"
									},
									"Endpoint": "courses"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UsersFileName')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set Courses File Name",
						"description": "Sets the name of the file to be used in the sink data set",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Date for API Call",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UsersFileName",
							"value": {
								"value": "@concat('Courses', '$', formatDateTime(utcNow(), 'dd-MM-yyyy'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Date for API Call",
						"description": "Sets the API query date to previous day at 11:59:59 to capture any changes made since",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "API_Date",
							"value": {
								"value": "@concat(formatDateTime(subtractFromTime(utcNow(), 1, 'Day'), 'yyyyMMdd'), '115959')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Download Failure",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Download Courses Data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('Download Courses Data').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "Download Courses Data"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"UsersFileName": {
						"type": "String"
					},
					"API_Date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-03T15:30:34Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_Download_AllData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download Coursesdata",
						"description": "Connects to Myrus API Courses end point and downloads data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_Live_API_AllData",
								"type": "DatasetReference",
								"parameters": {
									"EndPoint": "courses"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON_AllData",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "AllCoursesData$20241002"
								}
							}
						]
					},
					{
						"name": "Download Users data",
						"description": "Connects to Myrus API user end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Download Coursesdata",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_Live_API_AllData",
								"type": "DatasetReference",
								"parameters": {
									"EndPoint": "users"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON_AllData",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "AllUsersData$20241002"
								}
							}
						]
					},
					{
						"name": "Download User Course data",
						"description": "Connects to Myrus API user-course end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Date for Usercourse endpoint",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:08:00",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_Live_API",
								"type": "DatasetReference",
								"parameters": {
									"Date": {
										"value": "@variables('DateString')",
										"type": "Expression"
									},
									"Endpoint": "user-courses"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "AllUser_CoursesData$20241002"
								}
							}
						]
					},
					{
						"name": "Set Date for Usercourse endpoint",
						"description": "Sets the date to be the 1st of the current year and assigns it to the API dataset",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Download Users data",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "DateString",
							"value": "20210401090000"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"DateString": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-02T09:31:21Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_JSON_SQL_AllData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Users JSON data to SQL table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Upsert DateTime",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "UpsertDateTime",
										"value": {
											"value": "@variables('Upsert_UTCDateTime')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"UserID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['userID']"
										},
										"sink": {
											"name": "UserID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['forename']"
										},
										"sink": {
											"name": "Forename",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['surname']"
										},
										"sink": {
											"name": "Surname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['employeeNumber']"
										},
										"sink": {
											"name": "EmployeeNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['location']"
										},
										"sink": {
											"name": "UserLocation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['jobRole']"
										},
										"sink": {
											"name": "JobRole",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['status']"
										},
										"sink": {
											"name": "UserStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['createdDateTime']"
										},
										"sink": {
											"name": "CreatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['lastUpdatedDateTime']"
										},
										"sink": {
											"name": "APILastUpdatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['UpsertDateTime']"
										},
										"sink": {
											"name": "UpsertDateTime",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['users']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_JSON_AllData",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "AllUsersData$20241002"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Broadshield",
									"Table": "Users"
								}
							}
						]
					},
					{
						"name": "Courses JSON data to SQL table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Users JSON data to SQL table",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "UpsertDateTime",
										"value": {
											"value": "@variables('Upsert_UTCDateTime')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"CourseID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['courseID']"
										},
										"sink": {
											"name": "CourseID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['courseName']"
										},
										"sink": {
											"name": "CourseName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['courseCode']"
										},
										"sink": {
											"name": "CourseCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['courseMandation']"
										},
										"sink": {
											"name": "CourseMandation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['courseExpiry']"
										},
										"sink": {
											"name": "CourseExpiry",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['status']"
										},
										"sink": {
											"name": "CourseStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['createdDateTime']"
										},
										"sink": {
											"name": "CreatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['lastUpdatedDateTime']"
										},
										"sink": {
											"name": "APILastUpdatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['UpsertDateTime']"
										},
										"sink": {
											"name": "UpsertDateTime",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['courses']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_JSON_AllData",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "AllCoursesData$20241002"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Broadshield",
									"Table": "Course"
								}
							}
						]
					},
					{
						"name": "UserCourses JSON data to SQL table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Courses JSON data to SQL table",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "UpsertDateTime",
										"value": {
											"value": "@variables('Upsert_UTCDateTime')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"AssignmentID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['assignmentID']"
										},
										"sink": {
											"name": "AssignmentID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['userID']"
										},
										"sink": {
											"name": "UserID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['courseID']"
										},
										"sink": {
											"name": "CourseID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['assignmentStatus']"
										},
										"sink": {
											"name": "AssignmentStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['assignmentMandation']"
										},
										"sink": {
											"name": "AssignmentMandation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['startedDate']"
										},
										"sink": {
											"name": "StartedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['assessmentStatus']"
										},
										"sink": {
											"name": "AssessmentStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['completionDate']"
										},
										"sink": {
											"name": "CompletionDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['expiryDate']"
										},
										"sink": {
											"name": "ExpiryDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['assignedDate']"
										},
										"sink": {
											"name": "AssignedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['lastUpdatedDateTime']"
										},
										"sink": {
											"name": "APILastUpdatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['UpsertDateTime']"
										},
										"sink": {
											"name": "UpsertDateTime",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['usercourses']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_JSON_AllData",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "AllUser-CoursesData$20241002"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Broadshield",
									"Table": "UserCourses"
								}
							}
						]
					},
					{
						"name": "Set Upsert DateTime",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Upsert_UTCDateTime",
							"value": {
								"value": "@utcNow('yyyy-MM-dd hh:mm:ss')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Upsert_UTCDateTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-02T15:38:19Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_JSON_SQL_Current')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Updates the Broadshield tables that store the current status of the data from the API using files taken from previous Day",
				"activities": [
					{
						"name": "Users JSON data to Current table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Users Filename",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "UpsertDateTime",
										"value": {
											"value": "@variables('UpsertDateTime')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"UserID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['userID']"
										},
										"sink": {
											"name": "UserID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['forename']"
										},
										"sink": {
											"name": "Forename",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['surname']"
										},
										"sink": {
											"name": "Surname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['employeeNumber']"
										},
										"sink": {
											"name": "EmployeeNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['location']"
										},
										"sink": {
											"name": "UserLocation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['jobRole']"
										},
										"sink": {
											"name": "JobRole",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['status']"
										},
										"sink": {
											"name": "UserStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['createdDateTime']"
										},
										"sink": {
											"name": "CreatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['lastUpdatedDateTime']"
										},
										"sink": {
											"name": "APILastUpdatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['UpsertDateTime']"
										},
										"sink": {
											"name": "UpsertDateTime",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['users']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_JSON_PrevDay",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UsersFilename')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Broadshield",
									"Table": "Users"
								}
							}
						]
					},
					{
						"name": "Set Users Filename",
						"description": "Used to set the filename for the file we want to connect to in the dataset (Source)",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set UpsertDateTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UsersFilename",
							"value": {
								"value": "@concat('Users', '$', variables('YesterdayDate'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Courses JSON data to Current table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Courses Filename",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "UpsertDateTime",
										"value": {
											"value": "@variables('UpsertDateTime')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"CourseID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['courseID']"
										},
										"sink": {
											"name": "CourseID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['courseName']"
										},
										"sink": {
											"name": "CourseName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['courseCode']"
										},
										"sink": {
											"name": "CourseCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['courseMandation']"
										},
										"sink": {
											"name": "CourseMandation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['courseExpiry']"
										},
										"sink": {
											"name": "CourseExpiry",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['status']"
										},
										"sink": {
											"name": "CourseStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['createdDateTime']"
										},
										"sink": {
											"name": "CreatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['lastUpdatedDateTime']"
										},
										"sink": {
											"name": "APILastUpdatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['UpsertDateTime']"
										},
										"sink": {
											"name": "UpsertDateTime",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['courses']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_JSON_PrevDay",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('CoursesFilename')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Broadshield",
									"Table": "Course"
								}
							}
						]
					},
					{
						"name": "Set Courses Filename",
						"description": "Used to set the filename for the file we want to connect to in the dataset (Source)",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Users JSON data to Current table",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "CoursesFilename",
							"value": {
								"value": "@concat('Courses', '$', variables('YesterdayDate'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "UserCourses JSON data to Current table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set UserCourses Filename",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "UpsertDateTime",
										"value": {
											"value": "@variables('UpsertDateTime')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"AssignmentID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['assignmentID']"
										},
										"sink": {
											"name": "AssignmentID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['userID']"
										},
										"sink": {
											"name": "UserID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['courseID']"
										},
										"sink": {
											"name": "CourseID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['assignmentStatus']"
										},
										"sink": {
											"name": "AssignmentStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['assignmentMandation']"
										},
										"sink": {
											"name": "AssignmentMandation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['startedDate']"
										},
										"sink": {
											"name": "StartedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['assessmentStatus']"
										},
										"sink": {
											"name": "AssessmentStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['completionDate']"
										},
										"sink": {
											"name": "CompletionDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['expiryDate']"
										},
										"sink": {
											"name": "ExpiryDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['assignedDate']"
										},
										"sink": {
											"name": "AssignedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['lastUpdatedDateTime']"
										},
										"sink": {
											"name": "APILastUpdatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['UpsertDateTime']"
										},
										"sink": {
											"name": "UpsertDateTime",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['usercourses']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_JSON_PrevDay",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UserCourseFilename')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Broadshield",
									"Table": "UserCourses"
								}
							}
						]
					},
					{
						"name": "Set UserCourses Filename",
						"description": "Used to set the filename for the file we want to connect to in the dataset (Source)",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Courses JSON data to Current table",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UserCourseFilename",
							"value": {
								"value": "@concat('UserCourses', '$', variables('YesterdayDate'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Yesterday Date",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "YesterdayDate",
							"value": {
								"value": "@formatDateTime(subtractFromTime(utcNow(), 1, 'Day'), 'dd-MM-yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set UpsertDateTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Yesterday Date",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UpsertDateTime",
							"value": {
								"value": "@utcNow('yyyy-MM-dd hh:mm:ss')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"UsersFilename": {
						"type": "String"
					},
					"CoursesFilename": {
						"type": "String"
					},
					"UserCourseFilename": {
						"type": "String"
					},
					"YesterdayDate": {
						"type": "String"
					},
					"UpsertDateTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-03T09:24:53Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_JSON_SQL_History')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Updates the Broadshield tables that store the history and changes from the API using files taken from previous Days. Data from the json files is inserted into staging tables, then compared to the history tables. When there is a change the record is inserted into history table. This is done this way as future dates/records appear in the JSON files. These future records would be inserted every day, even if there was no change.",
				"activities": [
					{
						"name": "Users JSON data to Users Stage table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Users Filename",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "InsertDateTime",
										"value": {
											"value": "@variables('InsertDateTime')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['userID']"
										},
										"sink": {
											"name": "UserID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['forename']"
										},
										"sink": {
											"name": "Forename",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['surname']"
										},
										"sink": {
											"name": "Surname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['employeeNumber']"
										},
										"sink": {
											"name": "EmployeeNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['location']"
										},
										"sink": {
											"name": "UserLocation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['jobRole']"
										},
										"sink": {
											"name": "JobRole",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['status']"
										},
										"sink": {
											"name": "UserStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['createdDateTime']"
										},
										"sink": {
											"name": "CreatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['lastUpdatedDateTime']"
										},
										"sink": {
											"name": "APILastUpdatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['InsertDateTime']"
										},
										"sink": {
											"name": "InsertDateTime",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['users']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_JSON_PrevDay",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UsersFilename')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Broadshield",
									"Table": "StgUsers"
								}
							}
						]
					},
					{
						"name": "Set Users Filename",
						"description": "Used to set the filename for the file we want to connect to in the dataset (Source)",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set InsertDateTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UsersFilename",
							"value": {
								"value": "@concat('Users', '$', variables('YesterdayDate'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Courses JSON data to Courses Stage table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Courses Filename",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "InsertDateTime",
										"value": {
											"value": "@variables('InsertDateTime')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['courseID']"
										},
										"sink": {
											"name": "CourseID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['courseName']"
										},
										"sink": {
											"name": "CourseName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['courseCode']"
										},
										"sink": {
											"name": "CourseCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['courseMandation']"
										},
										"sink": {
											"name": "CourseMandation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['courseExpiry']"
										},
										"sink": {
											"name": "CourseExpiry",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['status']"
										},
										"sink": {
											"name": "CourseStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['createdDateTime']"
										},
										"sink": {
											"name": "CreatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['lastUpdatedDateTime']"
										},
										"sink": {
											"name": "APILastUpdatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['InsertDateTime']"
										},
										"sink": {
											"name": "InsertDateTime",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['courses']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_JSON_PrevDay",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('CoursesFilename')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Broadshield",
									"Table": "StgCourse"
								}
							}
						]
					},
					{
						"name": "Set Courses Filename",
						"description": "Used to set the filename for the file we want to connect to in the dataset (Source)",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Users JSON data to Users Stage table",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "CoursesFilename",
							"value": {
								"value": "@concat('Courses', '$', variables('YesterdayDate'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "UserCourses JSON data to UserCourse Stage table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set UserCourses Filename",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "InsertDateTime",
										"value": {
											"value": "@variables('InsertDateTime')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"AssignmentID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['assignmentID']"
										},
										"sink": {
											"name": "AssignmentID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['userID']"
										},
										"sink": {
											"name": "UserID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['courseID']"
										},
										"sink": {
											"name": "CourseID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['assignmentStatus']"
										},
										"sink": {
											"name": "AssignmentStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['assignmentMandation']"
										},
										"sink": {
											"name": "AssignmentMandation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['startedDate']"
										},
										"sink": {
											"name": "StartedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['assessmentStatus']"
										},
										"sink": {
											"name": "AssessmentStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['completionDate']"
										},
										"sink": {
											"name": "CompletionDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['expiryDate']"
										},
										"sink": {
											"name": "ExpiryDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['assignedDate']"
										},
										"sink": {
											"name": "AssignedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['lastUpdatedDateTime']"
										},
										"sink": {
											"name": "APILastUpdatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['InsertDateTime']"
										},
										"sink": {
											"name": "InsertDateTime",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['usercourses']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_JSON_PrevDay",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UserCourseFilename')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Broadshield",
									"Table": "StgUserCourses"
								}
							}
						]
					},
					{
						"name": "Set UserCourses Filename",
						"description": "Used to set the filename for the file we want to connect to in the dataset (Source)",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Courses JSON data to Courses Stage table",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UserCourseFilename",
							"value": {
								"value": "@concat('UserCourses', '$', variables('YesterdayDate'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Yesterday Date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Clear Stg Tables Pre",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "YesterdayDate",
							"value": {
								"value": "@formatDateTime(subtractFromTime(utcNow(), 1, 'Day'), 'dd-MM-yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set InsertDateTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Yesterday Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "InsertDateTime",
							"value": {
								"value": "@utcNow('yyyy-MM-dd hh:mm:ss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Clear Stg Tables Pre",
						"description": "Truncates the stage tables, resetting the Identity Column prior to staging to ensure tables are empty",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Broadshield].[ClearStgTables]"
						},
						"linkedServiceName": {
							"referenceName": "AH2_TRANSFORM_DB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Create History Records",
						"description": "Checks for any new records to be added to the history tables and any changes that need to be added. Records are inserted to keep a history",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "UserCourses JSON data to UserCourse Stage table",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Broadshield].[CreateHistoryRecords]"
						},
						"linkedServiceName": {
							"referenceName": "AH2_TRANSFORM_DB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Clear Stg Tables Post",
						"description": "Clear Stg tables post ",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Create History Records",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Broadshield].[ClearStgTables]"
						},
						"linkedServiceName": {
							"referenceName": "AH2_TRANSFORM_DB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"UsersFilename": {
						"type": "String"
					},
					"CoursesFilename": {
						"type": "String"
					},
					"UserCourseFilename": {
						"type": "String"
					},
					"YesterdayDate": {
						"type": "String"
					},
					"InsertDateTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-03T15:08:45Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_UAT_Courses')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download Coursesdata",
						"description": "Connects to Myrus API Courses end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Courses File Name",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_UAT_API",
								"type": "DatasetReference",
								"parameters": {
									"Date": {
										"value": "@variables('API_Date')",
										"type": "Expression"
									},
									"EndPoint": "courses"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UsersFileName')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set Courses File Name",
						"description": "Sets the name of the file to be used in the sink data set",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Date for API Call",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UsersFileName",
							"value": {
								"value": "@concat('Courses', '$', formatDateTime(utcNow(), 'dd-MM-yyyy'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Date for API Call",
						"description": "Sets the date to be 30 days prior to today",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "API_Date",
							"value": {
								"value": "@formatDateTime(subtractFromTime(utcNow(), 30, 'Day'), 'yyyyMMddHHmmss')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"UsersFileName": {
						"type": "String"
					},
					"API_Date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/UAT"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-26T09:59:30Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_UAT_DownloadAllData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download Coursesdata",
						"description": "Connects to Myrus API Courses end point and downloads data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_UAT_API_AllData",
								"type": "DatasetReference",
								"parameters": {
									"EndPoint": "courses"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "UAT_AllCourseData"
								}
							}
						]
					},
					{
						"name": "Download Users data",
						"description": "Connects to Myrus API user end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Download Coursesdata",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_UAT_API_AllData",
								"type": "DatasetReference",
								"parameters": {
									"EndPoint": "users"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "UAT_AllusersData"
								}
							}
						]
					},
					{
						"name": "Download User Course data",
						"description": "Connects to Myrus API user-course end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Download Users data",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_UAT_API_AllData",
								"type": "DatasetReference",
								"parameters": {
									"EndPoint": "user-courses"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "UAT_Alluser-coursesData"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Broadshield/UAT"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-26T09:42:46Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_UAT_UserCourses')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download User Course data",
						"description": "Connects to Myrus API user-course end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set User Courses File Name",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_UAT_API",
								"type": "DatasetReference",
								"parameters": {
									"Date": {
										"value": "@variables('API_Date')",
										"type": "Expression"
									},
									"EndPoint": "user-courses"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UsersFileName')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set User Courses File Name",
						"description": "Sets the name of the file to be used in the sink data set",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Date for API Call",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UsersFileName",
							"value": {
								"value": "@concat('UserCourses', '$', formatDateTime(utcNow(), 'dd-MM-yyyy'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Date for API Call",
						"description": "Sets the date to be 30 days prior to today",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "API_Date",
							"value": {
								"value": "@formatDateTime(subtractFromTime(utcNow(), 30, 'Day'), 'yyyyMMddHHmmss')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"UsersFileName": {
						"type": "String"
					},
					"API_Date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/UAT"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-26T09:59:30Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_UAT_Users')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download Users data",
						"description": "Connects to Myrus API user end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Users File Name",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_UAT_API",
								"type": "DatasetReference",
								"parameters": {
									"Date": {
										"value": "@variables('API_Date')",
										"type": "Expression"
									},
									"EndPoint": "users"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UsersFileName')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set Users File Name",
						"description": "Sets the name of the file to be used in the sink data set",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Date for API Call",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UsersFileName",
							"value": {
								"value": "@concat('Users', '$', formatDateTime(utcNow(), 'dd-MM-yyyy'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Date for API Call",
						"description": "Sets the date to be 30 days prior to today",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "API_Date",
							"value": {
								"value": "@formatDateTime(subtractFromTime(utcNow(), 30, 'Day'), 'yyyyMMddHHmmss')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"UsersFileName": {
						"type": "String"
					},
					"API_Date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/UAT"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-26T09:59:30Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_UserCourses')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download User Course data",
						"description": "Connects to Myrus API user-course end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set User Courses File Name",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:15:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_Live_API",
								"type": "DatasetReference",
								"parameters": {
									"Date": {
										"value": "@variables('API_Date')",
										"type": "Expression"
									},
									"Endpoint": "user-courses"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UsersFileName')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set User Courses File Name",
						"description": "Sets the name of the file to be used in the sink data set",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Date for API Call",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UsersFileName",
							"value": {
								"value": "@concat('UserCourses', '$', formatDateTime(utcNow(), 'dd-MM-yyyy'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Date for API Call",
						"description": "Sets the API query date to previous day at 11:59:59 to capture any changes made since",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "API_Date",
							"value": {
								"value": "@concat(formatDateTime(subtractFromTime(utcNow(), 1, 'Day'), 'yyyyMMdd'), '115959')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Download Failure",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Download User Course data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('Download User Course Data').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "Download User Course Data"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"UsersFileName": {
						"type": "String"
					},
					"API_Date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-03T15:30:34Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_Users')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download Users data",
						"description": "Connects to Myrus API user end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Users File Name",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_Live_API",
								"type": "DatasetReference",
								"parameters": {
									"Date": {
										"value": "@variables('API_Date')",
										"type": "Expression"
									},
									"Endpoint": "users"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UsersFileName')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set Users File Name",
						"description": "Sets the name of the file to be used in the sink data set",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Date for API Call",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UsersFileName",
							"value": {
								"value": "@concat('Users', '$', formatDateTime(utcNow(), 'dd-MM-yyyy'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Date for API Call",
						"description": "Sets the API query date to previous day at 11:59:59 to capture any changes made since",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "API_Date",
							"value": {
								"value": "@concat(formatDateTime(subtractFromTime(utcNow(), 1, 'Day'), 'yyyyMMdd'), '115959')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Download Failure",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Download Users data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('Download Users Data').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "Download Users Data"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"UsersFileName": {
						"type": "String"
					},
					"API_Date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-03T15:30:34Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CQC_CopyAPI_Responses')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copies the API responses from the file share",
				"activities": [
					{
						"name": "Copy merged location files",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@Concat('Merged_LocationAPIfile', '*', '.json')",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Fileshare",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CQC_locationresponses_file_Binary",
								"type": "DatasetReference",
								"parameters": {
									"FileType": "merged"
								}
							}
						]
					},
					{
						"name": "Copy Original location API files",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy merged location files",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@Concat('LocationAPIfile_', '*', '.json')",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Fileshare",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CQC_locationresponses_file_Binary",
								"type": "DatasetReference",
								"parameters": {
									"FileType": "original"
								}
							}
						]
					},
					{
						"name": "Remove json files from fileshare",
						"type": "Delete",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Copy Original provider API files",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_PolestarStorageAcc_Fileshare",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureFileStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "*.json",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Copy merged provider files",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Original location API files",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@Concat('Merged_ProviderAPIfile', '*', '.json')",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Fileshare",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CQC_providerresponses_file_Binary",
								"type": "DatasetReference",
								"parameters": {
									"FileType": "merged"
								}
							}
						]
					},
					{
						"name": "Copy Original provider API files",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy merged provider files",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@Concat('ProviderAPIfile_', '*', '.json')",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Fileshare",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CQC_providerresponses_file_Binary",
								"type": "DatasetReference",
								"parameters": {
									"FileType": "original"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "CQC/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CQC_Required_Files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Create and copy files to the fileshare that the Python script uses.",
				"activities": [
					{
						"name": "Create-update Locations file",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT location_id AS LocationID, home_name AS HomeName FROM reports.cqc_rating ORDER BY 2 ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"filePattern": "arrayOfObjects"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CQC_HomeLocationList",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy json file to Fileshare",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Create-update Locations file",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureFileStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_CQC_HomeLocationList",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PolestaStorageAcc_Fileshare_Json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy custom Location schema to fileshare",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy json file to Fileshare",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureFileStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_CQC_CustomLocationJSONSchema",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PolestaStorageAcc_Fileshare_Json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Create-update Provider file",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy custom Location schema to fileshare",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT provider_id AS providerID FROM reports.cqc_rating ORDER BY 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"filePattern": "arrayOfObjects"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CQC_ProviderList",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy Provider file to fileshare",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Create-update Provider file",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureFileStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_CQC_ProviderList",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PolestaStorageAcc_Fileshare_Json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy Custom Provider schema to to fileshare",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Provider file to fileshare",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureFileStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_CQC_CustomProviderJSONSchema",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PolestaStorageAcc_Fileshare_Json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "CQC/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CQC_Upsert_HomeAssessment')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Using the location files to add assessment details.",
				"activities": [
					{
						"name": "Set DateTime",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "DateTime",
							"value": {
								"value": "@utcNow('yyyy-MM-dd hh:mm:ss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get File List",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Set DateTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_CQC_Merged_Location_File",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "For Each File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get File List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get File List').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Upsert to HomeCurretRating_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "SourceFileName",
													"value": {
														"value": "@item().Name",
														"type": "Expression"
													}
												},
												{
													"name": "RowTimeStamp",
													"value": {
														"value": "@variables('DateTime')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFileName": {
													"value": "@item().Name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "upsert",
											"upsertSettings": {
												"useTempDB": true,
												"keys": [
													"LocationID"
												]
											},
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['locationId']"
													},
													"sink": {
														"name": "LocationID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['providerId']"
													},
													"sink": {
														"name": "ProviderID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['name']"
													},
													"sink": {
														"name": "HomeName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['onspdLatitude']"
													},
													"sink": {
														"name": "Latitude",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "$['onspdLongitude']"
													},
													"sink": {
														"name": "Longitude",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "$['postalCode']"
													},
													"sink": {
														"name": "PostCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['numberOfBeds']"
													},
													"sink": {
														"name": "NumberOfBeds",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['localAuthority']"
													},
													"sink": {
														"name": "LocalAuthority",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['lastInspection']['date']"
													},
													"sink": {
														"name": "LastInspectionDate",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['lastReport']['publicationDate']"
													},
													"sink": {
														"name": "LastReportDate",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['currentRatings']['overall']['rating']"
													},
													"sink": {
														"name": "OverallRating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['currentRatings']['overall']['keyQuestionRatings'][0]['name']"
													},
													"sink": {
														"name": "KeyQuestion1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['currentRatings']['overall']['keyQuestionRatings'][0]['rating']"
													},
													"sink": {
														"name": "KeyQuestion1Rating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['currentRatings']['overall']['keyQuestionRatings'][1]['name']"
													},
													"sink": {
														"name": "KeyQuestion2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['currentRatings']['overall']['keyQuestionRatings'][1]['rating']"
													},
													"sink": {
														"name": "KeyQuestion2Rating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['currentRatings']['overall']['keyQuestionRatings'][2]['name']"
													},
													"sink": {
														"name": "KeyQuestion3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['currentRatings']['overall']['keyQuestionRatings'][2]['rating']"
													},
													"sink": {
														"name": "KeyQuestion3Rating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['currentRatings']['overall']['keyQuestionRatings'][3]['name']"
													},
													"sink": {
														"name": "KeyQuestion4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['currentRatings']['overall']['keyQuestionRatings'][3]['rating']"
													},
													"sink": {
														"name": "KeyQuestion4Rating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['currentRatings']['overall']['keyQuestionRatings'][4]['name']"
													},
													"sink": {
														"name": "KeyQuestion5",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['currentRatings']['overall']['keyQuestionRatings'][4]['rating']"
													},
													"sink": {
														"name": "KeyQuestion5Rating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['assessmentPlanPublishedDateTime']"
													},
													"sink": {
														"name": "AssessmentPublishedDate",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['assessmentPlanId']"
													},
													"sink": {
														"name": "AssesementPlanID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['title']"
													},
													"sink": {
														"name": "AssessmentTitle",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['assessmentDate']"
													},
													"sink": {
														"name": "AssessmentDate",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['rating']"
													},
													"sink": {
														"name": "AssessmentRating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['narrative']"
													},
													"sink": {
														"name": "AssessmentNarrative",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['keyQuestionRatings'][0]['name']"
													},
													"sink": {
														"name": "AssessmentKeyQuestion1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['keyQuestionRatings'][0]['rating']"
													},
													"sink": {
														"name": "AssessmentKeyQuestion1Rating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['keyQuestionRatings'][1]['name']"
													},
													"sink": {
														"name": "AssessmentKeyQuestion2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['keyQuestionRatings'][1]['rating']"
													},
													"sink": {
														"name": "AssessmentKeyQuestion2Rating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['keyQuestionRatings'][2]['name']"
													},
													"sink": {
														"name": "AssessmentKeyQuestion3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['keyQuestionRatings'][2]['rating']"
													},
													"sink": {
														"name": "AssessmentKeyQuestion3Rating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['keyQuestionRatings'][3]['name']"
													},
													"sink": {
														"name": "AssessmentKeyQuestion4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['keyQuestionRatings'][3]['rating']"
													},
													"sink": {
														"name": "AssessmentKeyQuestion4Rating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['keyQuestionRatings'][4]['name']"
													},
													"sink": {
														"name": "AssessmentKeyQuestion5",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['keyQuestionRatings'][4]['rating']"
													},
													"sink": {
														"name": "AssessmentKeyQuestion5Rating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['SourceFileName']"
													},
													"sink": {
														"name": "SourceFileName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['RowTimeStamp']"
													},
													"sink": {
														"name": "RowTimeStamp",
														"type": "DateTime"
													}
												}
											],
											"collectionReference": ""
										}
									},
									"inputs": [
										{
											"referenceName": "DS_CQC_Merged_Location_File",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_AH2_TRANSFORM_DB",
											"type": "DatasetReference",
											"parameters": {
												"Schema": "cqc",
												"Table": "HomeCurrentRating"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Post Upsert proc",
						"description": "Executes a procedure that tidies a few of the columns. Sets them to Null where blank",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "For Each File",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[cqc].[PostUpdate$HomeCurrentRating]"
						},
						"linkedServiceName": {
							"referenceName": "AH2_TRANSFORM_DB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"DateTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CQC/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CQC_Upsert_Provider')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set DateTime",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "DateTime",
							"value": {
								"value": "@utcNow('yyyy-MM-dd hh:mm:ss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get File List",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Set DateTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_CQC_Merged_Provider_File",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "For Each File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get File List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get File List').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Upsert to Provider Table",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFileName": {
													"value": "@item().Name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "upsert",
											"upsertSettings": {
												"useTempDB": true,
												"keys": [
													"ProviderID"
												]
											},
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['providerId']"
													},
													"sink": {
														"name": "ProviderID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['name']"
													},
													"sink": {
														"name": "ProviderName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['brandId']"
													},
													"sink": {
														"name": "BrandID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['brandName']"
													},
													"sink": {
														"name": "BrandName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['registrationStatus']"
													},
													"sink": {
														"name": "RegistrationStatus",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['registrationDate']"
													},
													"sink": {
														"name": "RegistrationDate",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['companiesHouseNumber']"
													},
													"sink": {
														"name": "CompaniesHouseNo",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['postalAddressLine1']"
													},
													"sink": {
														"name": "Address1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['postalAddressLine2']"
													},
													"sink": {
														"name": "Address2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['postalAddressTownCity']"
													},
													"sink": {
														"name": "City",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['postalAddressCounty']"
													},
													"sink": {
														"name": "County",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['postalCode']"
													},
													"sink": {
														"name": "Postcode",
														"type": "String"
													}
												}
											],
											"collectionReference": ""
										}
									},
									"inputs": [
										{
											"referenceName": "DS_CQC_Merged_Provider_File",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_AH2_TRANSFORM_DB",
											"type": "DatasetReference",
											"parameters": {
												"Schema": "cqc",
												"Table": "Provider"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"DateTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CQC/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CareBlox-Fileshare')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy care blox zip files to file share",
				"activities": [
					{
						"name": "Copy Zip files",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureFileStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_careblox_Binary",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Fileshare",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Careblox/Children Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-10T11:21:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CareBlox-SQL-upsert')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "UPSERT from Stage tables to final tables in SQL DB",
				"activities": [
					{
						"name": "tblRoles",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "tblTypes",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"RoleID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "RoleID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "RoleID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RoleName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "RoleName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Department",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "Department",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Code",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AvailableToGroup",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "AvailableToGroup",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZStorage_careblox_parquet_file",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "tblRoles$",
									"DateString": {
										"value": "@variables('DateString')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Careblox_Roles",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "tblTypes",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set DateString",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "TypeID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "TypeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TypeName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "TypeName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TypeDescription",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "TypeDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PayGroup",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "PayGroup",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StarCode",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "StarCode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "OffDutyGroup",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "OffDutyGroup",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "IsDefault",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "IsDefault",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "IsDefaultMultiplier",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "IsDefaultMultiplier",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CSLCode",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "CSLCode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "IsDefault2",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "IsDefault2",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "IsDefault3",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "IsDefault3",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Rosterable",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "Rosterable",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PayType",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "PayType",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "AvailableToGroup",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "AvailableToGroup",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZStorage_careblox_parquet_file",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "tblTypes$",
									"DateString": {
										"value": "@variables('DateString')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZStorage_careblox_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Upsert to TtblEmpJobs",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "tblRoles",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\n    stgtblEmpJobs.JobAutoId,\n    stgtblEmpJobs.EmployeeID,\n    stgtblEmpJobs.ContractedHours,\n    stgtblEmpJobs.Department,\n    stgtblEmpJobs.Role,\n    stgtblEmpJobs.JobNo,\n    DATEADD(s, StartDate, '1970-01-01 00:00:00') AS StartDate,\n    stgtblEmpJobs.Holidays,\n    stgtblEmpJobs.HolidayFull,\n    stgtblEmpJobs.SentToUnit,\n    stgtblEmpJobs.BreakRule,\n    stgtblEmpJobs.ContractID,\n    stgtblEmpJobs.Deleted,\n    DATEADD(s, StartDate, '1970-01-01 00:00:00') AS LastUpdate,\n    stgtblEmpJobs.WorkingArrangements,\n    stgtblEmpJobs.VHEnabled,\n    stgtblEmpJobs.VHBalance,\n    NULL AS VHBalanceDate,\n    stgtblEmpJobs.SicknessThreshold,\n    stgtblEmpJobs.SourceFileName\nFROM \n    CareBlox.STGtblEmpJobs",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"JobAutoID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "JobAutoId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "JobAutoID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ContractedHours",
											"type": "Single",
											"physicalType": "real"
										},
										"sink": {
											"name": "ContractedHours",
											"type": "Single",
											"physicalType": "real"
										}
									},
									{
										"source": {
											"name": "Department",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "Department",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "Role",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "Role",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "JobNo",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "JobNo",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "StartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "StartDate",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									},
									{
										"source": {
											"name": "Holidays",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Holidays",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "HolidayFull",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "HolidayFull",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "BreakRule",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "BreakRule",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "ContractID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ContractID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Deleted",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Deleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "LastUpdate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "LastUpdate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "WorkingArrangements",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkingArrangements",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "VHEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "VHEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "VHBalance",
											"type": "Single",
											"physicalType": "real"
										},
										"sink": {
											"name": "VHBalance",
											"type": "Single",
											"physicalType": "real"
										}
									},
									{
										"source": {
											"name": "SicknessThreshold",
											"type": "Single",
											"physicalType": "real"
										},
										"sink": {
											"name": "SicknessThreshold",
											"type": "Single",
											"physicalType": "real"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Query",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Careblox_EmpJobs",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Upsert to tblEmployees",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Upsert to TtblEmpJobs",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \n    EmployeeAutoID,\n    EmployeeID,\n    Title,\n    Forename,\n    Middlename,\n    Surname,\n    LocationID,\n    AddressLine1,\n    AddressLine2,\n    AddressLine3,\n    AddressLine4,\n    AddressLine5,\n    PostCode,\n    Country,\n    Telephone,\n    Mobile,\n    Email,\n    CASE \n        WHEN BirthDate < 0 THEN DATEADD(DAY, -(ABS(BirthDate) / 86400), '1970-01-01') --Convert EPOCH number to a positive with ABS(). Divide by 86400 seconds in a day. Subtract this from 1970-01-01\n        ELSE DATEADD(s, BirthDate, '1970-01-01 00:00:00') \n    END AS BirthDate,\n    CountryOfBirth,\n    YearOfEntry,\n    DATEADD(s, DateStarted, '1970-01-01 00:00:00') AS DateStarted,\n    DATEADD(s, LeavingDate, '1970-01-01 00:00:00') AS LeavingDate,\n    LeavingEnteredBy,\n    DATEADD(s, LeavingEnteredOn, '1970-01-01 00:00:00') AS LeavingEnteredOn,\n    Gender,\n    NINumber,\n    EthnicOrigin,\n    Religion,\n    Disability,\n    Nationality,\n    Dependants,\n    AccountNumber,\n    AccountName,\n    SortCode,\n    BankName,\n    BankBranch,\n    BuildingSocRef,\n    MaritalStatus,\n    PayMethod,\n    UploadAsNewStarter,\n    NeedsUploading,\n    HasLeft,\n    PackageID,\n    ImportPackageID,\n    ContractedHours,\n    DefaultPayRate,\n    LeavingReason,\n    LeavingDestination,\n    IncludeInNextPay,\n    OnSick,\n    Export,\n    SageID,\n    TATagID,\n    BankStaff,\n    PostCodeSearch,\n    WorkingTimeWaiver,\n    SentToUnit,\n    BatchID,\n    EmployeeType,\n    HolidayMonthStart,\n    CreatedByID,\n    CreatedByName,\n    DATEADD(s, CreatedDate, '1970-01-01 00:00:00') AS CreatedDate,\n    ShortDisplayName,\n    DisplayColour,\n    ApproverName,\n    ApproverID,\n    IsApprover,\n    TAApprover,\n    RosterUnitList,\n    PrimaryRosterUnit,\n    PortalEnabled,\n    PortalPassword,\n    NoticePeriod,\n    DATEADD(s, DataUpgradedDate, '1970-01-01 00:00:00') AS DataUpgradedDate,\n    DataUpgradedBy,\n    SourceFileName\n  FROM \n    CareBlox.STGtblEmployees",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"EmployeeAutoID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EmployeeAutoID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "EmployeeAutoID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Title",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Title",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Forename",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Forename",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Middlename",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Middlename",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Surname",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Surname",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AddressLine1",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AddressLine1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AddressLine2",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AddressLine2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AddressLine3",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AddressLine3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AddressLine4",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AddressLine4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AddressLine5",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AddressLine5",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PostCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PostCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Country",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Country",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Telephone",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Telephone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Mobile",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Mobile",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Email",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Email",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BirthDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "BirthDate",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									},
									{
										"source": {
											"name": "CountryOfBirth",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CountryOfBirth",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "YearOfEntry",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "YearOfEntry",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DateStarted",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateStarted",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									},
									{
										"source": {
											"name": "LeavingDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "LeavingDate",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									},
									{
										"source": {
											"name": "LeavingEnteredBy",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "LeavingEnteredBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LeavingEnteredOn",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "LeavingEnteredOn",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Gender",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NINumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "NINumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EthnicOrigin",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EthnicOrigin",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Religion",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Religion",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Disability",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Disability",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Nationality",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Nationality",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Dependants",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "Dependants",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccountName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AccountName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SortCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SortCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BankName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BankName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BankBranch",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BankBranch",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BuildingSocRef",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BuildingSocRef",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MaritalStatus",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MaritalStatus",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PayMethod",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PayMethod",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UploadAsNewStarter",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "UploadAsNewStarter",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "NeedsUploading",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "NeedsUploading",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "HasLeft",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "HasLeft",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PackageID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PackageID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ImportPackageID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ImportPackageID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ContractedHours",
											"type": "Single",
											"physicalType": "real"
										},
										"sink": {
											"name": "ContractedHours",
											"type": "Single",
											"physicalType": "real"
										}
									},
									{
										"source": {
											"name": "DefaultPayRate",
											"type": "Single",
											"physicalType": "real"
										},
										"sink": {
											"name": "DefaultPayRate",
											"type": "Single",
											"physicalType": "real"
										}
									},
									{
										"source": {
											"name": "LeavingReason",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LeavingReason",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LeavingDestination",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LeavingDestination",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IncludeInNextPay",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IncludeInNextPay",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "OnSick",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "OnSick",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "Export",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Export",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SageID",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "SageID",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "TATagID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TATagID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BankStaff",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "BankStaff",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PostCodeSearch",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PostCodeSearch",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkingTimeWaiver",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "WorkingTimeWaiver",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "BatchID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BatchID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmployeeType",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "EmployeeType",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "HolidayMonthStart",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "HolidayMonthStart",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreatedByID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CreatedByID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreatedByName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedByName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ShortDisplayName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ShortDisplayName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DisplayColour",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DisplayColour",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ApproverName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ApproverName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ApproverID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ApproverID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsApprover",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsApprover",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "TAApprover",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TAApprover",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RosterUnitList",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RosterUnitList",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PrimaryRosterUnit",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PrimaryRosterUnit",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PortalEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "PortalEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PortalPassword",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PortalPassword",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "NoticePeriod",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "NoticePeriod",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "DataUpgradedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DataUpgradedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DataUpgradedBy",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DataUpgradedBy",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Query",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Careblox_Employees",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Upsert to tblPayrollData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Upsert to tblEmployees",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\n    PayrollID,\n    EmployeeID,\n    EmployeeName,\n    LocationID,\n    RoleID,\n    Role,\n    TypeID,\n    Type,\n    Rate,\n    Units,\n    Comment,\n    DATEADD(s, EnteredDate, '1970-01-01 00:00:00') AS EnteredDate,\n    EnteredBy,\n    EnteredByName,\n    PeriodNo,\n    HasVariance,\n    MonthSplit,\n    Comitted,\n    DATEADD(s, ApprovedDate, '1970-01-01 00:00:00') AS ApprovedDate,\n    ApprovedBy,\n    ApprovedByName,\n    ImportedFromTA,\n    WorkedLocationID,\n    BatchID,\n    DATEADD(s, ItemDate, '1970-01-01 00:00:00') AS ItemDate,\n    SourceFileName\nFROM \n    CareBlox.STGtblPayrollData",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"PayrollID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "PayrollID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PayrollID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EmployeeName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EmployeeName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RoleID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RoleID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Role",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Role",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TypeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TypeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Rate",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "Rate",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "Units",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Units",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Comment",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Comment",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EnteredDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "EnteredDate",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									},
									{
										"source": {
											"name": "EnteredBy",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EnteredBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EnteredByName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EnteredByName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PeriodNo",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PeriodNo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "HasVariance",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "HasVariance",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "MonthSplit",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MonthSplit",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Comitted",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Comitted",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ApprovedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ApprovedDate",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									},
									{
										"source": {
											"name": "ApprovedBy",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ApprovedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ApprovedByName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ApprovedByName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ImportedFromTA",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "ImportedFromTA",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "WorkedLocationID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkedLocationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BatchID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BatchID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ItemDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ItemDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Query",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Careblox_Payroll",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "tblPeriods",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Upsert to tblPayrollData",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \n    PeriodID,\n    CurrentPeriodNum,\n    DATEADD(s, DateCreated, '1970-01-01 00:00:00') AS DateCreated,\n    LocationID,\n    DateRange,\n    GeneratedPayroll,\n    CONCAT(SUBSTRING(DateRange, 7, 4), '-', SUBSTRING(DateRange, 4, 2), '-', SUBSTRING(DateRange, 1, 2)) AS FromDate,\n    CONCAT(SUBSTRING(DateRange, 20, 4), '-', SUBSTRING(DateRange, 17, 2), '-', SUBSTRING(DateRange, 14, 2)) AS ToDate,\n    SourceFileName\nFROM \n    CareBlox.STGtblPeriods\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"PeriodID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "PeriodID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PeriodID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CurrentPeriodNum",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CurrentPeriodNum",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DateCreated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateCreated",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									},
									{
										"source": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DateRange",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DateRange",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "GeneratedPayroll",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "GeneratedPayroll",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "FromDate",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FromDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "ToDate",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ToDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Query",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Careblox_Periods",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "tblRates",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "tblPeriods",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \n    RatesAutoID,\n    EmployeeID,\n    RoleID,\n    TypeID,\n    Rate,\n    IsDefault,\n    SentToUnit,\n    Deleted,\n    DATEADD(s, LastUpdate, '1970-01-01 00:00:00') AS LastUpdate,\n    SourceFileName\nFROM \n    CareBlox.STGtblRates",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"RatesAutoID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "RatesAutoID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RatesAutoID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RoleID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RoleID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TypeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TypeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Rate",
											"type": "Decimal",
											"physicalType": "smallmoney",
											"scale": 4,
											"precision": 10
										},
										"sink": {
											"name": "Rate",
											"type": "Decimal",
											"physicalType": "smallmoney",
											"scale": 4,
											"precision": 10
										}
									},
									{
										"source": {
											"name": "IsDefault",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsDefault",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Deleted",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Deleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "LastUpdate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "LastUpdate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Query",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Careblox_Rates",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "tblShifts",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "tblRates",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \n    ShiftID,\n    HomeID,\n    EmployeeID,\n    RoleID,\n    DATEADD(s, ShiftStart, '1970-01-01 00:00:00') AS ShiftStart,\n    DATEADD(s, ShiftEnd, '1970-01-01 00:00:00') AS ShiftEnd,\n    PayRate,\n    Department,\n    Type,\n    SentToUnit,\n    Deleted,\n    RosterUnitID,\n    CreatedBy,\n    DATEADD(s, CreatedDate, '1970-01-01 00:00:00') AS CreatedDate,\n    DeletedBy,\n    DATEADD(s, DeletedDate, '1970-01-01 00:00:00') AS DeletedDate,\n    ITG_SourceID,\n    ITG_SourceName,\n    ITG_Status,\n    RosterType,\n    SourceFileName\nFROM \n    CareBlox.STGtblShifts",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ShiftID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ShiftID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ShiftID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "HomeID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RoleID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RoleID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ShiftStart",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ShiftStart",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ShiftEnd",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ShiftEnd",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "PayRate",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PayRate",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Department",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Department",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Deleted",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Deleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "RosterUnitID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RosterUnitID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DeletedBy",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DeletedBy",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DeletedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DeletedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ITG_SourceID",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "ITG_SourceID",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "ITG_SourceName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ITG_SourceName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ITG_Status",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "ITG_Status",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "RosterType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RosterType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Query",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Careblox_Shifts",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "tblTAData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "tblShifts",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\n    LocalID,\n    TAID,\n    EmployeeID,\n    HomeID,\n    RoleID,\n    ShiftID,\n    TAStatus,\n    DATEADD(s, TADateIn, '1970-01-01 00:00:00') AS TADateIn,\n    DATEADD(s, ActualDateIn, '1970-01-01 00:00:00') AS ActualDateIn,\n    DATEADD(s, ConfirmedDateIn, '1970-01-01 00:00:00') AS ConfirmedDateIn,\n    EarlyInFlag,\n    EarlyInComment,\n    LateInFlag,\n    LateInComment,\n    DATEADD(s, TADateOut, '1970-01-01 00:00:00') AS TADateOut,\n    DATEADD(s, ActualDateOut, '1970-01-01 00:00:00') AS ActualDateOut,\n    DATEADD(s, ConfirmedDateOut, '1970-01-01 00:00:00') AS ConfirmedDateOut,\n    EarlyOutFlag,\n    EarlyOutComment,\n    LateOutFlag,\n    LateOutComment,\n    ManagerApprovalRequiredIn,\n    ManagerApprovalRequiredOut,\n    RecordedMinutes,\n    TATagID,\n    ImageFilename,\n    Imported,\n    SrcUnit,\n    ExternalWorkerName,\n    SourceFileName\nFROM \n    CareBlox.STGtblTAData",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"LocalID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "LocalID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LocalID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TAID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TAID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HomeID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RoleID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RoleID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ShiftID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ShiftID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TAStatus",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TAStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TADateIn",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "TADateIn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ActualDateIn",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ActualDateIn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ConfirmedDateIn",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ConfirmedDateIn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "EarlyInFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "EarlyInFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "EarlyInComment",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EarlyInComment",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LateInFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "LateInFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "LateInComment",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LateInComment",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TADateOut",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "TADateOut",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ActualDateOut",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ActualDateOut",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ConfirmedDateOut",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ConfirmedDateOut",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "EarlyOutFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "EarlyOutFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "EarlyOutComment",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EarlyOutComment",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LateOutFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "LateOutFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "LateOutComment",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LateOutComment",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ManagerApprovalRequiredIn",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "ManagerApprovalRequiredIn",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "ManagerApprovalRequiredOut",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "ManagerApprovalRequiredOut",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "RecordedMinutes",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "RecordedMinutes",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "TATagID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TATagID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ImageFilename",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ImageFilename",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Imported",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Imported",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "SrcUnit",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SrcUnit",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ExternalWorkerName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ExternalWorkerName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Query",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Careblox_TAData",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Set DateString",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "DateString",
							"value": {
								"value": "@utcNow('dd-MM-yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Upsert to TtblEmpJobs Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Upsert to TtblEmpJobs",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('Upsert to TtblEmpJobs').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "Upsert to TtblEmpJobs"
							}
						}
					},
					{
						"name": "tblTypes Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "tblTypes",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('tblTypes').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "tblTypes"
							}
						}
					},
					{
						"name": "tblRoles Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "tblRoles",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('tblRoles').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "tblRoles"
							}
						}
					},
					{
						"name": "Upsert to tblEmployees Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Upsert to tblEmployees",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('Upsert to tblEmployees').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "Upsert to tblEmployees"
							}
						}
					},
					{
						"name": "Upsert to tblPayrollData Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Upsert to tblPayrollData",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('Upsert to tblPayrollData').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "Upsert to tblPayrollData"
							}
						}
					},
					{
						"name": "tblPeriods Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "tblPeriods",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('tblPeriods').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "tblPeriods"
							}
						}
					},
					{
						"name": "tblRates Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "tblRates",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('tblRates').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "tblRates"
							}
						}
					},
					{
						"name": "tblShifts Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "tblShifts",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('tblShifts').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "tblShifts"
							}
						}
					},
					{
						"name": "tblTAData Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "tblTAData",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('tblTAData').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "tblTAData"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"DateString": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Careblox/Children Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-02T09:32:42Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CareBlox-bak-Files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Downloads .bak files from the CareBlox FTP",
				"activities": [
					{
						"name": "Download FTP Files",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set FileName Wildcard",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.00:15:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FtpReadSettings",
									"recursive": false,
									"wildcardFileName": {
										"value": "@variables('FileName')",
										"type": "Expression"
									},
									"useBinaryTransfer": true,
									"deleteFilesAfterCompletion": false,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"blockSizeInMB": 50
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_CareBlox_FTP_Files",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_careblox_Binary",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Set Todays Date",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Today",
							"value": {
								"value": "@formatDateTime(utcNow(), 'yyyy_M_d')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set FileName Wildcard",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Todays Date",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "FileName",
							"value": {
								"value": "@concat('AveryCare*lox*_',variables('Today'), '_*.zip')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"FileName": {
						"type": "String"
					},
					"Today": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Careblox/Children Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-10T11:21:25Z"
			},
			"dependsOn": []
		}
	]
}