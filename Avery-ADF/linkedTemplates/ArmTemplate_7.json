{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Avery-ADF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_Artisan_vRLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Artisan RLS data",
				"activities": [
					{
						"name": "Artisan vRLS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \n    H.[HomeID]\n    ,H.[IntranetID]\n    ,H.[HomeName]\n    ,[HomeData]\n    ,[RegionData]\n    ,[DivisionData]\n    ,[HomeSubGroupData]\n    ,[AllData]\nFROM \n    [Avery].[vRLS] AS R\n  \n    INNER JOIN Avery.Home AS H\n        ON H.HomeID = R.HomeID\nWHERE\n    H.HomeSubGroupID = 2",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"HomeID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "HomeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "HomeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "IntranetID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "IntranetID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "HomeName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HomeData",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeData",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RegionData",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RegionData",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DivisionData",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DivisionData",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HomeSubGroupData",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeSubGroupData",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AllData",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AllData",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AveryArtisan_Artisan",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Artisan",
									"Table": "RLS"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Artisan/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Avery_RLS_TRANSFORM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy RLS view to TRANSFORM DB",
				"activities": [
					{
						"name": "Avery RLS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"HomeID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "HomeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "HomeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "IntranetID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "IntranetID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "HomeName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HomeData",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeData",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RegionData",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RegionData",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DivisionData",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DivisionData",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HomeSubGroupData",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeSubGroupData",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AllData",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AllData",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Avery",
									"Table": "vRLS"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Avery",
									"Table": "RLS"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "RLS"
				},
				"annotations": [],
				"lastPublishTime": "2024-07-24T08:35:22Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_Courses')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download Courses Data",
						"description": "Connects to Myrus API Courses end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Courses File Name",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_Live_API",
								"type": "DatasetReference",
								"parameters": {
									"Date": {
										"value": "@variables('API_Date')",
										"type": "Expression"
									},
									"Endpoint": "courses"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UsersFileName')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set Courses File Name",
						"description": "Sets the name of the file to be used in the sink data set",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Date for API Call",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UsersFileName",
							"value": {
								"value": "@concat('Courses', '$', formatDateTime(utcNow(), 'dd-MM-yyyy'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Date for API Call",
						"description": "Sets the API query date to previous day at 11:59:59 to capture any changes made since",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "API_Date",
							"value": {
								"value": "@concat(formatDateTime(subtractFromTime(utcNow(), 1, 'Day'), 'yyyyMMdd'), '115959')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Download Failure",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Download Courses Data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('Download Courses Data').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "Download Courses Data"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"UsersFileName": {
						"type": "String"
					},
					"API_Date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-03T15:30:34Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_Download_AllData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download Coursesdata",
						"description": "Connects to Myrus API Courses end point and downloads data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_Live_API_AllData",
								"type": "DatasetReference",
								"parameters": {
									"EndPoint": "courses"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON_AllData",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "AllCoursesData$20241002"
								}
							}
						]
					},
					{
						"name": "Download Users data",
						"description": "Connects to Myrus API user end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Download Coursesdata",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_Live_API_AllData",
								"type": "DatasetReference",
								"parameters": {
									"EndPoint": "users"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON_AllData",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "AllUsersData$20241002"
								}
							}
						]
					},
					{
						"name": "Download User Course data",
						"description": "Connects to Myrus API user-course end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Date for Usercourse endpoint",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:08:00",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_Live_API",
								"type": "DatasetReference",
								"parameters": {
									"Date": {
										"value": "@variables('DateString')",
										"type": "Expression"
									},
									"Endpoint": "user-courses"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "AllUser_CoursesData$20241002"
								}
							}
						]
					},
					{
						"name": "Set Date for Usercourse endpoint",
						"description": "Sets the date to be the 1st of the current year and assigns it to the API dataset",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Download Users data",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "DateString",
							"value": "20210401090000"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"DateString": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-02T09:31:21Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_JSON_SQL_AllData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Users JSON data to SQL table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Upsert DateTime",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "UpsertDateTime",
										"value": {
											"value": "@variables('Upsert_UTCDateTime')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"UserID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['userID']"
										},
										"sink": {
											"name": "UserID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['forename']"
										},
										"sink": {
											"name": "Forename",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['surname']"
										},
										"sink": {
											"name": "Surname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['employeeNumber']"
										},
										"sink": {
											"name": "EmployeeNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['location']"
										},
										"sink": {
											"name": "UserLocation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['jobRole']"
										},
										"sink": {
											"name": "JobRole",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['status']"
										},
										"sink": {
											"name": "UserStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['createdDateTime']"
										},
										"sink": {
											"name": "CreatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['lastUpdatedDateTime']"
										},
										"sink": {
											"name": "APILastUpdatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['UpsertDateTime']"
										},
										"sink": {
											"name": "UpsertDateTime",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['users']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_JSON_AllData",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "AllUsersData$20241002"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Broadshield",
									"Table": "Users"
								}
							}
						]
					},
					{
						"name": "Courses JSON data to SQL table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Users JSON data to SQL table",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "UpsertDateTime",
										"value": {
											"value": "@variables('Upsert_UTCDateTime')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"CourseID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['courseID']"
										},
										"sink": {
											"name": "CourseID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['courseName']"
										},
										"sink": {
											"name": "CourseName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['courseCode']"
										},
										"sink": {
											"name": "CourseCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['courseMandation']"
										},
										"sink": {
											"name": "CourseMandation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['courseExpiry']"
										},
										"sink": {
											"name": "CourseExpiry",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['status']"
										},
										"sink": {
											"name": "CourseStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['createdDateTime']"
										},
										"sink": {
											"name": "CreatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['lastUpdatedDateTime']"
										},
										"sink": {
											"name": "APILastUpdatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['UpsertDateTime']"
										},
										"sink": {
											"name": "UpsertDateTime",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['courses']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_JSON_AllData",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "AllCoursesData$20241002"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Broadshield",
									"Table": "Course"
								}
							}
						]
					},
					{
						"name": "UserCourses JSON data to SQL table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Courses JSON data to SQL table",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "UpsertDateTime",
										"value": {
											"value": "@variables('Upsert_UTCDateTime')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"AssignmentID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['assignmentID']"
										},
										"sink": {
											"name": "AssignmentID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['userID']"
										},
										"sink": {
											"name": "UserID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['courseID']"
										},
										"sink": {
											"name": "CourseID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['assignmentStatus']"
										},
										"sink": {
											"name": "AssignmentStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['assignmentMandation']"
										},
										"sink": {
											"name": "AssignmentMandation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['startedDate']"
										},
										"sink": {
											"name": "StartedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['assessmentStatus']"
										},
										"sink": {
											"name": "AssessmentStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['completionDate']"
										},
										"sink": {
											"name": "CompletionDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['expiryDate']"
										},
										"sink": {
											"name": "ExpiryDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['assignedDate']"
										},
										"sink": {
											"name": "AssignedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['lastUpdatedDateTime']"
										},
										"sink": {
											"name": "APILastUpdatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['UpsertDateTime']"
										},
										"sink": {
											"name": "UpsertDateTime",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['usercourses']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_JSON_AllData",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "AllUser-CoursesData$20241002"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Broadshield",
									"Table": "UserCourses"
								}
							}
						]
					},
					{
						"name": "Set Upsert DateTime",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Upsert_UTCDateTime",
							"value": {
								"value": "@utcNow('yyyy-MM-dd hh:mm:ss')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Upsert_UTCDateTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-02T15:38:19Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_JSON_SQL_Current')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Updates the Broadshield tables that store the current status of the data from the API using files taken from previous Day",
				"activities": [
					{
						"name": "Users JSON data to Current table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Users Filename",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "UpsertDateTime",
										"value": {
											"value": "@variables('UpsertDateTime')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"UserID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['userID']"
										},
										"sink": {
											"name": "UserID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['forename']"
										},
										"sink": {
											"name": "Forename",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['surname']"
										},
										"sink": {
											"name": "Surname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['employeeNumber']"
										},
										"sink": {
											"name": "EmployeeNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['location']"
										},
										"sink": {
											"name": "UserLocation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['jobRole']"
										},
										"sink": {
											"name": "JobRole",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['status']"
										},
										"sink": {
											"name": "UserStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['createdDateTime']"
										},
										"sink": {
											"name": "CreatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['lastUpdatedDateTime']"
										},
										"sink": {
											"name": "APILastUpdatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['UpsertDateTime']"
										},
										"sink": {
											"name": "UpsertDateTime",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['users']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_JSON_PrevDay",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UsersFilename')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Broadshield",
									"Table": "Users"
								}
							}
						]
					},
					{
						"name": "Set Users Filename",
						"description": "Used to set the filename for the file we want to connect to in the dataset (Source)",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set UpsertDateTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UsersFilename",
							"value": {
								"value": "@concat('Users', '$', variables('YesterdayDate'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Courses JSON data to Current table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Courses Filename",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "UpsertDateTime",
										"value": {
											"value": "@variables('UpsertDateTime')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"CourseID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['courseID']"
										},
										"sink": {
											"name": "CourseID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['courseName']"
										},
										"sink": {
											"name": "CourseName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['courseCode']"
										},
										"sink": {
											"name": "CourseCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['courseMandation']"
										},
										"sink": {
											"name": "CourseMandation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['courseExpiry']"
										},
										"sink": {
											"name": "CourseExpiry",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['status']"
										},
										"sink": {
											"name": "CourseStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['createdDateTime']"
										},
										"sink": {
											"name": "CreatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['lastUpdatedDateTime']"
										},
										"sink": {
											"name": "APILastUpdatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['UpsertDateTime']"
										},
										"sink": {
											"name": "UpsertDateTime",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['courses']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_JSON_PrevDay",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('CoursesFilename')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Broadshield",
									"Table": "Course"
								}
							}
						]
					},
					{
						"name": "Set Courses Filename",
						"description": "Used to set the filename for the file we want to connect to in the dataset (Source)",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Users JSON data to Current table",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "CoursesFilename",
							"value": {
								"value": "@concat('Courses', '$', variables('YesterdayDate'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "UserCourses JSON data to Current table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set UserCourses Filename",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "UpsertDateTime",
										"value": {
											"value": "@variables('UpsertDateTime')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"AssignmentID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['assignmentID']"
										},
										"sink": {
											"name": "AssignmentID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['userID']"
										},
										"sink": {
											"name": "UserID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['courseID']"
										},
										"sink": {
											"name": "CourseID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['assignmentStatus']"
										},
										"sink": {
											"name": "AssignmentStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['assignmentMandation']"
										},
										"sink": {
											"name": "AssignmentMandation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['startedDate']"
										},
										"sink": {
											"name": "StartedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['assessmentStatus']"
										},
										"sink": {
											"name": "AssessmentStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['completionDate']"
										},
										"sink": {
											"name": "CompletionDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['expiryDate']"
										},
										"sink": {
											"name": "ExpiryDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['assignedDate']"
										},
										"sink": {
											"name": "AssignedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['lastUpdatedDateTime']"
										},
										"sink": {
											"name": "APILastUpdatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['UpsertDateTime']"
										},
										"sink": {
											"name": "UpsertDateTime",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['usercourses']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_JSON_PrevDay",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UserCourseFilename')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Broadshield",
									"Table": "UserCourses"
								}
							}
						]
					},
					{
						"name": "Set UserCourses Filename",
						"description": "Used to set the filename for the file we want to connect to in the dataset (Source)",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Courses JSON data to Current table",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UserCourseFilename",
							"value": {
								"value": "@concat('UserCourses', '$', variables('YesterdayDate'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Yesterday Date",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "YesterdayDate",
							"value": {
								"value": "@formatDateTime(subtractFromTime(utcNow(), 1, 'Day'), 'dd-MM-yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set UpsertDateTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Yesterday Date",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UpsertDateTime",
							"value": {
								"value": "@utcNow('yyyy-MM-dd hh:mm:ss')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"UsersFilename": {
						"type": "String"
					},
					"CoursesFilename": {
						"type": "String"
					},
					"UserCourseFilename": {
						"type": "String"
					},
					"YesterdayDate": {
						"type": "String"
					},
					"UpsertDateTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-03T09:24:53Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_JSON_SQL_History')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Updates the Broadshield tables that store the history and changes from the API using files taken from previous Days. Data from the json files is inserted into staging tables, then compared to the history tables. When there is a change the record is inserted into history table. This is done this way as future dates/records appear in the JSON files. These future records would be inserted every day, even if there was no change.",
				"activities": [
					{
						"name": "Users JSON data to Users Stage table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Users Filename",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "InsertDateTime",
										"value": {
											"value": "@variables('InsertDateTime')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['userID']"
										},
										"sink": {
											"name": "UserID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['forename']"
										},
										"sink": {
											"name": "Forename",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['surname']"
										},
										"sink": {
											"name": "Surname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['employeeNumber']"
										},
										"sink": {
											"name": "EmployeeNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['location']"
										},
										"sink": {
											"name": "UserLocation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['jobRole']"
										},
										"sink": {
											"name": "JobRole",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['status']"
										},
										"sink": {
											"name": "UserStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['createdDateTime']"
										},
										"sink": {
											"name": "CreatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['lastUpdatedDateTime']"
										},
										"sink": {
											"name": "APILastUpdatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['InsertDateTime']"
										},
										"sink": {
											"name": "InsertDateTime",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['users']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_JSON_PrevDay",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UsersFilename')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Broadshield",
									"Table": "StgUsers"
								}
							}
						]
					},
					{
						"name": "Set Users Filename",
						"description": "Used to set the filename for the file we want to connect to in the dataset (Source)",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set InsertDateTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UsersFilename",
							"value": {
								"value": "@concat('Users', '$', variables('YesterdayDate'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Courses JSON data to Courses Stage table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Courses Filename",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "InsertDateTime",
										"value": {
											"value": "@variables('InsertDateTime')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['courseID']"
										},
										"sink": {
											"name": "CourseID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['courseName']"
										},
										"sink": {
											"name": "CourseName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['courseCode']"
										},
										"sink": {
											"name": "CourseCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['courseMandation']"
										},
										"sink": {
											"name": "CourseMandation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['courseExpiry']"
										},
										"sink": {
											"name": "CourseExpiry",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['status']"
										},
										"sink": {
											"name": "CourseStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['createdDateTime']"
										},
										"sink": {
											"name": "CreatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['lastUpdatedDateTime']"
										},
										"sink": {
											"name": "APILastUpdatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['InsertDateTime']"
										},
										"sink": {
											"name": "InsertDateTime",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['courses']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_JSON_PrevDay",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('CoursesFilename')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Broadshield",
									"Table": "StgCourse"
								}
							}
						]
					},
					{
						"name": "Set Courses Filename",
						"description": "Used to set the filename for the file we want to connect to in the dataset (Source)",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Users JSON data to Users Stage table",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "CoursesFilename",
							"value": {
								"value": "@concat('Courses', '$', variables('YesterdayDate'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "UserCourses JSON data to UserCourse Stage table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set UserCourses Filename",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "InsertDateTime",
										"value": {
											"value": "@variables('InsertDateTime')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"AssignmentID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['assignmentID']"
										},
										"sink": {
											"name": "AssignmentID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['userID']"
										},
										"sink": {
											"name": "UserID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['courseID']"
										},
										"sink": {
											"name": "CourseID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['assignmentStatus']"
										},
										"sink": {
											"name": "AssignmentStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['assignmentMandation']"
										},
										"sink": {
											"name": "AssignmentMandation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['startedDate']"
										},
										"sink": {
											"name": "StartedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['assessmentStatus']"
										},
										"sink": {
											"name": "AssessmentStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['completionDate']"
										},
										"sink": {
											"name": "CompletionDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['expiryDate']"
										},
										"sink": {
											"name": "ExpiryDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['assignedDate']"
										},
										"sink": {
											"name": "AssignedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['lastUpdatedDateTime']"
										},
										"sink": {
											"name": "APILastUpdatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['InsertDateTime']"
										},
										"sink": {
											"name": "InsertDateTime",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['usercourses']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_JSON_PrevDay",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UserCourseFilename')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Broadshield",
									"Table": "StgUserCourses"
								}
							}
						]
					},
					{
						"name": "Set UserCourses Filename",
						"description": "Used to set the filename for the file we want to connect to in the dataset (Source)",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Courses JSON data to Courses Stage table",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UserCourseFilename",
							"value": {
								"value": "@concat('UserCourses', '$', variables('YesterdayDate'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Yesterday Date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Clear Stg Tables Pre",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "YesterdayDate",
							"value": {
								"value": "@formatDateTime(subtractFromTime(utcNow(), 1, 'Day'), 'dd-MM-yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set InsertDateTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Yesterday Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "InsertDateTime",
							"value": {
								"value": "@utcNow('yyyy-MM-dd hh:mm:ss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Clear Stg Tables Pre",
						"description": "Truncates the stage tables, resetting the Identity Column prior to staging to ensure tables are empty",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Broadshield].[ClearStgTables]"
						},
						"linkedServiceName": {
							"referenceName": "AH2_TRANSFORM_DB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Create History Records",
						"description": "Checks for any new records to be added to the history tables and any changes that need to be added. Records are inserted to keep a history",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "UserCourses JSON data to UserCourse Stage table",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Broadshield].[CreateHistoryRecords]"
						},
						"linkedServiceName": {
							"referenceName": "AH2_TRANSFORM_DB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Clear Stg Tables Post",
						"description": "Clear Stg tables post ",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Create History Records",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Broadshield].[ClearStgTables]"
						},
						"linkedServiceName": {
							"referenceName": "AH2_TRANSFORM_DB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"UsersFilename": {
						"type": "String"
					},
					"CoursesFilename": {
						"type": "String"
					},
					"UserCourseFilename": {
						"type": "String"
					},
					"YesterdayDate": {
						"type": "String"
					},
					"InsertDateTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-03T15:08:45Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_UAT_Courses')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download Coursesdata",
						"description": "Connects to Myrus API Courses end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Courses File Name",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_UAT_API",
								"type": "DatasetReference",
								"parameters": {
									"Date": {
										"value": "@variables('API_Date')",
										"type": "Expression"
									},
									"EndPoint": "courses"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UsersFileName')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set Courses File Name",
						"description": "Sets the name of the file to be used in the sink data set",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Date for API Call",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UsersFileName",
							"value": {
								"value": "@concat('Courses', '$', formatDateTime(utcNow(), 'dd-MM-yyyy'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Date for API Call",
						"description": "Sets the date to be 30 days prior to today",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "API_Date",
							"value": {
								"value": "@formatDateTime(subtractFromTime(utcNow(), 30, 'Day'), 'yyyyMMddHHmmss')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"UsersFileName": {
						"type": "String"
					},
					"API_Date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/UAT"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-26T09:59:30Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_UAT_DownloadAllData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download Coursesdata",
						"description": "Connects to Myrus API Courses end point and downloads data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_UAT_API_AllData",
								"type": "DatasetReference",
								"parameters": {
									"EndPoint": "courses"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "UAT_AllCourseData"
								}
							}
						]
					},
					{
						"name": "Download Users data",
						"description": "Connects to Myrus API user end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Download Coursesdata",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_UAT_API_AllData",
								"type": "DatasetReference",
								"parameters": {
									"EndPoint": "users"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "UAT_AllusersData"
								}
							}
						]
					},
					{
						"name": "Download User Course data",
						"description": "Connects to Myrus API user-course end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Download Users data",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_UAT_API_AllData",
								"type": "DatasetReference",
								"parameters": {
									"EndPoint": "user-courses"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "UAT_Alluser-coursesData"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Broadshield/UAT"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-26T09:42:46Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_UAT_UserCourses')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download User Course data",
						"description": "Connects to Myrus API user-course end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set User Courses File Name",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_UAT_API",
								"type": "DatasetReference",
								"parameters": {
									"Date": {
										"value": "@variables('API_Date')",
										"type": "Expression"
									},
									"EndPoint": "user-courses"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UsersFileName')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set User Courses File Name",
						"description": "Sets the name of the file to be used in the sink data set",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Date for API Call",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UsersFileName",
							"value": {
								"value": "@concat('UserCourses', '$', formatDateTime(utcNow(), 'dd-MM-yyyy'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Date for API Call",
						"description": "Sets the date to be 30 days prior to today",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "API_Date",
							"value": {
								"value": "@formatDateTime(subtractFromTime(utcNow(), 30, 'Day'), 'yyyyMMddHHmmss')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"UsersFileName": {
						"type": "String"
					},
					"API_Date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/UAT"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-26T09:59:30Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_UAT_Users')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download Users data",
						"description": "Connects to Myrus API user end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Users File Name",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_UAT_API",
								"type": "DatasetReference",
								"parameters": {
									"Date": {
										"value": "@variables('API_Date')",
										"type": "Expression"
									},
									"EndPoint": "users"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UsersFileName')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set Users File Name",
						"description": "Sets the name of the file to be used in the sink data set",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Date for API Call",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UsersFileName",
							"value": {
								"value": "@concat('Users', '$', formatDateTime(utcNow(), 'dd-MM-yyyy'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Date for API Call",
						"description": "Sets the date to be 30 days prior to today",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "API_Date",
							"value": {
								"value": "@formatDateTime(subtractFromTime(utcNow(), 30, 'Day'), 'yyyyMMddHHmmss')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"UsersFileName": {
						"type": "String"
					},
					"API_Date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/UAT"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-26T09:59:30Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_UserCourses')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download User Course data",
						"description": "Connects to Myrus API user-course end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set User Courses File Name",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:15:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_Live_API",
								"type": "DatasetReference",
								"parameters": {
									"Date": {
										"value": "@variables('API_Date')",
										"type": "Expression"
									},
									"Endpoint": "user-courses"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UsersFileName')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set User Courses File Name",
						"description": "Sets the name of the file to be used in the sink data set",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Date for API Call",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UsersFileName",
							"value": {
								"value": "@concat('UserCourses', '$', formatDateTime(utcNow(), 'dd-MM-yyyy'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Date for API Call",
						"description": "Sets the API query date to previous day at 11:59:59 to capture any changes made since",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "API_Date",
							"value": {
								"value": "@concat(formatDateTime(subtractFromTime(utcNow(), 1, 'Day'), 'yyyyMMdd'), '115959')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Download Failure",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Download User Course data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('Download User Course Data').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "Download User Course Data"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"UsersFileName": {
						"type": "String"
					},
					"API_Date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-03T15:30:34Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_Users')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download Users data",
						"description": "Connects to Myrus API user end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Users File Name",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_Live_API",
								"type": "DatasetReference",
								"parameters": {
									"Date": {
										"value": "@variables('API_Date')",
										"type": "Expression"
									},
									"Endpoint": "users"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UsersFileName')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set Users File Name",
						"description": "Sets the name of the file to be used in the sink data set",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Date for API Call",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UsersFileName",
							"value": {
								"value": "@concat('Users', '$', formatDateTime(utcNow(), 'dd-MM-yyyy'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Date for API Call",
						"description": "Sets the API query date to previous day at 11:59:59 to capture any changes made since",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "API_Date",
							"value": {
								"value": "@concat(formatDateTime(subtractFromTime(utcNow(), 1, 'Day'), 'yyyyMMdd'), '115959')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Download Failure",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Download Users data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('Download Users Data').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "Download Users Data"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"UsersFileName": {
						"type": "String"
					},
					"API_Date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-03T15:30:34Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CQC_CopyAPI_Responses')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copies the API responses from the file share",
				"activities": [
					{
						"name": "Copy merged location files",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@Concat('Merged_LocationAPIfile', '*', '.json')",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Fileshare",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CQC_locationresponses_file_Binary",
								"type": "DatasetReference",
								"parameters": {
									"FileType": "merged"
								}
							}
						]
					},
					{
						"name": "Copy Original location API files",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy merged location files",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@Concat('LocationAPIfile_', '*', '.json')",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Fileshare",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CQC_locationresponses_file_Binary",
								"type": "DatasetReference",
								"parameters": {
									"FileType": "original"
								}
							}
						]
					},
					{
						"name": "Remove json files from fileshare",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy Original provider API files",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_PolestarStorageAcc_Fileshare",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureFileStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "*.json",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Copy merged provider files",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Original location API files",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@Concat('Merged_ProviderAPIfile', '*', '.json')",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Fileshare",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CQC_providerresponses_file_Binary",
								"type": "DatasetReference",
								"parameters": {
									"FileType": "merged"
								}
							}
						]
					},
					{
						"name": "Copy Original provider API files",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy merged provider files",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@Concat('ProviderAPIfile_', '*', '.json')",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Fileshare",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CQC_providerresponses_file_Binary",
								"type": "DatasetReference",
								"parameters": {
									"FileType": "original"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "CQC/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CQC_Required_Files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Create and copy files to the fileshare that the Python script uses.",
				"activities": [
					{
						"name": "Create-update Locations file",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT location_id AS LocationID, home_name AS HomeName FROM reports.cqc_rating ORDER BY 2 ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"filePattern": "arrayOfObjects"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CQC_HomeLocationList",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy json file to Fileshare",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Create-update Locations file",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureFileStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_CQC_HomeLocationList",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PolestaStorageAcc_Fileshare_Json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy custom Location schema to fileshare",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy json file to Fileshare",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureFileStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_CQC_CustomLocationJSONSchema",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PolestaStorageAcc_Fileshare_Json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Create-update Provider file",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy custom Location schema to fileshare",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT provider_id AS providerID FROM reports.cqc_rating ORDER BY 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"filePattern": "arrayOfObjects"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CQC_ProviderList",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy Provider file to fileshare",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Create-update Provider file",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureFileStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_CQC_ProviderList",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PolestaStorageAcc_Fileshare_Json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy Custom Provider schema to to fileshare",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Provider file to fileshare",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureFileStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_CQC_CustomProviderJSONSchema",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PolestaStorageAcc_Fileshare_Json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "CQC/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CQC_Upsert_HomeAssessment')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Using the location files to add assessment details.",
				"activities": [
					{
						"name": "Set DateTime",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "DateTime",
							"value": {
								"value": "@utcNow('yyyy-MM-dd hh:mm:ss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get File List",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Set DateTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_CQC_Merged_Location_File",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "For Each File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get File List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get File List').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Upsert to HomeCurretRating_copy1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "SourceFileName",
													"value": {
														"value": "@item().Name",
														"type": "Expression"
													}
												},
												{
													"name": "RowTimeStamp",
													"value": {
														"value": "@variables('DateTime')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFileName": {
													"value": "@item().Name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "upsert",
											"upsertSettings": {
												"useTempDB": true,
												"keys": [
													"LocationID"
												]
											},
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['locationId']"
													},
													"sink": {
														"name": "LocationID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['providerId']"
													},
													"sink": {
														"name": "ProviderID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['name']"
													},
													"sink": {
														"name": "HomeName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['onspdLatitude']"
													},
													"sink": {
														"name": "Latitude",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "$['onspdLongitude']"
													},
													"sink": {
														"name": "Longitude",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "$['postalCode']"
													},
													"sink": {
														"name": "PostCode",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['numberOfBeds']"
													},
													"sink": {
														"name": "NumberOfBeds",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['localAuthority']"
													},
													"sink": {
														"name": "LocalAuthority",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['lastInspection']['date']"
													},
													"sink": {
														"name": "LastInspectionDate",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['lastReport']['publicationDate']"
													},
													"sink": {
														"name": "LastReportDate",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['currentRatings']['overall']['rating']"
													},
													"sink": {
														"name": "OverallRating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['currentRatings']['overall']['keyQuestionRatings'][0]['name']"
													},
													"sink": {
														"name": "KeyQuestion1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['currentRatings']['overall']['keyQuestionRatings'][0]['rating']"
													},
													"sink": {
														"name": "KeyQuestion1Rating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['currentRatings']['overall']['keyQuestionRatings'][1]['name']"
													},
													"sink": {
														"name": "KeyQuestion2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['currentRatings']['overall']['keyQuestionRatings'][1]['rating']"
													},
													"sink": {
														"name": "KeyQuestion2Rating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['currentRatings']['overall']['keyQuestionRatings'][2]['name']"
													},
													"sink": {
														"name": "KeyQuestion3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['currentRatings']['overall']['keyQuestionRatings'][2]['rating']"
													},
													"sink": {
														"name": "KeyQuestion3Rating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['currentRatings']['overall']['keyQuestionRatings'][3]['name']"
													},
													"sink": {
														"name": "KeyQuestion4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['currentRatings']['overall']['keyQuestionRatings'][3]['rating']"
													},
													"sink": {
														"name": "KeyQuestion4Rating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['currentRatings']['overall']['keyQuestionRatings'][4]['name']"
													},
													"sink": {
														"name": "KeyQuestion5",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['currentRatings']['overall']['keyQuestionRatings'][4]['rating']"
													},
													"sink": {
														"name": "KeyQuestion5Rating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['assessmentPlanPublishedDateTime']"
													},
													"sink": {
														"name": "AssessmentPublishedDate",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['assessmentPlanId']"
													},
													"sink": {
														"name": "AssesementPlanID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['title']"
													},
													"sink": {
														"name": "AssessmentTitle",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['assessmentDate']"
													},
													"sink": {
														"name": "AssessmentDate",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['rating']"
													},
													"sink": {
														"name": "AssessmentRating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['narrative']"
													},
													"sink": {
														"name": "AssessmentNarrative",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['keyQuestionRatings'][0]['name']"
													},
													"sink": {
														"name": "AssessmentKeyQuestion1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['keyQuestionRatings'][0]['rating']"
													},
													"sink": {
														"name": "AssessmentKeyQuestion1Rating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['keyQuestionRatings'][1]['name']"
													},
													"sink": {
														"name": "AssessmentKeyQuestion2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['keyQuestionRatings'][1]['rating']"
													},
													"sink": {
														"name": "AssessmentKeyQuestion2Rating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['keyQuestionRatings'][2]['name']"
													},
													"sink": {
														"name": "AssessmentKeyQuestion3",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['keyQuestionRatings'][2]['rating']"
													},
													"sink": {
														"name": "AssessmentKeyQuestion3Rating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['keyQuestionRatings'][3]['name']"
													},
													"sink": {
														"name": "AssessmentKeyQuestion4",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['keyQuestionRatings'][3]['rating']"
													},
													"sink": {
														"name": "AssessmentKeyQuestion4Rating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['keyQuestionRatings'][4]['name']"
													},
													"sink": {
														"name": "AssessmentKeyQuestion5",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['assessment'][0]['ratings']['asgRatings'][0]['keyQuestionRatings'][4]['rating']"
													},
													"sink": {
														"name": "AssessmentKeyQuestion5Rating",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['SourceFileName']"
													},
													"sink": {
														"name": "SourceFileName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['RowTimeStamp']"
													},
													"sink": {
														"name": "RowTimeStamp",
														"type": "DateTime"
													}
												}
											],
											"collectionReference": ""
										}
									},
									"inputs": [
										{
											"referenceName": "DS_CQC_Merged_Location_File",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_AH2_TRANSFORM_DB",
											"type": "DatasetReference",
											"parameters": {
												"Schema": "cqc",
												"Table": "HomeCurrentRating"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Post Upsert proc",
						"description": "Executes a procedure that tidies a few of the columns. Sets them to Null where blank",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "For Each File",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[cqc].[PostUpdate$HomeCurrentRating]"
						},
						"linkedServiceName": {
							"referenceName": "AH2_TRANSFORM_DB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"DateTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CQC/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CQC_Upsert_Location')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Using the location files to add location details.",
				"activities": [
					{
						"name": "Set DateTime",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "DateTime",
							"value": {
								"value": "@utcNow('yyyy-MM-dd hh:mm:ss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get File List",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Set DateTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_CQC_Merged_Location_File",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "For Each File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get File List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get File List').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Upsert to Location",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"additionalColumns": [
												{
													"name": "SourceFileName",
													"value": {
														"value": "@item().Name",
														"type": "Expression"
													}
												},
												{
													"name": "RowTimeStamp",
													"value": {
														"value": "@variables('DateTime')",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFileName": {
													"value": "@item().Name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "upsert",
											"upsertSettings": {
												"useTempDB": true,
												"keys": [
													"LocationID"
												]
											},
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['locationId']"
													},
													"sink": {
														"name": "LocationID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['providerId']"
													},
													"sink": {
														"name": "ProviderID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['name']"
													},
													"sink": {
														"name": "LocationName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['registrationStatus']"
													},
													"sink": {
														"name": "RegistrationStatus",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['registrationDate']"
													},
													"sink": {
														"name": "RegistrationDate",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['deregistrationDate']"
													},
													"sink": {
														"name": "DeregistrationDate",
														"type": "DateTime"
													}
												}
											],
											"collectionReference": ""
										}
									},
									"inputs": [
										{
											"referenceName": "DS_CQC_Merged_Location_File",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_AH2_TRANSFORM_DB",
											"type": "DatasetReference",
											"parameters": {
												"Schema": "cqc",
												"Table": "Location"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Post Upsert proc",
						"description": "Executes a procedure that tidies a few of the columns. Sets them to Null where blank",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "For Each File",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[cqc].[PostUpdate$HomeCurrentRating]"
						},
						"linkedServiceName": {
							"referenceName": "AH2_TRANSFORM_DB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"DateTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CQC/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CQC_Upsert_Provider')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set DateTime",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "DateTime",
							"value": {
								"value": "@utcNow('yyyy-MM-dd hh:mm:ss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get File List",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Set DateTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_CQC_Merged_Provider_File",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "JsonReadSettings"
							}
						}
					},
					{
						"name": "For Each File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get File List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get File List').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Upsert to Provider Table",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFileName": {
													"value": "@item().Name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "upsert",
											"upsertSettings": {
												"useTempDB": true,
												"keys": [
													"ProviderID"
												]
											},
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['providerId']"
													},
													"sink": {
														"name": "ProviderID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['name']"
													},
													"sink": {
														"name": "ProviderName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['brandId']"
													},
													"sink": {
														"name": "BrandID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['brandName']"
													},
													"sink": {
														"name": "BrandName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['registrationStatus']"
													},
													"sink": {
														"name": "RegistrationStatus",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['registrationDate']"
													},
													"sink": {
														"name": "RegistrationDate",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['deregistrationDate']"
													},
													"sink": {
														"name": "DeregistrationDate",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['companiesHouseNumber']"
													},
													"sink": {
														"name": "CompaniesHouseNo",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['postalAddressLine1']"
													},
													"sink": {
														"name": "Address1",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['postalAddressLine2']"
													},
													"sink": {
														"name": "Address2",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['postalAddressTownCity']"
													},
													"sink": {
														"name": "City",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['postalAddressCounty']"
													},
													"sink": {
														"name": "County",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['postalCode']"
													},
													"sink": {
														"name": "Postcode",
														"type": "String"
													}
												}
											],
											"collectionReference": ""
										}
									},
									"inputs": [
										{
											"referenceName": "DS_CQC_Merged_Provider_File",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_AH2_TRANSFORM_DB",
											"type": "DatasetReference",
											"parameters": {
												"Schema": "cqc",
												"Table": "Provider"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"DateTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "CQC/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CapexCorrection')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load RC Changes",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Home",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Home",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "IntranetID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IntranetID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "date_Rec",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "date_Rec",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "supplier",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "supplier",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "details",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "details",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Capex_Ref",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Capex_Ref",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "value_gbp",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "value_gbp",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "notes",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "notes",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "approval_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "approval_date",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Attachment1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Attachment1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Attachment2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Attachment2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "budget",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "budget",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Invoice_Pin",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Invoice_Pin",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "invoice_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "invoice_date",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "invoice_due_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "invoice_due_date",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "no_attachments",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "no_attachments",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "budget_yr",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "budget_yr",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "header",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "header",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "dept",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "dept",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Capex_Opex",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Capex_Opex",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Cat1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Cat1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Cat2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Cat2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Cat3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Cat3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Created_By",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Created_By",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Budget_Year",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Budget_Year",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Capex_Bucket",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Capex_Bucket",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WellTower",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WellTower",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WT_Reference",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WT_Reference",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "WT_Capex_Bucket",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WT_Capex_Bucket",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Project_Area",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Project_Area",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Resource_Description",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Resource_Description",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NextApproverNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NextApproverNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NextApproverEmail",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NextApproverEmail",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NextApproverLimit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NextApproverLimit",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Excel",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_Capex",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "RC_Capex_Changes"
								}
							}
						]
					},
					{
						"name": "New budget",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Operator",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Operator",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Month End",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Month End",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Facility ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Facility ID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Facility Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Facility Name",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Column1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Column1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Vantage Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Vantage Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Column2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Column2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Project Area Description",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Project Area Description",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Revenue Enhancing or Routine Capex",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Revenue Enhancing or Routine Capex",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Welltower CapEx Bucket",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Welltower CapEx Bucket",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Category Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Category Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Category Description",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Category Description",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Budget Notes",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Budget Notes",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Budgeted Spend",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Budgeted Spend",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Responsible",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Responsible",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Excel",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_Capex",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "RC_WT_New_Budgets"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CareBlox-Fileshare')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy care blox zip files to file share",
				"activities": [
					{
						"name": "Copy Zip files",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureFileStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_careblox_Binary",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Fileshare",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Careblox/Children Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-10T11:21:25Z"
			},
			"dependsOn": []
		}
	]
}