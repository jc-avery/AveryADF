{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Avery-ADF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_Artisan_AEMS_Enquiries')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copies across the Artisan AEM data",
				"activities": [
					{
						"name": "Enquiries",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE AEMS.AEMS_Enquiries",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AEMS_ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "AEMS_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "aems_version",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "aems_version",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "homeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "homeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "uploadedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "uploadedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "managerEmailed",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "managerEmailed",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiryStatus",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiryStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiryID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiryID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "initialEnquiry",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "initialEnquiry",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "enquirerSalutation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerSalutation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerFirstName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerFirstName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerLastName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerLastName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerSalutationTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerSalutationTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerLastNameTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerLastNameTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerFirstNameTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerFirstNameTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiryDate",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiryDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerRelationshipToResident",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerRelationshipToResident",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "en_areacode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "en_areacode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerTelephone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerTelephone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_mobile",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_mobile",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerEmail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerEmail",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerAddress",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquirerAddress",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquirerAddressOne",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerAddressOne",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerAddressTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerAddressTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerAddressThree",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerAddressThree",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_postcode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_postcode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_postcode_two",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_postcode_two",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentSalutation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentSalutation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentFirstName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentFirstName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentLastName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentLastName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentDOB",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentDOB",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentSalutationTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentSalutationTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentFirstNameTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentFirstNameTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentLastNameTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentLastNameTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentDOBTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentDOBTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentNOK",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentNOK",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentAddress",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "residentAddress",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "residentAddressOne",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentAddressOne",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentAddressTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentAddressTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentAddressThree",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentAddressThree",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentPostcode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentPostcode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentTelephone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentTelephone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentCareCategory",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentCareCategory",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentFundingCategory",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentFundingCategory",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentCareCategoryTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentCareCategoryTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "funding_total",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "funding_total",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentFunding",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentFunding",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentFundingTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentFundingTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiryDetails",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquiryDetails",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquiryType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiryType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "responseTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "responseTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "responseCurrentStatus",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "responseCurrentStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "responseNeeded",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "responseNeeded",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "responseAmountTried",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "responseAmountTried",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "followUpDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "followUpDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "followUpReason",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "followUpReason",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "uploadToCH",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "uploadToCH",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "admissionDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "admissionDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "enquiryClosed",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiryClosed",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "managerContacted",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "managerContacted",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "homeVisit",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "homeVisit",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "assessmentBooked",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "assessmentBooked",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "assesmentComplete",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "assesmentComplete",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "admission",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "admission",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "homeVisitBooked",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "homeVisitBooked",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "admissionBooked",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "admissionBooked",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "video_booked",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "video_booked",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "video_complete",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "video_complete",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "homeVisitRequested",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "homeVisitRequested",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "assesmentRequested",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "assesmentRequested",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "newEnquiry",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "newEnquiry",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "cameFrom",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "cameFrom",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirer_address",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquirer_address",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquirer_postcode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirer_postcode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "lng",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "lng",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "lat",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "lat",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirer_area",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirer_area",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirer_county",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirer_county",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_surname",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_surname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_county",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_county",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_relation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_relation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_telephone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_telephone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_mobile",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_mobile",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_address",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_address",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "resident_county",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "resident_county",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_Salutation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_Salutation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "newsletter_receive",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "newsletter_receive",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "newsletter_email",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "newsletter_email",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_urgent",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_urgent",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "optOut",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "optOut",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "type_news",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "type_news",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "type_mag",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "type_mag",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "type_other",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "type_other",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "gp_name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "gp_name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "gp_address",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "gp_address",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "gp_telephone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "gp_telephone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "gp_requested",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "gp_requested",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "gp_received",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "gp_received",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "website",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "website",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "brochure",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "brochure",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "brochure_requestID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "brochure_requestID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "entryMethod",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "entryMethod",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "current_action_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "current_action_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "column_hash",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "column_hash",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "receiveMarketing",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "receiveMarketing",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "willTopUp",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "willTopUp",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquiry_entered_from",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_entered_from",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_closed_reason",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_closed_reason",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_deleted",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_deleted",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_weight",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_weight",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "AEMS",
									"Table": "vArtisanEnquiries"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AveryArtisan_Artisan",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "AEMS",
									"Table": "AEMS_Enquiries"
								}
							}
						]
					},
					{
						"name": "Actions",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Enquiries",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE AEMS.AEMS_Enquiries_Actions",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AEMS_ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "AEMS_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_setBy",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquiry_setBy",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquiry_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_dateRequired",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "enquiry_dateRequired",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "enquiry_reason",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquiry_reason",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquiry_contact",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquiry_contact",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquiry_actionComplete",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_actionComplete",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_actionInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "enquiry_actionInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "enquiry_actionCompleteDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "enquiry_actionCompleteDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "enquiry_actionCompleteBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_actionCompleteBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_homeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_homeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_missed",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_missed",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_missedEmail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_missedEmail",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_missedEmailDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "enquiry_missedEmailDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "enquiry_initialContact",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_initialContact",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_flag",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_flag",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_critical",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_critical",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_details",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquiry_details",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquiry_picked_up",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_picked_up",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_assigned_to",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_assigned_to",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_assigned_when",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "enquiry_assigned_when",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "enquiry_action_call_handler",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_action_call_handler",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_new",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_new",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "AEMS",
									"Table": "vArtisanEnquiries_Actions"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AveryArtisan_Artisan",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "AEMS",
									"Table": "AEMS_Enquiries_Actions"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Artisan/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-07-02T10:29:17Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Artisan_Debt')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Pwrbi_Debt2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Intranet",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Intranet",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "resident_no",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "resident_no",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "resident_name",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "resident_name",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "account_no",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "account_no",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "funder",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "funder",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "transaction_location",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "transaction_location",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "transaction_date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "transaction_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "transaction_type",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "transaction_type",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "transaction_ref1",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "transaction_ref1",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "transaction_ref2",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "transaction_ref2",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "transaction_value",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 10
										},
										"sink": {
											"name": "transaction_value",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 10
										}
									},
									{
										"source": {
											"name": "transaction_bal",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 10
										},
										"sink": {
											"name": "transaction_bal",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 10
										}
									},
									{
										"source": {
											"name": "res_status",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "res_status",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "res_lastdidate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "res_lastdidate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "month_end",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "month_end",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "IntranetNew",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "IntranetNew",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH1_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "vArtisanDebt"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AveryArtisan_Artisan",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Artisan",
									"Table": "Pwrbi_Debt2"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Artisan/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Artisan_Homes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy Across Artisan Home details to the Artisan DB. (Uses the old AH1 table structure and data)",
				"activities": [
					{
						"name": "Upsert Artisan Details",
						"description": "Updates details from AH2 to the Artisan DB for the the Artisan Homes",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Homename",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Homename",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Intranet",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 4
										},
										"sink": {
											"name": "Intranet",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 4
										}
									},
									{
										"source": {
											"name": "IntranetNew",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "IntranetNew",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Exch_Code",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Exch_Code",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "CH_Code",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "CH_Code",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "company",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "company",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "homeadd1",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "homeadd1",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "homeadd2",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "homeadd2",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "homeadd3",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "homeadd3",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "homeadd4",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "homeadd4",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "homeadd5",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "homeadd5",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "hometell",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "hometell",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "code",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "code",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Beds",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 4
										},
										"sink": {
											"name": "Beds",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 4
										}
									},
									{
										"source": {
											"name": "Category",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Category",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "hometype",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "hometype",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Newbuild",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Newbuild",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Group",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Group",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Subgroup",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Subgroup",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Division",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Division",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Divisional",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Divisional",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Regional",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Regional",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Regional_Support",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Regional_Support",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Manager",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Manager",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "CSM",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "CSM",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "CSM2",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "CSM2",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Divisional_Email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Divisional_Email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "regional_email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "regional_email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "regional_support_email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "regional_support_email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Manager_Email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Manager_Email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Deputy_Email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Deputy_Email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "CSM_Email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "CSM_Email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "CSM_Email2",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "CSM_Email2",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "agency_email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "agency_email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "agencu_email2",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "agencu_email2",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Regional_Cover_email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Regional_Cover_email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "admin_email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "admin_email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "admin_assistant_email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "admin_assistant_email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "reg_admin_email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "reg_admin_email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "reg_admin_deputy_email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "reg_admin_deputy_email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Housekeeper_Email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Housekeeper_Email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Chef_Email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Chef_Email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "home_maint_email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "home_maint_email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "hospitality_email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "hospitality_email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "sales_ledger_email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "sales_ledger_email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "reg_estates_email",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "reg_estates_email",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Food_Safety",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										},
										"sink": {
											"name": "Food_Safety",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 1
										}
									},
									{
										"source": {
											"name": "Food_Safety_date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Food_Safety_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Home_Manager_rating",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Home_Manager_rating",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "FTE_hours",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 5
										},
										"sink": {
											"name": "FTE_hours",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 5
										}
									},
									{
										"source": {
											"name": "Local_Page_URL",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Local_Page_URL",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Food_budget_PPPD",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 5
										},
										"sink": {
											"name": "Food_budget_PPPD",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 5
										}
									},
									{
										"source": {
											"name": "ChecksType",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ChecksType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Procurement_Name",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Procurement_Name",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "agency_select",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "agency_select",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "agency_select2",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "agency_select2",
											"type": "String",
											"physicalType": "nchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Avery",
									"Table": "vArtisanHomes"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AveryArtisan_Artisan",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Artisan",
									"Table": "Homes"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Artisan/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-07-05T10:28:24Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Artisan_Occupancy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copies across the Artisan Occupancy Data from AH1 to Artisan DB",
				"activities": [
					{
						"name": "Occupancy Upsert",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Home",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Home",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "HomeID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "HomeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "IntranetID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 4
										},
										"sink": {
											"name": "IntranetID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Private_Occupancy",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Private_Occupancy",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Other_Occupancy",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Other_Occupancy",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Total_Occupancy",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Total_Occupancy",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "DateToday",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "DateToday",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "InRespite_LA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "InRespite_LA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "InRespite_Private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "InRespite_Private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "InLA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "InLA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "In_Private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "In_Private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "TransfLA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "TransfLA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Tranfprivate",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Tranfprivate",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Outchange_of_needs_la",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Outchange_of_needs_la",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "outchange_of_needs_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "outchange_of_needs_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "out_respite_la",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "out_respite_la",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "out_respite_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "out_respite_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "out_AD_LA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "out_AD_LA",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Out_AD_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "Out_AD_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "outother_la",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "outother_la",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "outother_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "outother_private",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "budget",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 6
										},
										"sink": {
											"name": "budget",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 6
										}
									},
									{
										"source": {
											"name": "budgetinc",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 10
										},
										"sink": {
											"name": "budgetinc",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 10
										}
									},
									{
										"source": {
											"name": "total_ad",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "total_ad",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "total_rip",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "total_rip",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "Closed",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Closed",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "respites",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "respites",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH1_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "vArtisanOccupancy"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AveryArtisan_Artisan",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Artisan",
									"Table": "PWRBI_OCC"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Artisan/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-07-09T15:51:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Artisan_budget')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Budget",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Intranet",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 3
										},
										"sink": {
											"name": "Intranet",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 3
										}
									},
									{
										"source": {
											"name": "GLCODE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 5
										},
										"sink": {
											"name": "GLCODE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 5
										}
									},
									{
										"source": {
											"name": "Period",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Period",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Budget_desc",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Budget_desc",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 12
										},
										"sink": {
											"name": "amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 12
										}
									},
									{
										"source": {
											"name": "intranetnew",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "intranetnew",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH1_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "vArtisanBudget"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AveryArtisan_Artisan",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Artisan",
									"Table": "Budget"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Artisan/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Artisan_vHomeDetails')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy vArtisanHomeDetails",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"HomeID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "HomeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "HomeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "IntranetID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "IntranetID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "HomeName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HomeTypeName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeTypeName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BedCount",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BedCount",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Group",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Group",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SubGroup",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SubGroup",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Division",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Division",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DivisionAltName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DivisionAltName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Postcode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Postcode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ExchCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ExchCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CHCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CHCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CareBloxHomeid",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CareBloxHomeid",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CBCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CBCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HomeManager",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeManager",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ManagerEmail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ManagerEmail",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DeputyEmail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DeputyEmail",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AdminEmail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AdminEmail",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "CSMEmail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CSMEmail",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RegionalDirector",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RegionalDirector",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RegionalDirectorEmail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RegionalDirectorEmail",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OpsDirector",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OpsDirector",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "OpsDirectorEmail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OpsDirectorEmail",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Avery",
									"Table": "vArtisanHomeDetails"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AveryArtisan_Artisan",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Artisan",
									"Table": "HomeDetails"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Artisan/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Artisan_vRLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Artisan RLS data",
				"activities": [
					{
						"name": "Artisan vRLS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \n    H.[HomeID]\n    ,H.[IntranetID]\n    ,H.[HomeName]\n    ,[HomeData]\n    ,[RegionData]\n    ,[DivisionData]\n    ,[HomeSubGroupData]\n    ,[AllData]\nFROM \n    [Avery].[vRLS] AS R\n  \n    INNER JOIN Avery.Home AS H\n        ON H.HomeID = R.HomeID\nWHERE\n    H.HomeSubGroupID = 2",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"HomeID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "HomeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "HomeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "IntranetID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "IntranetID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "HomeName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HomeData",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeData",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "RegionData",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RegionData",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "DivisionData",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DivisionData",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "HomeSubGroupData",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeSubGroupData",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AllData",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AllData",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AveryArtisan_Artisan",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Artisan",
									"Table": "RLS"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Artisan/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Avery_RLS_TRANSFORM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy RLS view to TRANSFORM DB",
				"activities": [
					{
						"name": "Avery RLS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"HomeID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "HomeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "HomeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "IntranetID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "IntranetID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "HomeName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HomeData",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeData",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RegionData",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RegionData",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DivisionData",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DivisionData",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HomeSubGroupData",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeSubGroupData",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AllData",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AllData",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Avery",
									"Table": "vRLS"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Avery",
									"Table": "RLS"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "RLS"
				},
				"annotations": [],
				"lastPublishTime": "2024-07-24T08:35:22Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_Courses')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download Courses Data",
						"description": "Connects to Myrus API Courses end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Courses File Name",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_Live_API",
								"type": "DatasetReference",
								"parameters": {
									"Date": {
										"value": "@variables('API_Date')",
										"type": "Expression"
									},
									"Endpoint": "courses"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UsersFileName')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set Courses File Name",
						"description": "Sets the name of the file to be used in the sink data set",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Date for API Call",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UsersFileName",
							"value": {
								"value": "@concat('Courses', '$', formatDateTime(utcNow(), 'dd-MM-yyyy'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Date for API Call",
						"description": "Sets the API query date to previous day at 11:59:59 to capture any changes made since",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "API_Date",
							"value": {
								"value": "@concat(formatDateTime(subtractFromTime(utcNow(), 1, 'Day'), 'yyyyMMdd'), '115959')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Download Failure",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Download Courses Data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('Download Courses Data').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "Download Courses Data"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"UsersFileName": {
						"type": "String"
					},
					"API_Date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-03T15:30:34Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_Download_AllData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download Coursesdata",
						"description": "Connects to Myrus API Courses end point and downloads data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_Live_API_AllData",
								"type": "DatasetReference",
								"parameters": {
									"EndPoint": "courses"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON_AllData",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "AllCoursesData$20241002"
								}
							}
						]
					},
					{
						"name": "Download Users data",
						"description": "Connects to Myrus API user end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Download Coursesdata",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_Live_API_AllData",
								"type": "DatasetReference",
								"parameters": {
									"EndPoint": "users"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON_AllData",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "AllUsersData$20241002"
								}
							}
						]
					},
					{
						"name": "Download User Course data",
						"description": "Connects to Myrus API user-course end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Date for Usercourse endpoint",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:08:00",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_Live_API",
								"type": "DatasetReference",
								"parameters": {
									"Date": {
										"value": "@variables('DateString')",
										"type": "Expression"
									},
									"Endpoint": "user-courses"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "AllUser_CoursesData$20241002"
								}
							}
						]
					},
					{
						"name": "Set Date for Usercourse endpoint",
						"description": "Sets the date to be the 1st of the current year and assigns it to the API dataset",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Download Users data",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "DateString",
							"value": "20210401090000"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"DateString": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-02T09:31:21Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_JSON_SQL_AllData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Users JSON data to SQL table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Upsert DateTime",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "UpsertDateTime",
										"value": {
											"value": "@variables('Upsert_UTCDateTime')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"UserID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['userID']"
										},
										"sink": {
											"name": "UserID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['forename']"
										},
										"sink": {
											"name": "Forename",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['surname']"
										},
										"sink": {
											"name": "Surname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['employeeNumber']"
										},
										"sink": {
											"name": "EmployeeNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['location']"
										},
										"sink": {
											"name": "UserLocation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['jobRole']"
										},
										"sink": {
											"name": "JobRole",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['status']"
										},
										"sink": {
											"name": "UserStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['createdDateTime']"
										},
										"sink": {
											"name": "CreatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['lastUpdatedDateTime']"
										},
										"sink": {
											"name": "APILastUpdatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['UpsertDateTime']"
										},
										"sink": {
											"name": "UpsertDateTime",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['users']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_JSON_AllData",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "AllUsersData$20241002"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Broadshield",
									"Table": "Users"
								}
							}
						]
					},
					{
						"name": "Courses JSON data to SQL table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Users JSON data to SQL table",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "UpsertDateTime",
										"value": {
											"value": "@variables('Upsert_UTCDateTime')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"CourseID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['courseID']"
										},
										"sink": {
											"name": "CourseID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['courseName']"
										},
										"sink": {
											"name": "CourseName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['courseCode']"
										},
										"sink": {
											"name": "CourseCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['courseMandation']"
										},
										"sink": {
											"name": "CourseMandation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['courseExpiry']"
										},
										"sink": {
											"name": "CourseExpiry",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['status']"
										},
										"sink": {
											"name": "CourseStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['createdDateTime']"
										},
										"sink": {
											"name": "CreatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['lastUpdatedDateTime']"
										},
										"sink": {
											"name": "APILastUpdatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['UpsertDateTime']"
										},
										"sink": {
											"name": "UpsertDateTime",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['courses']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_JSON_AllData",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "AllCoursesData$20241002"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Broadshield",
									"Table": "Course"
								}
							}
						]
					},
					{
						"name": "UserCourses JSON data to SQL table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Courses JSON data to SQL table",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "UpsertDateTime",
										"value": {
											"value": "@variables('Upsert_UTCDateTime')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"AssignmentID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['assignmentID']"
										},
										"sink": {
											"name": "AssignmentID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['userID']"
										},
										"sink": {
											"name": "UserID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['courseID']"
										},
										"sink": {
											"name": "CourseID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['assignmentStatus']"
										},
										"sink": {
											"name": "AssignmentStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['assignmentMandation']"
										},
										"sink": {
											"name": "AssignmentMandation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['startedDate']"
										},
										"sink": {
											"name": "StartedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['assessmentStatus']"
										},
										"sink": {
											"name": "AssessmentStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['completionDate']"
										},
										"sink": {
											"name": "CompletionDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['expiryDate']"
										},
										"sink": {
											"name": "ExpiryDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['assignedDate']"
										},
										"sink": {
											"name": "AssignedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['lastUpdatedDateTime']"
										},
										"sink": {
											"name": "APILastUpdatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['UpsertDateTime']"
										},
										"sink": {
											"name": "UpsertDateTime",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['usercourses']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_JSON_AllData",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "AllUser-CoursesData$20241002"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Broadshield",
									"Table": "UserCourses"
								}
							}
						]
					},
					{
						"name": "Set Upsert DateTime",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Upsert_UTCDateTime",
							"value": {
								"value": "@utcNow('yyyy-MM-dd hh:mm:ss')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Upsert_UTCDateTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-02T15:38:19Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_JSON_SQL_Current')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Updates the Broadshield tables that store the current status of the data from the API using files taken from previous Day",
				"activities": [
					{
						"name": "Users JSON data to Current table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Users Filename",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "UpsertDateTime",
										"value": {
											"value": "@variables('UpsertDateTime')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"UserID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['userID']"
										},
										"sink": {
											"name": "UserID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['forename']"
										},
										"sink": {
											"name": "Forename",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['surname']"
										},
										"sink": {
											"name": "Surname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['employeeNumber']"
										},
										"sink": {
											"name": "EmployeeNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['location']"
										},
										"sink": {
											"name": "UserLocation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['jobRole']"
										},
										"sink": {
											"name": "JobRole",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['status']"
										},
										"sink": {
											"name": "UserStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['createdDateTime']"
										},
										"sink": {
											"name": "CreatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['lastUpdatedDateTime']"
										},
										"sink": {
											"name": "APILastUpdatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['UpsertDateTime']"
										},
										"sink": {
											"name": "UpsertDateTime",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['users']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_JSON_PrevDay",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UsersFilename')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Broadshield",
									"Table": "Users"
								}
							}
						]
					},
					{
						"name": "Set Users Filename",
						"description": "Used to set the filename for the file we want to connect to in the dataset (Source)",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set UpsertDateTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UsersFilename",
							"value": {
								"value": "@concat('Users', '$', variables('YesterdayDate'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Courses JSON data to Current table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Courses Filename",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "UpsertDateTime",
										"value": {
											"value": "@variables('UpsertDateTime')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"CourseID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['courseID']"
										},
										"sink": {
											"name": "CourseID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['courseName']"
										},
										"sink": {
											"name": "CourseName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['courseCode']"
										},
										"sink": {
											"name": "CourseCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['courseMandation']"
										},
										"sink": {
											"name": "CourseMandation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['courseExpiry']"
										},
										"sink": {
											"name": "CourseExpiry",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['status']"
										},
										"sink": {
											"name": "CourseStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['createdDateTime']"
										},
										"sink": {
											"name": "CreatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['lastUpdatedDateTime']"
										},
										"sink": {
											"name": "APILastUpdatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['UpsertDateTime']"
										},
										"sink": {
											"name": "UpsertDateTime",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['courses']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_JSON_PrevDay",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('CoursesFilename')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Broadshield",
									"Table": "Course"
								}
							}
						]
					},
					{
						"name": "Set Courses Filename",
						"description": "Used to set the filename for the file we want to connect to in the dataset (Source)",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Users JSON data to Current table",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "CoursesFilename",
							"value": {
								"value": "@concat('Courses', '$', variables('YesterdayDate'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "UserCourses JSON data to Current table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set UserCourses Filename",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "UpsertDateTime",
										"value": {
											"value": "@variables('UpsertDateTime')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"AssignmentID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['assignmentID']"
										},
										"sink": {
											"name": "AssignmentID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['userID']"
										},
										"sink": {
											"name": "UserID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['courseID']"
										},
										"sink": {
											"name": "CourseID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['assignmentStatus']"
										},
										"sink": {
											"name": "AssignmentStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['assignmentMandation']"
										},
										"sink": {
											"name": "AssignmentMandation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['startedDate']"
										},
										"sink": {
											"name": "StartedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['assessmentStatus']"
										},
										"sink": {
											"name": "AssessmentStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['completionDate']"
										},
										"sink": {
											"name": "CompletionDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['expiryDate']"
										},
										"sink": {
											"name": "ExpiryDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['assignedDate']"
										},
										"sink": {
											"name": "AssignedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['lastUpdatedDateTime']"
										},
										"sink": {
											"name": "APILastUpdatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['UpsertDateTime']"
										},
										"sink": {
											"name": "UpsertDateTime",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['usercourses']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_JSON_PrevDay",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UserCourseFilename')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Broadshield",
									"Table": "UserCourses"
								}
							}
						]
					},
					{
						"name": "Set UserCourses Filename",
						"description": "Used to set the filename for the file we want to connect to in the dataset (Source)",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Courses JSON data to Current table",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UserCourseFilename",
							"value": {
								"value": "@concat('UserCourses', '$', variables('YesterdayDate'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Yesterday Date",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "YesterdayDate",
							"value": {
								"value": "@formatDateTime(subtractFromTime(utcNow(), 1, 'Day'), 'dd-MM-yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set UpsertDateTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Yesterday Date",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UpsertDateTime",
							"value": {
								"value": "@utcNow('yyyy-MM-dd hh:mm:ss')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"UsersFilename": {
						"type": "String"
					},
					"CoursesFilename": {
						"type": "String"
					},
					"UserCourseFilename": {
						"type": "String"
					},
					"YesterdayDate": {
						"type": "String"
					},
					"UpsertDateTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-03T09:24:53Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_JSON_SQL_History')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Updates the Broadshield tables that store the history and changes from the API using files taken from previous Days. Data from the json files is inserted into staging tables, then compared to the history tables. When there is a change the record is inserted into history table. This is done this way as future dates/records appear in the JSON files. These future records would be inserted every day, even if there was no change.",
				"activities": [
					{
						"name": "Users JSON data to Users Stage table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Users Filename",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "InsertDateTime",
										"value": {
											"value": "@variables('InsertDateTime')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['userID']"
										},
										"sink": {
											"name": "UserID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['forename']"
										},
										"sink": {
											"name": "Forename",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['surname']"
										},
										"sink": {
											"name": "Surname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['employeeNumber']"
										},
										"sink": {
											"name": "EmployeeNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['location']"
										},
										"sink": {
											"name": "UserLocation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['jobRole']"
										},
										"sink": {
											"name": "JobRole",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['status']"
										},
										"sink": {
											"name": "UserStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['createdDateTime']"
										},
										"sink": {
											"name": "CreatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['lastUpdatedDateTime']"
										},
										"sink": {
											"name": "APILastUpdatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['InsertDateTime']"
										},
										"sink": {
											"name": "InsertDateTime",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['users']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_JSON_PrevDay",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UsersFilename')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Broadshield",
									"Table": "StgUsers"
								}
							}
						]
					},
					{
						"name": "Set Users Filename",
						"description": "Used to set the filename for the file we want to connect to in the dataset (Source)",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set InsertDateTime",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UsersFilename",
							"value": {
								"value": "@concat('Users', '$', variables('YesterdayDate'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Courses JSON data to Courses Stage table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Courses Filename",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "InsertDateTime",
										"value": {
											"value": "@variables('InsertDateTime')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['courseID']"
										},
										"sink": {
											"name": "CourseID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['courseName']"
										},
										"sink": {
											"name": "CourseName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['courseCode']"
										},
										"sink": {
											"name": "CourseCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['courseMandation']"
										},
										"sink": {
											"name": "CourseMandation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['courseExpiry']"
										},
										"sink": {
											"name": "CourseExpiry",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['status']"
										},
										"sink": {
											"name": "CourseStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['createdDateTime']"
										},
										"sink": {
											"name": "CreatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['lastUpdatedDateTime']"
										},
										"sink": {
											"name": "APILastUpdatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['InsertDateTime']"
										},
										"sink": {
											"name": "InsertDateTime",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['courses']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_JSON_PrevDay",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('CoursesFilename')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Broadshield",
									"Table": "StgCourse"
								}
							}
						]
					},
					{
						"name": "Set Courses Filename",
						"description": "Used to set the filename for the file we want to connect to in the dataset (Source)",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Users JSON data to Users Stage table",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "CoursesFilename",
							"value": {
								"value": "@concat('Courses', '$', variables('YesterdayDate'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "UserCourses JSON data to UserCourse Stage table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set UserCourses Filename",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									},
									{
										"name": "InsertDateTime",
										"value": {
											"value": "@variables('InsertDateTime')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"AssignmentID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['assignmentID']"
										},
										"sink": {
											"name": "AssignmentID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['userID']"
										},
										"sink": {
											"name": "UserID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['courseID']"
										},
										"sink": {
											"name": "CourseID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['assignmentStatus']"
										},
										"sink": {
											"name": "AssignmentStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['assignmentMandation']"
										},
										"sink": {
											"name": "AssignmentMandation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['startedDate']"
										},
										"sink": {
											"name": "StartedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['assessmentStatus']"
										},
										"sink": {
											"name": "AssessmentStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['completionDate']"
										},
										"sink": {
											"name": "CompletionDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['expiryDate']"
										},
										"sink": {
											"name": "ExpiryDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['assignedDate']"
										},
										"sink": {
											"name": "AssignedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['lastUpdatedDateTime']"
										},
										"sink": {
											"name": "APILastUpdatedDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "$['SourceFileName']"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['InsertDateTime']"
										},
										"sink": {
											"name": "InsertDateTime",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "$['usercourses']"
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_JSON_PrevDay",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UserCourseFilename')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Broadshield",
									"Table": "StgUserCourses"
								}
							}
						]
					},
					{
						"name": "Set UserCourses Filename",
						"description": "Used to set the filename for the file we want to connect to in the dataset (Source)",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Courses JSON data to Courses Stage table",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UserCourseFilename",
							"value": {
								"value": "@concat('UserCourses', '$', variables('YesterdayDate'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Yesterday Date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Clear Stg Tables Pre",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "YesterdayDate",
							"value": {
								"value": "@formatDateTime(subtractFromTime(utcNow(), 1, 'Day'), 'dd-MM-yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set InsertDateTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Yesterday Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "InsertDateTime",
							"value": {
								"value": "@utcNow('yyyy-MM-dd hh:mm:ss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Clear Stg Tables Pre",
						"description": "Truncates the stage tables, resetting the Identity Column prior to staging to ensure tables are empty",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Broadshield].[ClearStgTables]"
						},
						"linkedServiceName": {
							"referenceName": "AH2_TRANSFORM_DB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Create History Records",
						"description": "Checks for any new records to be added to the history tables and any changes that need to be added. Records are inserted to keep a history",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "UserCourses JSON data to UserCourse Stage table",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Broadshield].[CreateHistoryRecords]"
						},
						"linkedServiceName": {
							"referenceName": "AH2_TRANSFORM_DB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Clear Stg Tables Post",
						"description": "Clear Stg tables post ",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Create History Records",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Broadshield].[ClearStgTables]"
						},
						"linkedServiceName": {
							"referenceName": "AH2_TRANSFORM_DB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"UsersFilename": {
						"type": "String"
					},
					"CoursesFilename": {
						"type": "String"
					},
					"UserCourseFilename": {
						"type": "String"
					},
					"YesterdayDate": {
						"type": "String"
					},
					"InsertDateTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-03T15:08:45Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_UAT_Courses')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download Coursesdata",
						"description": "Connects to Myrus API Courses end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Courses File Name",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_UAT_API",
								"type": "DatasetReference",
								"parameters": {
									"Date": {
										"value": "@variables('API_Date')",
										"type": "Expression"
									},
									"EndPoint": "courses"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UsersFileName')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set Courses File Name",
						"description": "Sets the name of the file to be used in the sink data set",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Date for API Call",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UsersFileName",
							"value": {
								"value": "@concat('Courses', '$', formatDateTime(utcNow(), 'dd-MM-yyyy'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Date for API Call",
						"description": "Sets the date to be 30 days prior to today",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "API_Date",
							"value": {
								"value": "@formatDateTime(subtractFromTime(utcNow(), 30, 'Day'), 'yyyyMMddHHmmss')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"UsersFileName": {
						"type": "String"
					},
					"API_Date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/UAT"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-26T09:59:30Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_UAT_DownloadAllData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download Coursesdata",
						"description": "Connects to Myrus API Courses end point and downloads data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_UAT_API_AllData",
								"type": "DatasetReference",
								"parameters": {
									"EndPoint": "courses"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "UAT_AllCourseData"
								}
							}
						]
					},
					{
						"name": "Download Users data",
						"description": "Connects to Myrus API user end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Download Coursesdata",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_UAT_API_AllData",
								"type": "DatasetReference",
								"parameters": {
									"EndPoint": "users"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "UAT_AllusersData"
								}
							}
						]
					},
					{
						"name": "Download User Course data",
						"description": "Connects to Myrus API user-course end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Download Users data",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_UAT_API_AllData",
								"type": "DatasetReference",
								"parameters": {
									"EndPoint": "user-courses"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "UAT_Alluser-coursesData"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Broadshield/UAT"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-26T09:42:46Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_UAT_UserCourses')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download User Course data",
						"description": "Connects to Myrus API user-course end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set User Courses File Name",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_UAT_API",
								"type": "DatasetReference",
								"parameters": {
									"Date": {
										"value": "@variables('API_Date')",
										"type": "Expression"
									},
									"EndPoint": "user-courses"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UsersFileName')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set User Courses File Name",
						"description": "Sets the name of the file to be used in the sink data set",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Date for API Call",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UsersFileName",
							"value": {
								"value": "@concat('UserCourses', '$', formatDateTime(utcNow(), 'dd-MM-yyyy'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Date for API Call",
						"description": "Sets the date to be 30 days prior to today",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "API_Date",
							"value": {
								"value": "@formatDateTime(subtractFromTime(utcNow(), 30, 'Day'), 'yyyyMMddHHmmss')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"UsersFileName": {
						"type": "String"
					},
					"API_Date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/UAT"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-26T09:59:30Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_UAT_Users')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download Users data",
						"description": "Connects to Myrus API user end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Users File Name",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_UAT_API",
								"type": "DatasetReference",
								"parameters": {
									"Date": {
										"value": "@variables('API_Date')",
										"type": "Expression"
									},
									"EndPoint": "users"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UsersFileName')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set Users File Name",
						"description": "Sets the name of the file to be used in the sink data set",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Date for API Call",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UsersFileName",
							"value": {
								"value": "@concat('Users', '$', formatDateTime(utcNow(), 'dd-MM-yyyy'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Date for API Call",
						"description": "Sets the date to be 30 days prior to today",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "API_Date",
							"value": {
								"value": "@formatDateTime(subtractFromTime(utcNow(), 30, 'Day'), 'yyyyMMddHHmmss')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"UsersFileName": {
						"type": "String"
					},
					"API_Date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/UAT"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-26T09:59:30Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_UserCourses')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download User Course data",
						"description": "Connects to Myrus API user-course end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set User Courses File Name",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:15:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_Live_API",
								"type": "DatasetReference",
								"parameters": {
									"Date": {
										"value": "@variables('API_Date')",
										"type": "Expression"
									},
									"Endpoint": "user-courses"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UsersFileName')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set User Courses File Name",
						"description": "Sets the name of the file to be used in the sink data set",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Date for API Call",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UsersFileName",
							"value": {
								"value": "@concat('UserCourses', '$', formatDateTime(utcNow(), 'dd-MM-yyyy'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Date for API Call",
						"description": "Sets the API query date to previous day at 11:59:59 to capture any changes made since",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "API_Date",
							"value": {
								"value": "@concat(formatDateTime(subtractFromTime(utcNow(), 1, 'Day'), 'yyyyMMdd'), '115959')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Download Failure",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Download User Course data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('Download User Course Data').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "Download User Course Data"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"UsersFileName": {
						"type": "String"
					},
					"API_Date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-03T15:30:34Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BroadShield_Users')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download Users data",
						"description": "Connects to Myrus API user end point and downloads data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Users File Name",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_BroadShield_Live_API",
								"type": "DatasetReference",
								"parameters": {
									"Date": {
										"value": "@variables('API_Date')",
										"type": "Expression"
									},
									"Endpoint": "users"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BroadShield_JSON",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('UsersFileName')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set Users File Name",
						"description": "Sets the name of the file to be used in the sink data set",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Date for API Call",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "UsersFileName",
							"value": {
								"value": "@concat('Users', '$', formatDateTime(utcNow(), 'dd-MM-yyyy'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Date for API Call",
						"description": "Sets the API query date to previous day at 11:59:59 to capture any changes made since",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "API_Date",
							"value": {
								"value": "@concat(formatDateTime(subtractFromTime(utcNow(), 1, 'Day'), 'yyyyMMdd'), '115959')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Download Failure",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Download Users data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('Download Users Data').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "Download Users Data"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"UsersFileName": {
						"type": "String"
					},
					"API_Date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Broadshield/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-03T15:30:34Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CQC_CopyAPI_Responses')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copies the API responses from the file share",
				"activities": [
					{
						"name": "Copy merged location files",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@Concat('Merged_LocationAPIfile', '*', '.json')",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Fileshare",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CQC_locationresponses_file_Binary",
								"type": "DatasetReference",
								"parameters": {
									"FileType": "merged"
								}
							}
						]
					},
					{
						"name": "Copy Original location API files",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy merged location files",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@Concat('LocationAPIfile_', '*', '.json')",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Fileshare",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CQC_locationresponses_file_Binary",
								"type": "DatasetReference",
								"parameters": {
									"FileType": "original"
								}
							}
						]
					},
					{
						"name": "Remove json files from fileshare",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy Original provider API files",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_PolestarStorageAcc_Fileshare",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureFileStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "*.json",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Copy merged provider files",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Original location API files",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@Concat('Merged_ProviderAPIfile', '*', '.json')",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Fileshare",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CQC_providerresponses_file_Binary",
								"type": "DatasetReference",
								"parameters": {
									"FileType": "merged"
								}
							}
						]
					},
					{
						"name": "Copy Original provider API files",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy merged provider files",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true,
									"wildcardFileName": {
										"value": "@Concat('ProviderAPIfile_', '*', '.json')",
										"type": "Expression"
									},
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Fileshare",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CQC_providerresponses_file_Binary",
								"type": "DatasetReference",
								"parameters": {
									"FileType": "original"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "CQC/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}