{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Avery-ADF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_ColdHarbour_RoomsWithInHomeResidents')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copies data from the view in Polestar to Avery DB. Lists all rooms in CH and the active resident record assigned to that home",
				"activities": [
					{
						"name": "Refresh Data",
						"description": "Truncates table in Avery DB and Inserts data from Polestar DB using the view.",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \n    [ROOM_REF]\n    ,[ROOM_CODE]\n    ,[ROOM_DESC]\n    ,[USEFLAG]\n    ,[HOME_REF]\n    ,[RES_REF]\n    ,[RES_CODE]\n    ,[ResidentStatus]\n    ,[Firstname]\n    ,[Surname]\n    ,[AdmissionAnalysis]\n    ,[AdmissionType]\n    ,[ResidentAdmissionReason]\n    ,[AnalysisGroup]\n    ,ResidentsAssigned\nFROM \n    [dbo].[vRoomsWithInHomeResidentDetails]\nORDER BY\n    Home_Ref ASC,\n    ROOM_Ref ASC",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE ColdHarbour.RoomsWithInHomeResidentDetails",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ROOM_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ROOM_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ROOM_CODE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ROOM_CODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ROOM_DESC",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ROOM_DESC",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "USEFLAG",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "USEFLAG",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RES_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RES_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RES_CODE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "RES_CODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ResidentStatus",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ResidentStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Firstname",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Firstname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Surname",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Surname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AdmissionAnalysis",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AdmissionAnalysis",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AdmissionType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AdmissionType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ResidentAdmissionReason",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ResidentAdmissionReason",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AnalysisGroup",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AnalysisGroup",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ResidentsAssigned",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ResidentsAssigned",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_Polestar",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "ColdHarbour",
									"Table": "RoomsWithInHomeResidentDetails"
								}
							}
						]
					},
					{
						"name": "Update Room Occupancy",
						"description": "Updates the Pricing.Room tables occupancy using the refreshed data",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Refresh Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Pricing].[Update$RoomOccupancyFromCH]"
						},
						"linkedServiceName": {
							"referenceName": "AH2_Avery",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Avery/Children Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-10T09:21:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Exchequer_Fileshare')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Moves the exported csv file from the Azure File Share to Azure Storage Container. The file contains list of Exchequer companies and the users with access to it",
				"activities": [
					{
						"name": "Copy CSV",
						"description": "Copy CSV file to Exchequer Azure Container",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Fileshare_Exchequer",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Exchequer",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete File from File Share",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy CSV",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_PolestarStorageAcc_Fileshare_Exchequer",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureFileStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Exchequer/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-06-26T11:47:51Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "removes files from provided container in the date range provided",
				"activities": [
					{
						"name": "Delete Careblox bak files",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Polestar_Storage",
								"type": "DatasetReference",
								"parameters": {
									"Container": "other"
								}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "PolestarStorageAcc",
									"type": "LinkedServiceReference"
								},
								"path": "other"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"modifiedDatetimeStart": "2024-05-01T00:00:00.000Z",
								"modifiedDatetimeEnd": "2025-01-31T00:00:00.000Z",
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Date": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-09-17T11:21:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Fusion_Residents')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Resident Data Json",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['ServiceUser_ID']"
										},
										"sink": {
											"name": "ServiceUser_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Home_ID']"
										},
										"sink": {
											"name": "Home_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['room_ID']"
										},
										"sink": {
											"name": "room_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CC_HID']"
										},
										"sink": {
											"name": "CC_HID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CC_ClientID']"
										},
										"sink": {
											"name": "CC_ClientID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Title']"
										},
										"sink": {
											"name": "Title",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Forename']"
										},
										"sink": {
											"name": "Forename",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Surname']"
										},
										"sink": {
											"name": "Surname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DateOfBirth']"
										},
										"sink": {
											"name": "DateOfBirth",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DateIn']"
										},
										"sink": {
											"name": "DateIn",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DateOut']"
										},
										"sink": {
											"name": "DateOut",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['careCategory']"
										},
										"sink": {
											"name": "careCategory",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['fundingType']"
										},
										"sink": {
											"name": "fundingType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['fees']"
										},
										"sink": {
											"name": "fees",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['deleted']"
										},
										"sink": {
											"name": "deleted",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['sex']"
										},
										"sink": {
											"name": "sex",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['maritalStatus']"
										},
										"sink": {
											"name": "maritalStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nationality']"
										},
										"sink": {
											"name": "nationality",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ni_num']"
										},
										"sink": {
											"name": "ni_num",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['NHS']"
										},
										"sink": {
											"name": "NHS",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nhs_Expiry']"
										},
										"sink": {
											"name": "nhs_Expiry",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nickname']"
										},
										"sink": {
											"name": "nickname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['status']"
										},
										"sink": {
											"name": "status",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['residencyType']"
										},
										"sink": {
											"name": "residencyType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['dependency']"
										},
										"sink": {
											"name": "dependency",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['alertCode']"
										},
										"sink": {
											"name": "alertCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['admittedFrom']"
										},
										"sink": {
											"name": "admittedFrom",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['admittedFrom_Ad1']"
										},
										"sink": {
											"name": "admittedFrom_Ad1",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['admittedFrom_Ad2']"
										},
										"sink": {
											"name": "admittedFrom_Ad2",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['admittedFrom_Ad3']"
										},
										"sink": {
											"name": "admittedFrom_Ad3",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['admittedFrom_Ad4']"
										},
										"sink": {
											"name": "admittedFrom_Ad4",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['admittedFrom_PC']"
										},
										"sink": {
											"name": "admittedFrom_PC",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['admittedFrom_Tel']"
										},
										"sink": {
											"name": "admittedFrom_Tel",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['admissionCode']"
										},
										"sink": {
											"name": "admissionCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ResContractSigned']"
										},
										"sink": {
											"name": "ResContractSigned",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['finalFundingDate']"
										},
										"sink": {
											"name": "finalFundingDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['dischargeCode']"
										},
										"sink": {
											"name": "dischargeCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['dischargeLocation']"
										},
										"sink": {
											"name": "dischargeLocation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['dateOfDeath']"
										},
										"sink": {
											"name": "dateOfDeath",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['timeOfDeath']"
										},
										"sink": {
											"name": "timeOfDeath",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['doctorName']"
										},
										"sink": {
											"name": "doctorName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['deathCause']"
										},
										"sink": {
											"name": "deathCause",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ceaseInvoicing']"
										},
										"sink": {
											"name": "ceaseInvoicing",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['eye_colour']"
										},
										"sink": {
											"name": "eye_colour",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['height_cm']"
										},
										"sink": {
											"name": "height_cm",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['height_m']"
										},
										"sink": {
											"name": "height_m",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['hair_colour']"
										},
										"sink": {
											"name": "hair_colour",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['hair_length']"
										},
										"sink": {
											"name": "hair_length",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['eye_wear']"
										},
										"sink": {
											"name": "eye_wear",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['hearing_aid']"
										},
										"sink": {
											"name": "hearing_aid",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['facial_hair']"
										},
										"sink": {
											"name": "facial_hair",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['occupation']"
										},
										"sink": {
											"name": "occupation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['allergies']"
										},
										"sink": {
											"name": "allergies",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['important_information']"
										},
										"sink": {
											"name": "important_information",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['deathNotes']"
										},
										"sink": {
											"name": "deathNotes",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ClientNumber']"
										},
										"sink": {
											"name": "ClientNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ClientID']"
										},
										"sink": {
											"name": "ClientID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['su_med_history']"
										},
										"sink": {
											"name": "su_med_history",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['su_med_likes']"
										},
										"sink": {
											"name": "su_med_likes",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['su_med_social']"
										},
										"sink": {
											"name": "su_med_social",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['su_med_allergies']"
										},
										"sink": {
											"name": "su_med_allergies",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['su_DL_requirements']"
										},
										"sink": {
											"name": "su_DL_requirements",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['su_evac_notes']"
										},
										"sink": {
											"name": "su_evac_notes",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['care_hours']"
										},
										"sink": {
											"name": "care_hours",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DNAR']"
										},
										"sink": {
											"name": "DNAR",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['respectTEP']"
										},
										"sink": {
											"name": "respectTEP",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['respectTEP_date']"
										},
										"sink": {
											"name": "respectTEP_date",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DOLS']"
										},
										"sink": {
											"name": "DOLS",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DOLSDate']"
										},
										"sink": {
											"name": "DOLSDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DOLSExpiry']"
										},
										"sink": {
											"name": "DOLSExpiry",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DOLSRenewal']"
										},
										"sink": {
											"name": "DOLSRenewal",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DNARExpiry']"
										},
										"sink": {
											"name": "DNARExpiry",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['EndOfLife']"
										},
										"sink": {
											"name": "EndOfLife",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DPLNumber']"
										},
										"sink": {
											"name": "DPLNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Religion']"
										},
										"sink": {
											"name": "Religion",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['su_funeral_wishes']"
										},
										"sink": {
											"name": "su_funeral_wishes",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['admissionreason_notes']"
										},
										"sink": {
											"name": "admissionreason_notes",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['KeyCareWorker']"
										},
										"sink": {
											"name": "KeyCareWorker",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['KeyNurseWorker']"
										},
										"sink": {
											"name": "KeyNurseWorker",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['financial_notes']"
										},
										"sink": {
											"name": "financial_notes",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['hospital_num']"
										},
										"sink": {
											"name": "hospital_num",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['target_weight']"
										},
										"sink": {
											"name": "target_weight",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['target_fluid']"
										},
										"sink": {
											"name": "target_fluid",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['gdpr_consent_sent']"
										},
										"sink": {
											"name": "gdpr_consent_sent",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['gdpr_consent_received']"
										},
										"sink": {
											"name": "gdpr_consent_received",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['su_lang']"
										},
										"sink": {
											"name": "su_lang",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['susexuality']"
										},
										"sink": {
											"name": "susexuality",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['UseBedRails']"
										},
										"sink": {
											"name": "UseBedRails",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['expectedRate']"
										},
										"sink": {
											"name": "expectedRate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['expectedFundingType']"
										},
										"sink": {
											"name": "expectedFundingType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['adrt']"
										},
										"sink": {
											"name": "adrt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['FNCAppliedFor']"
										},
										"sink": {
											"name": "FNCAppliedFor",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['TermsAndConditions']"
										},
										"sink": {
											"name": "TermsAndConditions",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ProofOfFunding']"
										},
										"sink": {
											"name": "ProofOfFunding",
											"type": "String"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Fusion_Resident_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "FusionResident"
								}
							}
						]
					},
					{
						"name": "Homes Data",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['Home_ID']"
										},
										"sink": {
											"name": "Home_ID"
										}
									},
									{
										"source": {
											"path": "$['NameOfHome']"
										},
										"sink": {
											"name": "NameOfHome"
										}
									},
									{
										"source": {
											"path": "$['dateOpened']"
										},
										"sink": {
											"name": "dateOpened"
										}
									},
									{
										"source": {
											"path": "$['Comp_ID']"
										},
										"sink": {
											"name": "Comp_ID"
										}
									},
									{
										"source": {
											"path": "$['AddressLine1']"
										},
										"sink": {
											"name": "AddressLine1"
										}
									},
									{
										"source": {
											"path": "$['AddressLine2']"
										},
										"sink": {
											"name": "AddressLine2"
										}
									},
									{
										"source": {
											"path": "$['AddressLine3']"
										},
										"sink": {
											"name": "AddressLine3"
										}
									},
									{
										"source": {
											"path": "$['AddressLine4']"
										},
										"sink": {
											"name": "AddressLine4"
										}
									},
									{
										"source": {
											"path": "$['postcode']"
										},
										"sink": {
											"name": "postcode"
										}
									},
									{
										"source": {
											"path": "$['Manager']"
										},
										"sink": {
											"name": "Manager"
										}
									},
									{
										"source": {
											"path": "$['TelephoneNo']"
										},
										"sink": {
											"name": "TelephoneNo"
										}
									},
									{
										"source": {
											"path": "$['Fax']"
										},
										"sink": {
											"name": "Fax"
										}
									},
									{
										"source": {
											"path": "$['Email']"
										},
										"sink": {
											"name": "Email"
										}
									},
									{
										"source": {
											"path": "$['MinHomeOccupancy']"
										},
										"sink": {
											"name": "MinHomeOccupancy"
										}
									},
									{
										"source": {
											"path": "$['OverallFeeNominal']"
										},
										"sink": {
											"name": "OverallFeeNominal"
										}
									},
									{
										"source": {
											"path": "$['Reg1']"
										},
										"sink": {
											"name": "Reg1"
										}
									},
									{
										"source": {
											"path": "$['Reg2']"
										},
										"sink": {
											"name": "Reg2"
										}
									},
									{
										"source": {
											"path": "$['Reg3']"
										},
										"sink": {
											"name": "Reg3"
										}
									},
									{
										"source": {
											"path": "$['Reg4']"
										},
										"sink": {
											"name": "Reg4"
										}
									},
									{
										"source": {
											"path": "$['Reg5']"
										},
										"sink": {
											"name": "Reg5"
										}
									},
									{
										"source": {
											"path": "$['Reg6']"
										},
										"sink": {
											"name": "Reg6"
										}
									},
									{
										"source": {
											"path": "$['Reg7']"
										},
										"sink": {
											"name": "Reg7"
										}
									},
									{
										"source": {
											"path": "$['Reg8']"
										},
										"sink": {
											"name": "Reg8"
										}
									},
									{
										"source": {
											"path": "$['BedNoReg1']"
										},
										"sink": {
											"name": "BedNoReg1"
										}
									},
									{
										"source": {
											"path": "$['BedNoReg2']"
										},
										"sink": {
											"name": "BedNoReg2"
										}
									},
									{
										"source": {
											"path": "$['BedNoReg3']"
										},
										"sink": {
											"name": "BedNoReg3"
										}
									},
									{
										"source": {
											"path": "$['BedNoReg4']"
										},
										"sink": {
											"name": "BedNoReg4"
										}
									},
									{
										"source": {
											"path": "$['BedNoReg5']"
										},
										"sink": {
											"name": "BedNoReg5"
										}
									},
									{
										"source": {
											"path": "$['BedNoReg6']"
										},
										"sink": {
											"name": "BedNoReg6"
										}
									},
									{
										"source": {
											"path": "$['BedNoReg7']"
										},
										"sink": {
											"name": "BedNoReg7"
										}
									},
									{
										"source": {
											"path": "$['BedNoReg8']"
										},
										"sink": {
											"name": "BedNoReg8"
										}
									},
									{
										"source": {
											"path": "$['NominalReg1']"
										},
										"sink": {
											"name": "NominalReg1"
										}
									},
									{
										"source": {
											"path": "$['NominalReg2']"
										},
										"sink": {
											"name": "NominalReg2"
										}
									},
									{
										"source": {
											"path": "$['NominalReg3']"
										},
										"sink": {
											"name": "NominalReg3"
										}
									},
									{
										"source": {
											"path": "$['NominalReg4']"
										},
										"sink": {
											"name": "NominalReg4"
										}
									},
									{
										"source": {
											"path": "$['NominalReg5']"
										},
										"sink": {
											"name": "NominalReg5"
										}
									},
									{
										"source": {
											"path": "$['NominalReg6']"
										},
										"sink": {
											"name": "NominalReg6"
										}
									},
									{
										"source": {
											"path": "$['NominalReg7']"
										},
										"sink": {
											"name": "NominalReg7"
										}
									},
									{
										"source": {
											"path": "$['NominalReg8']"
										},
										"sink": {
											"name": "NominalReg8"
										}
									},
									{
										"source": {
											"path": "$['NursingReg1']"
										},
										"sink": {
											"name": "NursingReg1"
										}
									},
									{
										"source": {
											"path": "$['NursingReg2']"
										},
										"sink": {
											"name": "NursingReg2"
										}
									},
									{
										"source": {
											"path": "$['NursingReg3']"
										},
										"sink": {
											"name": "NursingReg3"
										}
									},
									{
										"source": {
											"path": "$['NursingReg4']"
										},
										"sink": {
											"name": "NursingReg4"
										}
									},
									{
										"source": {
											"path": "$['NursingReg5']"
										},
										"sink": {
											"name": "NursingReg5"
										}
									},
									{
										"source": {
											"path": "$['NursingReg6']"
										},
										"sink": {
											"name": "NursingReg6"
										}
									},
									{
										"source": {
											"path": "$['NursingReg7']"
										},
										"sink": {
											"name": "NursingReg7"
										}
									},
									{
										"source": {
											"path": "$['NursingReg8']"
										},
										"sink": {
											"name": "NursingReg8"
										}
									},
									{
										"source": {
											"path": "$['MinFeesReg1']"
										},
										"sink": {
											"name": "MinFeesReg1"
										}
									},
									{
										"source": {
											"path": "$['MinFeesReg2']"
										},
										"sink": {
											"name": "MinFeesReg2"
										}
									},
									{
										"source": {
											"path": "$['MinFeesReg3']"
										},
										"sink": {
											"name": "MinFeesReg3"
										}
									},
									{
										"source": {
											"path": "$['MinFeesReg4']"
										},
										"sink": {
											"name": "MinFeesReg4"
										}
									},
									{
										"source": {
											"path": "$['MinFeesReg5']"
										},
										"sink": {
											"name": "MinFeesReg5"
										}
									},
									{
										"source": {
											"path": "$['MinFeesReg6']"
										},
										"sink": {
											"name": "MinFeesReg6"
										}
									},
									{
										"source": {
											"path": "$['MinFeesReg7']"
										},
										"sink": {
											"name": "MinFeesReg7"
										}
									},
									{
										"source": {
											"path": "$['MinFeesReg8']"
										},
										"sink": {
											"name": "MinFeesReg8"
										}
									},
									{
										"source": {
											"path": "$['NextInvRun']"
										},
										"sink": {
											"name": "NextInvRun"
										}
									},
									{
										"source": {
											"path": "$['NextPayrollRun']"
										},
										"sink": {
											"name": "NextPayrollRun"
										}
									},
									{
										"source": {
											"path": "$['NextPayPeriod']"
										},
										"sink": {
											"name": "NextPayPeriod"
										}
									},
									{
										"source": {
											"path": "$['PayrollPeriod']"
										},
										"sink": {
											"name": "PayrollPeriod"
										}
									},
									{
										"source": {
											"path": "$['PayrollNoPrefix']"
										},
										"sink": {
											"name": "PayrollNoPrefix"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetStd1']"
										},
										"sink": {
											"name": "StfBudgetStd1"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetStd2']"
										},
										"sink": {
											"name": "StfBudgetStd2"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetStd3']"
										},
										"sink": {
											"name": "StfBudgetStd3"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetStd4']"
										},
										"sink": {
											"name": "StfBudgetStd4"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetStd5']"
										},
										"sink": {
											"name": "StfBudgetStd5"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetStd6']"
										},
										"sink": {
											"name": "StfBudgetStd6"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetStd7']"
										},
										"sink": {
											"name": "StfBudgetStd7"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetVar1']"
										},
										"sink": {
											"name": "StfBudgetVar1"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetVar2']"
										},
										"sink": {
											"name": "StfBudgetVar2"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetVar3']"
										},
										"sink": {
											"name": "StfBudgetVar3"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetVar4']"
										},
										"sink": {
											"name": "StfBudgetVar4"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetVar5']"
										},
										"sink": {
											"name": "StfBudgetVar5"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetVar6']"
										},
										"sink": {
											"name": "StfBudgetVar6"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetVar7']"
										},
										"sink": {
											"name": "StfBudgetVar7"
										}
									},
									{
										"source": {
											"path": "$['InvoiceFooter']"
										},
										"sink": {
											"name": "InvoiceFooter"
										}
									},
									{
										"source": {
											"path": "$['HolidayStartDate']"
										},
										"sink": {
											"name": "HolidayStartDate"
										}
									},
									{
										"source": {
											"path": "$['HomeAccRef']"
										},
										"sink": {
											"name": "HomeAccRef"
										}
									},
									{
										"source": {
											"path": "$['Department']"
										},
										"sink": {
											"name": "Department"
										}
									},
									{
										"source": {
											"path": "$['CommandPath']"
										},
										"sink": {
											"name": "CommandPath"
										}
									},
									{
										"source": {
											"path": "$['CommsNotes']"
										},
										"sink": {
											"name": "CommsNotes"
										}
									},
									{
										"source": {
											"path": "$['deleted']"
										},
										"sink": {
											"name": "deleted"
										}
									},
									{
										"source": {
											"path": "$['deviceID']"
										},
										"sink": {
											"name": "deviceID"
										}
									},
									{
										"source": {
											"path": "$['IP1']"
										},
										"sink": {
											"name": "IP1"
										}
									},
									{
										"source": {
											"path": "$['IP2']"
										},
										"sink": {
											"name": "IP2"
										}
									},
									{
										"source": {
											"path": "$['IP3']"
										},
										"sink": {
											"name": "IP3"
										}
									},
									{
										"source": {
											"path": "$['IP4']"
										},
										"sink": {
											"name": "IP4"
										}
									},
									{
										"source": {
											"path": "$['Port']"
										},
										"sink": {
											"name": "Port"
										}
									},
									{
										"source": {
											"path": "$['CCCompany_ID']"
										},
										"sink": {
											"name": "CCCompany_ID"
										}
									},
									{
										"source": {
											"path": "$['CCHome_ID']"
										},
										"sink": {
											"name": "CCHome_ID"
										}
									},
									{
										"source": {
											"path": "$['Header1']"
										},
										"sink": {
											"name": "Header1"
										}
									},
									{
										"source": {
											"path": "$['Header2']"
										},
										"sink": {
											"name": "Header2"
										}
									},
									{
										"source": {
											"path": "$['invFooterBACS']"
										},
										"sink": {
											"name": "invFooterBACS"
										}
									},
									{
										"source": {
											"path": "$['invFooterDirect']"
										},
										"sink": {
											"name": "invFooterDirect"
										}
									},
									{
										"source": {
											"path": "$['invFooterCheque']"
										},
										"sink": {
											"name": "invFooterCheque"
										}
									},
									{
										"source": {
											"path": "$['invFooterCash']"
										},
										"sink": {
											"name": "invFooterCash"
										}
									},
									{
										"source": {
											"path": "$['invFooterStanding']"
										},
										"sink": {
											"name": "invFooterStanding"
										}
									},
									{
										"source": {
											"path": "$['invFooterSpare']"
										},
										"sink": {
											"name": "invFooterSpare"
										}
									},
									{
										"source": {
											"path": "$['InvAddressLine']"
										},
										"sink": {
											"name": "InvAddressLine"
										}
									},
									{
										"source": {
											"path": "$['InvAddressLine1']"
										},
										"sink": {
											"name": "InvAddressLine1"
										}
									},
									{
										"source": {
											"path": "$['doubleLineRota']"
										},
										"sink": {
											"name": "doubleLineRota"
										}
									},
									{
										"source": {
											"path": "$['upperAnalysisLimit']"
										},
										"sink": {
											"name": "upperAnalysisLimit"
										}
									},
									{
										"source": {
											"path": "$['lowerAnalysisLimit']"
										},
										"sink": {
											"name": "lowerAnalysisLimit"
										}
									},
									{
										"source": {
											"path": "$['analysisTickSize']"
										},
										"sink": {
											"name": "analysisTickSize"
										}
									},
									{
										"source": {
											"path": "$['AppraisalLength']"
										},
										"sink": {
											"name": "AppraisalLength"
										}
									},
									{
										"source": {
											"path": "$['SSLength']"
										},
										"sink": {
											"name": "SSLength"
										}
									},
									{
										"source": {
											"path": "$['InductionLength']"
										},
										"sink": {
											"name": "InductionLength"
										}
									},
									{
										"source": {
											"path": "$['RotaStartDateHome']"
										},
										"sink": {
											"name": "RotaStartDateHome"
										}
									},
									{
										"source": {
											"path": "$['cost_centre']"
										},
										"sink": {
											"name": "cost_centre"
										}
									},
									{
										"source": {
											"path": "$['pooltshprefix']"
										},
										"sink": {
											"name": "pooltshprefix"
										}
									},
									{
										"source": {
											"path": "$['emarx_id']"
										},
										"sink": {
											"name": "emarx_id"
										}
									},
									{
										"source": {
											"path": "$['home_emarx_connection']"
										},
										"sink": {
											"name": "home_emarx_connection"
										}
									},
									{
										"source": {
											"path": "$['home_emarx_username']"
										},
										"sink": {
											"name": "home_emarx_username"
										}
									},
									{
										"source": {
											"path": "$['home_emarx_password']"
										},
										"sink": {
											"name": "home_emarx_password"
										}
									},
									{
										"source": {
											"path": "$['ResponsibleUser']"
										},
										"sink": {
											"name": "ResponsibleUser"
										}
									},
									{
										"source": {
											"path": "$['is_using_v3']"
										},
										"sink": {
											"name": "is_using_v3"
										}
									},
									{
										"source": {
											"path": "$['invoice_pdf_password']"
										},
										"sink": {
											"name": "invoice_pdf_password"
										}
									},
									{
										"source": {
											"path": "$['timesheetStartDay']"
										},
										"sink": {
											"name": "timesheetStartDay"
										}
									},
									{
										"source": {
											"path": "$['RotaStartDay']"
										},
										"sink": {
											"name": "RotaStartDay"
										}
									},
									{
										"source": {
											"path": "$['StaffAppRotaView']"
										},
										"sink": {
											"name": "StaffAppRotaView"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Fusion_Homes_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "FusionHomes"
								}
							}
						]
					},
					{
						"name": "Assessment Headers",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Fusion_Json_File",
								"type": "DatasetReference",
								"parameters": {
									"Filename": "Assessement Header.json"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Fusion",
									"Table": "cp_assessment_header"
								}
							}
						]
					},
					{
						"name": "Assessment Completed",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"parallelCopies": 16
						},
						"inputs": [
							{
								"referenceName": "DS_Fusion_Json_File",
								"type": "DatasetReference",
								"parameters": {
									"Filename": "Assessement Completed Jan 2025.json"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Fusion",
									"Table": "cp_assessment_completed"
								}
							}
						]
					},
					{
						"name": "Assessment Completed Answers",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Fusion_Json_File",
								"type": "DatasetReference",
								"parameters": {
									"Filename": "Assessement Completed Answers 2819980.json"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Fusion",
									"Table": "cp_assessment_completedanswers"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Fusion"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Hydra_Output_File')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Downloads the Output file that Hydra generate from their FTP to an Azure Fileshare.",
				"activities": [
					{
						"name": "Download File",
						"description": "Downloads radar-output.xml file from Hydra FTP to azure blob storage",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Remove Existing File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FtpReadSettings",
									"recursive": true,
									"useBinaryTransfer": true,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Hydra_RadarFile",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Radar_AzureStorage",
								"type": "DatasetReference",
								"parameters": {
									"Date": {
										"value": "@variables('Date')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Remove Existing File",
						"description": "Deletes any previous radar-output.xml file on the fileshare before copying the new one there.",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Set Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_PolestarStorageAcc_Fileshare_radar_output_xml",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureFileStorageReadSettings",
								"recursive": false,
								"wildcardFileName": "radar-output*.xml",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Copy file to fileshare",
						"description": "",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Download File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureFileStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Radar_AzureStorage",
								"type": "DatasetReference",
								"parameters": {
									"Date": {
										"value": "@variables('Date')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Fileshare_radar_output_xml",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Set Date",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Date",
							"value": {
								"value": "@utcNow('yyyy-MM-dd')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Radar"
				},
				"annotations": [],
				"lastPublishTime": "2024-07-01T09:10:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Insert_ExchequerCompanyAccess')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Inserts the data from the Exported report into AH2 Avery Audit.ExchequerCompanyAccess",
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CompanyCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CompanyCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompanyName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CompanyName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "UserID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "UserName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ReportDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Exchequer_CSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Audit",
									"Table": "ExchequerCompanyAccess"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Exchequer/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-06-27T11:33:14Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_JobRoles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT ID\n      ,Job_Code\n      ,ISNULL(Job_Category, '') AS JobCategory\n      ,ISNULL(job_cat2, '') AS JobCategory2\n      ,ISNULL(Description, '') AS JobDesctiption\n      ,ISNULL(SupportType, '') AS SupportType\n  FROM dbo.WeeklyHrs_Cat\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "SET IDENTITY_INSERT Avery.JobRole ON ",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "JobRoleID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Job_Code",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "JobCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "JobCategory",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "JobCategory",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "JobCategory2",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "JobCategory2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "JobDesctiption",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "JobDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SupportType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SupportType",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH1_Avery_Homes",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Avery",
									"Table": "JobRole"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Avery/Children Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-05T09:36:07Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_MCM_GetData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get MCM Data",
						"description": "Get the MCM data via Azure function",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "www.test.co.uk"
						}
					},
					{
						"name": "AZ Func Results",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get MCM Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "MCM_Json_Data",
							"value": {
								"value": "@activity('Get MCM Data').output.response",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Write to text file",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "VariableValue",
										"value": {
											"value": "@variables('MCM_Json_Data')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "VariableValue",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 1
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_MCM_Dummy_input",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_MCM_textFile",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Write to json file",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "AZ Func Results",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "VariableValue",
										"value": {
											"value": "@json(variables('MCM_Json_Data'))",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"filePattern": "arrayOfObjects"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "VariableValue",
											"type": "String"
										},
										"sink": {
											"path": "$['Column_1']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_MCM_Dummy_input",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_MCM_Json",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"MCM_Json_Data": {
						"type": "String"
					}
				},
				"folder": {
					"name": "MCM"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Polestar_Occupancy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy 90 Days Occupancy Data",
						"description": "Copies data from Polestar DB Occupancy table to TRANSFOR_DB OCCUPANCY_INCR table. Only the last 90 days of records",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set 90DayDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select * from dbo.Occupancy where CAST(CreateDateTime as date)>= '@{variables('DeleteDate')}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ABS_BILL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ABS_BILL",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "ADANAL_DEC",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ADANAL_DEC",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ADTYPE_DEC",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ADTYPE_DEC",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AmendDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "AmendDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Cont_Ref",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Cont_Ref",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreateDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreateDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "EXTROOM",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "EXTROOM",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "INHOME",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "INHOME",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "LOC_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LOC_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "OCC_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "OCC_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RES_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RES_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ROOM",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ROOM",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "RecType",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "RecType",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "TEMPDIS",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "TEMPDIS",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "VoidNo",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "VoidNo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "GROSSRATE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 12
										},
										"sink": {
											"name": "GROSSRATE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 12
										}
									},
									{
										"source": {
											"name": "ROOMRATE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 12
										},
										"sink": {
											"name": "ROOMRATE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 12
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_Polestar",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "STG",
									"Table": "OCCUPANCY_INCR"
								}
							}
						]
					},
					{
						"name": "Set 90DayDate",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "DeleteDate",
							"value": {
								"value": "@formatDateTime(addDays(utcNow(),-90),'yyyy-MM-dd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Add new records to Occupancy Table",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Copy 90 Days Occupancy Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AH2_TRANSFORM_DB",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "Delete from Transform_DB.STG.OCCUPANCY\nWHERE CreateDateTime>= '@{variables('DeleteDate')}'\n\nInsert into Transform_DB.STG.OCCUPANCY \nSelect * from Transform_DB.STG.OCCUPANCY_INCR",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"DeleteDate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Polestar ETL Process"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Pricing_CreateOrAlter_Views')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Executes procedures that create or alter views each day.",
				"activities": [
					{
						"name": "Attributes",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Pricing_vRoomAttributes",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Addons",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Attributes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Pricing_vRoomAddons",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Pricing"
				},
				"annotations": [],
				"lastPublishTime": "2024-07-19T13:59:58Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Res_Forms')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Res Forms Data",
						"description": "AH1 Avery - AH2 YardiStage",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "SET IDENTITY_INSERT dbo.Res_Forms ON",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "res_no",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "res_no",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "forename",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "forename",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "surname",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "surname",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "intranet",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "intranet",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "change_date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "change_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "admitted_from",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "admitted_from",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "tested_prior_last",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "tested_prior_last",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "tested_date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "tested_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "tested_where",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "tested_where",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "tested_result",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "tested_result",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "symptomatic",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "symptomatic",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "symptomatic_date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "symptomatic_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "isolation_Date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "isolation_Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "isolation_end_date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "isolation_end_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "days_isolated",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "days_isolated",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "protocol_followed",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "protocol_followed",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "hospital_prior",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "hospital_prior",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Hospital_lastdate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Hospital_lastdate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "hospital_duration",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "hospital_duration",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "hospital_tested",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "hospital_tested",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "hospital_tested_date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "hospital_tested_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "hospital_rest_result",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "hospital_rest_result",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "form_type",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "form_type",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "status",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "status",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "room_no",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "room_no",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "funding_change",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "funding_change",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "dilaps_charge",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "dilaps_charge",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "comp_by",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "comp_by",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "comp_date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "comp_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "SL_Chk_by",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "SL_Chk_by",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "SL_chk_date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "SL_chk_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "discharge_reason",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "discharge_reason",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "comments",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "comments",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "dob",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "dob",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "SL_comments",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "SL_comments",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "NHS_No",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "NHS_No",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Nurs_res",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Nurs_res",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Resp_Perm",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Resp_Perm",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "disch_date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "disch_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "paymentonadm",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										},
										"sink": {
											"name": "paymentonadm",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "NSHIDno",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "NSHIDno",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "fee",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 7
										},
										"sink": {
											"name": "fee",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 7
										}
									},
									{
										"source": {
											"name": "Date_Complete",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										},
										"sink": {
											"name": "Date_Complete",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH1_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "Res_Forms"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "Res_Forms"
								}
							}
						]
					},
					{
						"name": "SET IDENTITY INSERT OF",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Copy Res Forms Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AH2_YardiStage",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "SET IDENTITY_INSERT dbo.Res_Forms OFF"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Yardi/YardiStage"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SalariedStaff')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Upserts Avery.SalariedStaff in Transform_DB from csv file. The csv file is an extract of the excel file found on the Y drive (Y:\\Databases\\Uploads\\Weekly_hrs)",
				"activities": [
					{
						"name": "Copy data to Transform_DB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy file to Azure Blob storage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"EmployeeNumber"
									]
								},
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "HomeName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HomeName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Surname",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Surname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "JobRoleCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "JobRoleCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "JobRole",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "JobRole",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Hours",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Hours",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 5
										}
									},
									{
										"source": {
											"name": "ContractedHours",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ContractedHours",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 5
										}
									},
									{
										"source": {
											"name": "ContractType",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ContractType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EmployeeNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmployeeNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HomeCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HomeCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IntranetID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IntranetID",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Other_CSV",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "SalariedStaff.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Avery",
									"Table": "SalariedStaff"
								}
							}
						]
					},
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy data to Transform_DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_PolestarStorageAcc_Fileshare_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": "SalariedStaff.csv"
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureFileStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Copy file to Azure Blob storage",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "469",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HomeName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Firstname",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FirstName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "surname",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Surname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Role Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "JobRoleCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Role",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "JobRole",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "hours",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Hours",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 5
										}
									},
									{
										"source": {
											"name": "contracted hours",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ContractedHours",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 5
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ContractType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Emp_number",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmployeeNumber",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Home Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "HomeCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Intranet",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IntranetID",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Fileshare_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": "SalariedStaff.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Other_CSV",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "SalariedStaff.csv"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Other"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-28T12:27:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SoftWorks_API_Clockings')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set WeekEndingDate",
						"description": "Set the previous week ending date in the dd-MM-yyyy format for the API",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "WeekEndingDate",
							"value": {
								"value": "@formatDateTime(subtractFromTime(utcNow(), dayOfWeek(utcNow()), 'Day'), 'dd-MM-yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set WeekBegining Date",
						"description": "Set the previous week Start date in the dd-MM-yyyy format for the API",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set WeekEndingDate",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "WeekBeginingDate",
							"value": {
								"value": "@formatDateTime(subtractFromTime(subtractFromTime(utcNow(), dayOfWeek(utcNow()), 'Day'), 6, 'Day'), 'dd-MM-yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Download Clockings data",
						"description": "Start date in the body looks to be irrelevant, it uses the end date to return emp with a start date less than that. ",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Clockings File Name",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:03:00",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "POST",
								"requestBody": {
									"value": "@concat('{\n    \"DataExtractType\": 2000,\n    \"StartDate\": \"',variables('WeekBeginingDate'),'\",\n    \"EndDate\": \"',variables('WeekEndingDate'),'\",\n    \"Customer\": \"internal\"\n}')",
									"type": "Expression"
								},
								"additionalHeaders": {
									"Content-Type": "application/json"
								},
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Softworks_API_Employees",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Softworks",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('ClockingsFileName')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set Clockings File Name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set WeekBegining Date",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ClockingsFileName",
							"value": {
								"value": "@concat('Clockings', '$', variables('WeekBeginingDate'), '$', variables('WeekEndingDate') )",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"TodaysDate": {
						"type": "String"
					},
					"ClockingsFileName": {
						"type": "String"
					},
					"WeekEndingDate": {
						"type": "String"
					},
					"WeekBeginingDate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Softworks/Children Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-10T11:21:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SoftWorks_API_Employee')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Download Employee data",
						"description": "Start date in the body looks to be irrelevant, it uses the end date to return emp with a start date less than that. ",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Employee File Name",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:03:00",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "POST",
								"requestBody": {
									"value": "@concat('{\n    \"DataExtractType\": 4000,\n    \"StartDate\": \"',variables('TodaysDate'),'\",\n    \"EndDate\": \"',variables('ThreeMonthsAhead'),'\",\n    \"Customer\": \"internal\"\n}')",
									"type": "Expression"
								},
								"additionalHeaders": {
									"Content-Type": "application/json"
								},
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Softworks_API_Employees",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Softworks",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('EmpFileName')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set Todays Date",
						"description": "Used in sink to Store the files in folder with todays date",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TodaysDate",
							"value": {
								"value": "@formatDateTime(utcNow(), 'dd-MM-yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set One Months Ahead",
						"description": "Set to the end of the month, 1 month ahead. Used in the API call so details of future starters is returned.",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Todays Date",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ThreeMonthsAhead",
							"value": {
								"value": "@formatDateTime(addToTime(utcNow(), 1, 'Month'), 'dd-MM-yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set WeekEndingDate",
						"description": "Set the previous week ending date in the dd-MM-yyyy format for the API",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "WeekEndingDate",
							"value": {
								"value": "@formatDateTime(subtractFromTime(utcNow(), dayOfWeek(utcNow()), 'Day'), 'dd-MM-yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set WeekBegining Date",
						"description": "Set the previous week Start date in the dd-MM-yyyy format for the API",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Set WeekEndingDate",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "WeekBeginingDate",
							"value": {
								"value": "@formatDateTime(subtractFromTime(subtractFromTime(utcNow(), dayOfWeek(utcNow()), 'Day'), 6, 'Day'), 'dd-MM-yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Download Clockings data",
						"description": "Start date in the body looks to be irrelevant, it uses the end date to return emp with a start date less than that. ",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Set Clockings File Name",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:03:00",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "POST",
								"requestBody": {
									"value": "@concat('{\n    \"DataExtractType\": 2000,\n    \"StartDate\": \"',variables('WeekBeginingDate'),'\",\n    \"EndDate\": \"',variables('WeekEndingDate'),'\",\n    \"Customer\": \"internal\"\n}')",
									"type": "Expression"
								},
								"additionalHeaders": {
									"Content-Type": "application/json"
								},
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Softworks_API_Employees",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Softworks",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@variables('ClockingsFileName')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set Clockings File Name",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Set WeekBegining Date",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ClockingsFileName",
							"value": {
								"value": "@concat('Clockings', '$', variables('WeekBeginingDate'), '$', variables('WeekEndingDate') )",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Employee File Name",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set One Months Ahead",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "EmpFileName",
							"value": {
								"value": "@concat('EmployeeList', '$', variables('TodaysDate'))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"TodaysDate": {
						"type": "String"
					},
					"ThreeMonthsAhead": {
						"type": "String"
					},
					"EmpFileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Softworks/Children Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-10T11:21:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Softworks_EmployeeHoliday')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "For Each File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get File List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get File List').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy from file to SQL",
									"description": "the @item().Name variable is key on the source. the .Name provides the childItem Name from the output of the Metadata task",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": "EmployeeHoliday",
												"wildcardFileName": {
													"value": "@item().Name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Employee",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "Employee",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "EmployeeNumber",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "EmployeeNumber",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "Start Date",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "StartDate",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "End Date",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "EndDate",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "Hours Duration",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "HoursDuration",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "Absence Type",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "AbsenceType",
														"type": "String",
														"physicalType": "varchar"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_PolestarStorageAcc_Softworks_RateSheets",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_AH2_TRANSFORM_DB",
											"type": "DatasetReference",
											"parameters": {
												"Schema": "Softworks",
												"Table": "EmployeeHoliday"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Get File List",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_softworks_EmployeeHoliday",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Softworks"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-20T15:53:45Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Softworks_RateSheets')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "For Each File",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get File List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get File List').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy from file to SQL",
									"description": "the @item().Name variable is key on the source. the .Name provides the childItem Name from the output of the Metadata task",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": "RateSheets",
												"wildcardFileName": {
													"value": "@item().Name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Employee Number",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "EmployeeID",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "Employee Name",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "EmployeeName",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "Contract Type",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ContractType",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "Contract Start Date",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ContractStartDate",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "Contract End Date",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ContractEndDate",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "External Reference",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "ExternalReference",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "Is Default",
														"type": "String",
														"physicalType": "String"
													},
													"sink": {
														"name": "IsDefault",
														"type": "String",
														"physicalType": "varchar"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_PolestarStorageAcc_Softworks_RateSheets",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_AH2_TRANSFORM_DB",
											"type": "DatasetReference",
											"parameters": {
												"Schema": "Softworks",
												"Table": "EmployeeRates"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Get File List",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_PolestarStorageAcc_Softworks_RateSheets",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Softworks"
				},
				"annotations": [],
				"lastPublishTime": "2024-07-23T14:21:03Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Transform_HomeDetails')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Home Details",
						"description": "Copys the various Home Details from Avery DB vHomeDetails to TRANSFORM_DB HomeDetails",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"HomeID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "HomeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "HomeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "IntranetID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "IntranetID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "HomeName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Homename",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HomeTypeName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeTypeName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HomeStatus",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BedCount",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BedCount",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Group",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Group",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SubGroup",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SubGroup",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Division",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Division",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DivisionAltName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DivisionAltName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Postcode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Postcode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Latitude",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Latitude",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Longitude",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Longitude",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ColdHarbourHOME_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ColdHarbourHOME_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ExchCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ExchCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CHCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CHCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CareBloxHomeid",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CareBloxHomeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CBCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CBCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HomeManager",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeManager",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ManagerEmail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ManagerEmail",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DeputyEmail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DeputyEmail",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AdminEmail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AdminEmail",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CSMEmail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CSMEmail",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RegionalDirector",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RegionalDirector",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RegionalDirectorEmail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RegionalDirectorEmail",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OpsDirector",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OpsDirector",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OpsDirectorEmail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OpsDirectorEmail",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Avery",
									"Table": "VHomeDetails"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Avery_HomeDetails",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Avery/Children Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-10T08:27:28Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Yardi_AEMS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Look up Values",
						"type": "Lookup",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT HOME_REF, HomeName, IntranetID FROM ColdHarbourHomeID WHERE HOME_REF = '@{variables('Home_Ref')}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						}
					},
					{
						"name": "AEMS Enquiry",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set HomeName",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set IntranetID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT\n    ID\n    ,AEMS_ID\n    ,aems_version\n    ,homeID\n    ,uploadedBy\n    ,managerEmailed\n    ,enquiryStatus\n    ,enquiryID\n    ,initialEnquiry\n    ,enquirerSalutation\n    ,enquirerLastName AS enquirerFirstName\n    ,enquirerFirstName AS enquirerLastName \n    ,enquirerSalutationTwo\n    ,enquirerLastNameTwo \n    ,enquirerFirstNameTwo \n    ,enquiryDate\n    ,enquirerRelationshipToResident\n    ,en_areacode\n    ,enquirerTelephone \n    ,enquiry_mobile \n    ,enquirerEmail \n    ,enquirerAddress  AS nokAddress\n    ,enquirerAddressOne AS nokAddressOne\n    ,enquirerAddressTwo  AS nokAddressTwo\n    ,enquirerAddressThree  AS nokAddressThree \n    ,enquiry_postcode \n    ,enquiry_postcode_two \n    ,residentSalutation\n    ,residentFirstName \n    ,residentLastName \n    ,residentDOB \n    ,residentSalutationTwo\n    ,residentFirstNameTwo\n    ,residentLastNameTwo\n    ,residentDOBTwo\n    ,residentNOK\n    ,residentAddress \n    ,residentAddressOne \n    ,residentAddressTwo \n    ,residentAddressThree \n    ,residentPostcode \n    ,residentTelephone \n    ,residentCareCategory\n    ,residentFundingCategory\n    ,residentCareCategoryTwo\n    ,funding_total\n    ,residentFunding\n    ,residentFundingTwo\n    --,enquiryDetails \n    ,REPLACE(CONVERT(VARCHAR(MAX), enquiryDetails), '\"', '') AS enquiryDetails\n    ,enquiryType\n    ,responseTime\n    ,responseCurrentStatus\n    ,responseNeeded\n    ,responseAmountTried\n    ,followUpDate\n    ,followUpReason\n    ,uploadToCH\n    ,admissionDate\n    ,enquiryClosed\n    ,managerContacted\n    ,homeVisit\n    ,assessmentBooked\n    ,assesmentComplete\n    ,admission\n    ,homeVisitBooked\n    ,admissionBooked\n    ,video_booked\n    ,video_complete\n    ,homeVisitRequested\n    ,assesmentRequested\n    ,newEnquiry\n    ,cameFrom\n    ,enquirer_address \n    ,enquirer_postcode \n    ,lng\n    ,lat\n    ,enquirer_area\n    ,enquirer_county\n    ,nok_name\n    ,nok_surname\n    ,nok_county\n    ,nok_relation\n    ,nok_telephone\n    ,nok_mobile\n    ,nok_address\n    ,resident_county\n    ,nok_Salutation\n    ,newsletter_receive\n    ,newsletter_email\n    ,enquiry_urgent\n    ,optOut\n    ,type_news\n    ,type_mag\n    ,type_other\n    ,gp_name\n    ,gp_address\n    ,gp_telephone\n    ,gp_requested\n    ,gp_received\n    ,website\n    ,brochure\n    ,brochure_requestID\n    ,entryMethod\n    ,current_action_id\n    ,column_hash\n    ,receiveMarketing\n    ,willTopUp\n    ,enquiry_entered_from\n    ,enquiry_closed_reason\n    ,enquiry_deleted\n    ,enquiry_weight\nFROM \n    AEMS.AEMS_Enquiries AS E\nWHERE \n    E.homeID IN (@{variables('IntranetID')})",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('AEMS Enquiry - ', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Set HomeName",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Look up Values",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "HomeName",
							"value": {
								"value": "@activity('Look up Values').output.firstRow.HomeName",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set IntranetID",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Look up Values",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "IntranetID",
							"value": {
								"value": "@activity('Look up Values').output.firstRow.IntranetID",
								"type": "Expression"
							}
						}
					},
					{
						"name": "AEMS Enquiry Actions",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "AEMS Enquiry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT \n    A.ID\n    ,A.AEMS_ID\n    ,enquiry_setBy\n    ,enquiry_id\n    ,enquiry_dateRequired\n    ,enquiry_reason\n    ,enquiry_contact\n    ,enquiry_actionComplete\n    ,enquiry_actionInserted\n    ,enquiry_actionCompleteDate\n    ,enquiry_actionCompleteBy\n    ,enquiry_homeID\n    ,enquiry_missed\n    ,enquiry_missedEmail\n    ,enquiry_missedEmailDate\n    ,enquiry_initialContact\n    ,enquiry_flag\n    ,enquiry_critical\n    --,REPLACE(enquiry_details, '\"', '')\n    ,REPLACE(CONVERT(VARCHAR(MAX), enquiry_details), '\"', '') AS enquiry_details\n    ,enquiry_picked_up\n    ,enquiry_assigned_to\n    ,enquiry_assigned_when\n    ,enquiry_action_call_handler\n    ,enquiry_new\nFROM \n    AEMS.AEMS_Enquiries_Actions AS A\n\n    INNER JOIN AEMS.AEMS_Enquiries AS E\n        ON E.AEMS_ID = A.enquiry_id\n        AND E.homeID = A.enquiry_homeID\n    WHERE\n        A.enquiry_homeID IN (@{variables('IntranetID')})\n        ",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('AEMS Enquiry Actions - ', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Home_Ref": {
						"type": "String",
						"defaultValue": "611"
					},
					"HomeName": {
						"type": "String"
					},
					"IntranetID": {
						"type": "String",
						"defaultValue": "7581,83,7596,7598"
					}
				},
				"folder": {
					"name": "Yardi/AEMS"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Yardi_AEMS_BackUp')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AEMS_Enquiries",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set BackUpDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "BackUpDate",
										"value": {
											"value": "@variables('BackUpDate')",
											"type": "Expression"
										}
									}
								],
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BackUpDate",
											"type": "String"
										},
										"sink": {
											"name": "BackUpDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "AEMS_ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "AEMS_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "aems_version",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "aems_version",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "homeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "homeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "uploadedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "uploadedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "managerEmailed",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "managerEmailed",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiryStatus",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiryStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiryID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiryID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "initialEnquiry",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "initialEnquiry",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "enquirerSalutation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerSalutation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerFirstName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerFirstName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerLastName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerLastName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerSalutationTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerSalutationTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerLastNameTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerLastNameTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerFirstNameTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerFirstNameTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiryDate",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiryDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerRelationshipToResident",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerRelationshipToResident",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "en_areacode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "en_areacode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerTelephone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerTelephone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_mobile",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_mobile",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerEmail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerEmail",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerAddress",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquirerAddress",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquirerAddressOne",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerAddressOne",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerAddressTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerAddressTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirerAddressThree",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirerAddressThree",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_postcode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_postcode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_postcode_two",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_postcode_two",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentSalutation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentSalutation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentFirstName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentFirstName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentLastName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentLastName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentDOB",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentDOB",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentSalutationTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentSalutationTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentFirstNameTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentFirstNameTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentLastNameTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentLastNameTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentDOBTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentDOBTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentNOK",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentNOK",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentAddress",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "residentAddress",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "residentAddressOne",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentAddressOne",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentAddressTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentAddressTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentAddressThree",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentAddressThree",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentPostcode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentPostcode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentTelephone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentTelephone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentCareCategory",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentCareCategory",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentFundingCategory",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentFundingCategory",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentCareCategoryTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentCareCategoryTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "funding_total",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "funding_total",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentFunding",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentFunding",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "residentFundingTwo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "residentFundingTwo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiryDetails",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquiryDetails",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquiryType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiryType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "responseTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "responseTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "responseCurrentStatus",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "responseCurrentStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "responseNeeded",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "responseNeeded",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "responseAmountTried",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "responseAmountTried",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "followUpDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "followUpDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "followUpReason",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "followUpReason",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "uploadToCH",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "uploadToCH",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "admissionDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "admissionDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "enquiryClosed",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiryClosed",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "managerContacted",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "managerContacted",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "homeVisit",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "homeVisit",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "assessmentBooked",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "assessmentBooked",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "assesmentComplete",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "assesmentComplete",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "admission",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "admission",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "homeVisitBooked",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "homeVisitBooked",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "admissionBooked",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "admissionBooked",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "video_booked",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "video_booked",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "video_complete",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "video_complete",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "homeVisitRequested",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "homeVisitRequested",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "assesmentRequested",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "assesmentRequested",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "newEnquiry",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "newEnquiry",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "cameFrom",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "cameFrom",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirer_address",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquirer_address",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquirer_postcode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirer_postcode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "lng",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "lng",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "lat",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "lat",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirer_area",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirer_area",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquirer_county",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquirer_county",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_surname",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_surname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_county",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_county",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_relation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_relation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_telephone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_telephone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_mobile",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_mobile",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_address",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_address",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "resident_county",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "resident_county",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nok_Salutation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nok_Salutation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "newsletter_receive",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "newsletter_receive",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "newsletter_email",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "newsletter_email",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_urgent",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_urgent",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "optOut",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "optOut",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "type_news",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "type_news",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "type_mag",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "type_mag",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "type_other",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "type_other",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "gp_name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "gp_name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "gp_address",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "gp_address",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "gp_telephone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "gp_telephone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "gp_requested",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "gp_requested",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "gp_received",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "gp_received",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "website",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "website",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "brochure",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "brochure",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "brochure_requestID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "brochure_requestID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "entryMethod",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "entryMethod",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "current_action_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "current_action_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "column_hash",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "column_hash",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "receiveMarketing",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "receiveMarketing",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "willTopUp",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "willTopUp",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquiry_entered_from",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_entered_from",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_closed_reason",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_closed_reason",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_deleted",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_deleted",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_weight",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_weight",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "AEMS",
									"Table": "AEMS_Enquiries"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "AEMS",
									"Table": "AEMS_Enquiries_YardiBackup"
								}
							}
						]
					},
					{
						"name": "Set BackUpDate",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "BackUpDate",
							"value": {
								"value": "@formatDateTime(utcNow(), 'yyyy-MM-dd HH:mm:ss')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "AEMS_Enquiries_Actions",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "AEMS_Enquiries",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "BackUpDate",
										"value": {
											"value": "@variables('BackUpDate')",
											"type": "Expression"
										}
									}
								],
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BackUpDate",
											"type": "String"
										},
										"sink": {
											"name": "BackUpDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "AEMS_ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "AEMS_ID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_setBy",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquiry_setBy",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquiry_id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_dateRequired",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "enquiry_dateRequired",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "enquiry_reason",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquiry_reason",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquiry_contact",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquiry_contact",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquiry_actionComplete",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_actionComplete",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_actionInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "enquiry_actionInserted",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "enquiry_actionCompleteDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "enquiry_actionCompleteDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "enquiry_actionCompleteBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_actionCompleteBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_homeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_homeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_missed",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_missed",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_missedEmail",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "enquiry_missedEmail",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "enquiry_missedEmailDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "enquiry_missedEmailDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "enquiry_initialContact",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_initialContact",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_flag",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_flag",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_critical",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_critical",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_details",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "enquiry_details",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "enquiry_picked_up",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_picked_up",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_assigned_to",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_assigned_to",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_assigned_when",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "enquiry_assigned_when",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "enquiry_action_call_handler",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_action_call_handler",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "enquiry_new",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "enquiry_new",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "AEMS",
									"Table": "AEMS_Enquiries_Actions"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "AEMS",
									"Table": "AEMS_Enquiries_Actions_YardiBackup"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"BackUpDate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Yardi/AEMS"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Yardi_DependencyTool')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Look up Values",
						"type": "Lookup",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT HOME_REF, HomeName, IntranetID FROM ColdHarbourHomeID WHERE HOME_REF = '@{variables('Home_Ref')}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						}
					},
					{
						"name": "Set HomeName",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "HomeName",
							"value": {
								"value": "@activity('Look up Values').output.firstRow.HomeName",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set IntranetID",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "IntranetID",
							"value": "[[object Object]"
						}
					},
					{
						"name": "Export Dependency Records",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set IntranetID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT\n    R.ID,\n    R.Assesment_Date,\n    R.Status,\n    R.Homename,\n    R.Intranet,\n    R.Res_No,\n    --R.Res_First_Name,\n    REPLACE(R.Res_First_Name, '\"', '') AS Res_First_Name,\n    R.Res_Surname,\n    R.Unit,\n    R.Room_No,\n    R.Type,\n    R.Total_Standard_Score AS Total_Service_Duration,\n\n    Q1.Service_Description AS Service1_Description,\n    r.Q1_Score AS Service1_Score,\n    r.Q1_Standard_Score AS Service1_MinutesRequired,\n    Q1.Support_Description AS Service1_SupportDescription,\n    \n    Q2.Service_Description AS Service2_Description,\n    r.Q2_Score AS Service2_Score,\n    r.Q2_Standard_Score AS Service2_MinutesRequired,\n    Q2.Support_Description AS Service2_SupportDescription,\n\n    Q3.Service_Description AS Service3_Description,\n    r.Q3_Score AS Service3_Score,\n    r.Q3_Standard_Score AS Service3_MinutesRequired,\n    Q3.Support_Description AS Service3_SupportDescription,\n\n    Q4.Service_Description AS Service4_Description,\n    r.Q4_Score AS Service4_Score,\n    r.Q4_Standard_Score AS Service4_MinutesRequired,\n    Q4.Support_Description AS Service4_SupportDescription,\n\n    Q5.Service_Description AS Service5_Description,\n    r.Q5_Score AS Service5_Score,\n    r.Q5_Standard_Score AS Service5_MinutesRequired,\n    Q5.Support_Description AS Service5_SupportDescription,\n\n    Q6.Service_Description AS Service6_Description,\n    r.Q6_Score AS Service6_Score,\n    r.Q6_Standard_Score AS Service6_MinutesRequired,\n    Q6.Support_Description AS Service6_SupportDescription,\n\n    Q7.Service_Description AS Service7_Description,\n    r.Q7_Score AS Service7_Score,\n    r.Q7_Standard_Score AS Service7_MinutesRequired,\n    Q7.Support_Description AS Service7_SupportDescription,\n\n    Q8.Service_Description AS Service8_Description,\n    r.Q8_Score AS Service8_Score,\n    r.Q8_Standard_Score AS Service8_MinutesRequired,\n    Q8.Support_Description AS Service8_SupportDescription,\n\n    Q9.Service_Description AS Service9_Description,\n    r.Q9_Score AS Service9_Score,\n    r.Q9_Standard_Score AS Service9_MinutesRequired,\n    Q9.Support_Description AS Service9_SupportDescription,\n\n    Q10.Service_Description AS Service10_Description,\n    r.Q10_Score AS Service10_Score,\n    r.Q10_Standard_Score AS Service10_MinutesRequired,\n    Q10.Support_Description AS Service10_SupportDescription,\n\n    Q11.Service_Description AS Service11_Description,\n    r.Q11_Score AS Service11_Score,\n    r.Q11_Standard_Score AS Service11_MinutesRequired,\n    Q11.Support_Description AS Service11_SupportDescription,\n\n    Q12.Service_Description AS Service12_Description,\n    r.Q12_Score AS Service12_Score,\n    r.Q12_Standard_Score AS Service12_MinutesRequired,\n    Q12.Support_Description AS Service12_SupportDescription,\n\n    Q13.Service_Description AS Service13_Description,\n    r.Q13_Score AS Service13_Score,\n    r.Q13_Standard_Score AS Service13_MinutesRequired,\n    Q13.Support_Description AS Service13_SupportDescription\nFROM \n    Dependency_Tool_Responses AS R\n\n    LEFT JOIN Dependency_Tool AS Q1\n        ON Q1.Support_Level = R.Q1_Score\n        AND Q1.Service_Number = 1\n\n    LEFT JOIN Dependency_Tool AS Q2\n        ON Q2.Support_Level = R.Q2_Score\n        AND Q2.Service_Number = 2\n\n    LEFT JOIN Dependency_Tool AS Q3\n        ON Q3.Support_Level = R.Q3_Score\n        AND Q3.Service_Number = 3\n\n    LEFT JOIN Dependency_Tool AS Q4\n        ON Q4.Support_Level = R.Q4_Score\n        AND Q4.Service_Number = 4\n\n    LEFT JOIN Dependency_Tool AS Q5\n        ON Q5.Support_Level = R.Q5_Score\n        AND Q5.Service_Number = 5\n\n    LEFT JOIN Dependency_Tool AS Q6\n        ON Q6.Support_Level = R.Q6_Score\n        AND Q6.Service_Number = 6\n\n    LEFT JOIN Dependency_Tool AS Q7\n        ON Q7.Support_Level = R.Q7_Score\n        AND Q7.Service_Number = 7\n\n    LEFT JOIN Dependency_Tool AS Q8\n        ON Q8.Support_Level = R.Q8_Score\n        AND Q8.Service_Number = 8\n\n    LEFT JOIN Dependency_Tool AS Q9\n        ON Q9.Support_Level = R.Q9_Score\n        AND Q9.Service_Number = 9\n\n    LEFT JOIN Dependency_Tool AS Q10\n        ON Q10.Support_Level = R.Q10_Score\n        AND Q10.Service_Number = 10\n\n    LEFT JOIN Dependency_Tool AS Q11\n        ON Q11.Support_Level = R.Q11_Score\n        AND Q11.Service_Number = 11\n\n    LEFT JOIN Dependency_Tool AS Q12\n        ON Q12.Support_Level = R.Q12_Score\n        AND Q12.Service_Number = 12\n\n    LEFT JOIN Dependency_Tool AS Q13\n        ON Q13.Support_Level = R.Q13_Score\n        AND Q13.Service_Number = 13\nWHERE \n    --R.Status = 'Active' \n    R.Intranet IN (@{variables('IntranetID')})\nORDER BY \n    Intranet ASC, \n    Assesment_Date ASC",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('Welltower Homes', ' - Dependency Tool Responses - ', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Home_Ref": {
						"type": "String"
					},
					"HomeName": {
						"type": "String"
					},
					"IntranetID": {
						"type": "String",
						"defaultValue": "7581,83,7596,7598"
					}
				},
				"folder": {
					"name": "Yardi/Dependency Tool"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}