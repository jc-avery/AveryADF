{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Avery-ADF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_CareBlox-SQL-upsert')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "UPSERT from Stage tables to final tables in SQL DB",
				"activities": [
					{
						"name": "tblRoles",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "tblTypes",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"RoleID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "RoleID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "RoleID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RoleName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "RoleName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Department",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "Department",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Code",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Code",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AvailableToGroup",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "AvailableToGroup",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZStorage_careblox_parquet_file",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "tblRoles$",
									"DateString": {
										"value": "@variables('DateString')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Careblox_Roles",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "tblTypes",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set DateString",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "TypeID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "TypeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TypeName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "TypeName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TypeDescription",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "TypeDescription",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PayGroup",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "PayGroup",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StarCode",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "StarCode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "OffDutyGroup",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "OffDutyGroup",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "IsDefault",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "IsDefault",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "IsDefaultMultiplier",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "IsDefaultMultiplier",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CSLCode",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "CSLCode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "IsDefault2",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "IsDefault2",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "IsDefault3",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "IsDefault3",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Rosterable",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "Rosterable",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PayType",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "PayType",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "AvailableToGroup",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "AvailableToGroup",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZStorage_careblox_parquet_file",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "tblTypes$",
									"DateString": {
										"value": "@variables('DateString')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZStorage_careblox_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Upsert to TtblEmpJobs",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "tblRoles",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\n    stgtblEmpJobs.JobAutoId,\n    stgtblEmpJobs.EmployeeID,\n    stgtblEmpJobs.ContractedHours,\n    stgtblEmpJobs.Department,\n    stgtblEmpJobs.Role,\n    stgtblEmpJobs.JobNo,\n    DATEADD(s, StartDate, '1970-01-01 00:00:00') AS StartDate,\n    stgtblEmpJobs.Holidays,\n    stgtblEmpJobs.HolidayFull,\n    stgtblEmpJobs.SentToUnit,\n    stgtblEmpJobs.BreakRule,\n    stgtblEmpJobs.ContractID,\n    stgtblEmpJobs.Deleted,\n    DATEADD(s, StartDate, '1970-01-01 00:00:00') AS LastUpdate,\n    stgtblEmpJobs.WorkingArrangements,\n    stgtblEmpJobs.VHEnabled,\n    stgtblEmpJobs.VHBalance,\n    NULL AS VHBalanceDate,\n    stgtblEmpJobs.SicknessThreshold,\n    stgtblEmpJobs.SourceFileName\nFROM \n    CareBlox.STGtblEmpJobs",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"JobAutoID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "JobAutoId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "JobAutoID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ContractedHours",
											"type": "Single",
											"physicalType": "real"
										},
										"sink": {
											"name": "ContractedHours",
											"type": "Single",
											"physicalType": "real"
										}
									},
									{
										"source": {
											"name": "Department",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "Department",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "Role",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "Role",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "JobNo",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "JobNo",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "StartDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "StartDate",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									},
									{
										"source": {
											"name": "Holidays",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Holidays",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "HolidayFull",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "HolidayFull",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "BreakRule",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "BreakRule",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "ContractID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ContractID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Deleted",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Deleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "LastUpdate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "LastUpdate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "WorkingArrangements",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkingArrangements",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "VHEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "VHEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "VHBalance",
											"type": "Single",
											"physicalType": "real"
										},
										"sink": {
											"name": "VHBalance",
											"type": "Single",
											"physicalType": "real"
										}
									},
									{
										"source": {
											"name": "SicknessThreshold",
											"type": "Single",
											"physicalType": "real"
										},
										"sink": {
											"name": "SicknessThreshold",
											"type": "Single",
											"physicalType": "real"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Query",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Careblox_EmpJobs",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Upsert to tblEmployees",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Upsert to TtblEmpJobs",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \n    EmployeeAutoID,\n    EmployeeID,\n    Title,\n    Forename,\n    Middlename,\n    Surname,\n    LocationID,\n    AddressLine1,\n    AddressLine2,\n    AddressLine3,\n    AddressLine4,\n    AddressLine5,\n    PostCode,\n    Country,\n    Telephone,\n    Mobile,\n    Email,\n    CASE \n        WHEN BirthDate < 0 THEN DATEADD(DAY, -(ABS(BirthDate) / 86400), '1970-01-01') --Convert EPOCH number to a positive with ABS(). Divide by 86400 seconds in a day. Subtract this from 1970-01-01\n        ELSE DATEADD(s, BirthDate, '1970-01-01 00:00:00') \n    END AS BirthDate,\n    CountryOfBirth,\n    YearOfEntry,\n    DATEADD(s, DateStarted, '1970-01-01 00:00:00') AS DateStarted,\n    DATEADD(s, LeavingDate, '1970-01-01 00:00:00') AS LeavingDate,\n    LeavingEnteredBy,\n    DATEADD(s, LeavingEnteredOn, '1970-01-01 00:00:00') AS LeavingEnteredOn,\n    Gender,\n    NINumber,\n    EthnicOrigin,\n    Religion,\n    Disability,\n    Nationality,\n    Dependants,\n    AccountNumber,\n    AccountName,\n    SortCode,\n    BankName,\n    BankBranch,\n    BuildingSocRef,\n    MaritalStatus,\n    PayMethod,\n    UploadAsNewStarter,\n    NeedsUploading,\n    HasLeft,\n    PackageID,\n    ImportPackageID,\n    ContractedHours,\n    DefaultPayRate,\n    LeavingReason,\n    LeavingDestination,\n    IncludeInNextPay,\n    OnSick,\n    Export,\n    SageID,\n    TATagID,\n    BankStaff,\n    PostCodeSearch,\n    WorkingTimeWaiver,\n    SentToUnit,\n    BatchID,\n    EmployeeType,\n    HolidayMonthStart,\n    CreatedByID,\n    CreatedByName,\n    DATEADD(s, CreatedDate, '1970-01-01 00:00:00') AS CreatedDate,\n    ShortDisplayName,\n    DisplayColour,\n    ApproverName,\n    ApproverID,\n    IsApprover,\n    TAApprover,\n    RosterUnitList,\n    PrimaryRosterUnit,\n    PortalEnabled,\n    PortalPassword,\n    NoticePeriod,\n    DATEADD(s, DataUpgradedDate, '1970-01-01 00:00:00') AS DataUpgradedDate,\n    DataUpgradedBy,\n    SourceFileName\n  FROM \n    CareBlox.STGtblEmployees",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"EmployeeAutoID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EmployeeAutoID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "EmployeeAutoID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Title",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Title",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Forename",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Forename",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Middlename",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Middlename",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Surname",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Surname",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AddressLine1",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AddressLine1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AddressLine2",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AddressLine2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AddressLine3",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AddressLine3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AddressLine4",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AddressLine4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AddressLine5",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AddressLine5",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PostCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PostCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Country",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Country",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Telephone",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Telephone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Mobile",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Mobile",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Email",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Email",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BirthDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "BirthDate",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									},
									{
										"source": {
											"name": "CountryOfBirth",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CountryOfBirth",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "YearOfEntry",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "YearOfEntry",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DateStarted",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateStarted",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									},
									{
										"source": {
											"name": "LeavingDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "LeavingDate",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									},
									{
										"source": {
											"name": "LeavingEnteredBy",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "LeavingEnteredBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LeavingEnteredOn",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "LeavingEnteredOn",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Gender",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NINumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "NINumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EthnicOrigin",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EthnicOrigin",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Religion",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Religion",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Disability",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Disability",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Nationality",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Nationality",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Dependants",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "Dependants",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccountName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AccountName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SortCode",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SortCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BankName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BankName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BankBranch",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BankBranch",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BuildingSocRef",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BuildingSocRef",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MaritalStatus",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MaritalStatus",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PayMethod",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PayMethod",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UploadAsNewStarter",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "UploadAsNewStarter",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "NeedsUploading",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "NeedsUploading",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "HasLeft",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "HasLeft",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PackageID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PackageID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ImportPackageID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ImportPackageID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ContractedHours",
											"type": "Single",
											"physicalType": "real"
										},
										"sink": {
											"name": "ContractedHours",
											"type": "Single",
											"physicalType": "real"
										}
									},
									{
										"source": {
											"name": "DefaultPayRate",
											"type": "Single",
											"physicalType": "real"
										},
										"sink": {
											"name": "DefaultPayRate",
											"type": "Single",
											"physicalType": "real"
										}
									},
									{
										"source": {
											"name": "LeavingReason",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LeavingReason",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LeavingDestination",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LeavingDestination",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IncludeInNextPay",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IncludeInNextPay",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "OnSick",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "OnSick",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "Export",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Export",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SageID",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "SageID",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "TATagID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TATagID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BankStaff",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "BankStaff",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PostCodeSearch",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PostCodeSearch",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkingTimeWaiver",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "WorkingTimeWaiver",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "BatchID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BatchID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmployeeType",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "EmployeeType",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "HolidayMonthStart",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "HolidayMonthStart",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreatedByID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CreatedByID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreatedByName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedByName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ShortDisplayName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ShortDisplayName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DisplayColour",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DisplayColour",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ApproverName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ApproverName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ApproverID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ApproverID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsApprover",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsApprover",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "TAApprover",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TAApprover",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RosterUnitList",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RosterUnitList",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PrimaryRosterUnit",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PrimaryRosterUnit",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PortalEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "PortalEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PortalPassword",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PortalPassword",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "NoticePeriod",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "NoticePeriod",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "DataUpgradedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DataUpgradedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DataUpgradedBy",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DataUpgradedBy",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Query",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Careblox_Employees",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Upsert to tblPayrollData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Upsert to tblEmployees",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\n    PayrollID,\n    EmployeeID,\n    EmployeeName,\n    LocationID,\n    RoleID,\n    Role,\n    TypeID,\n    Type,\n    Rate,\n    Units,\n    Comment,\n    DATEADD(s, EnteredDate, '1970-01-01 00:00:00') AS EnteredDate,\n    EnteredBy,\n    EnteredByName,\n    PeriodNo,\n    HasVariance,\n    MonthSplit,\n    Comitted,\n    DATEADD(s, ApprovedDate, '1970-01-01 00:00:00') AS ApprovedDate,\n    ApprovedBy,\n    ApprovedByName,\n    ImportedFromTA,\n    WorkedLocationID,\n    BatchID,\n    DATEADD(s, ItemDate, '1970-01-01 00:00:00') AS ItemDate,\n    SourceFileName\nFROM \n    CareBlox.STGtblPayrollData",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"PayrollID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "PayrollID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PayrollID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EmployeeName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EmployeeName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RoleID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RoleID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Role",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Role",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TypeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TypeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Rate",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "Rate",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "Units",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Units",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Comment",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Comment",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EnteredDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "EnteredDate",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									},
									{
										"source": {
											"name": "EnteredBy",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EnteredBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EnteredByName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EnteredByName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PeriodNo",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PeriodNo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "HasVariance",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "HasVariance",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "MonthSplit",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "MonthSplit",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Comitted",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Comitted",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ApprovedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ApprovedDate",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									},
									{
										"source": {
											"name": "ApprovedBy",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ApprovedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ApprovedByName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ApprovedByName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ImportedFromTA",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "ImportedFromTA",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "WorkedLocationID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkedLocationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BatchID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BatchID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ItemDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ItemDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Query",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Careblox_Payroll",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "tblPeriods",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Upsert to tblPayrollData",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \n    PeriodID,\n    CurrentPeriodNum,\n    DATEADD(s, DateCreated, '1970-01-01 00:00:00') AS DateCreated,\n    LocationID,\n    DateRange,\n    GeneratedPayroll,\n    CONCAT(SUBSTRING(DateRange, 7, 4), '-', SUBSTRING(DateRange, 4, 2), '-', SUBSTRING(DateRange, 1, 2)) AS FromDate,\n    CONCAT(SUBSTRING(DateRange, 20, 4), '-', SUBSTRING(DateRange, 17, 2), '-', SUBSTRING(DateRange, 14, 2)) AS ToDate,\n    SourceFileName\nFROM \n    CareBlox.STGtblPeriods\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"PeriodID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "PeriodID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PeriodID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CurrentPeriodNum",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CurrentPeriodNum",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DateCreated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DateCreated",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									},
									{
										"source": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DateRange",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DateRange",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "GeneratedPayroll",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "GeneratedPayroll",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "FromDate",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FromDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "ToDate",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ToDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Query",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Careblox_Periods",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "tblRates",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "tblPeriods",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \n    RatesAutoID,\n    EmployeeID,\n    RoleID,\n    TypeID,\n    Rate,\n    IsDefault,\n    SentToUnit,\n    Deleted,\n    DATEADD(s, LastUpdate, '1970-01-01 00:00:00') AS LastUpdate,\n    SourceFileName\nFROM \n    CareBlox.STGtblRates",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"RatesAutoID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "RatesAutoID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RatesAutoID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RoleID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RoleID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TypeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TypeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Rate",
											"type": "Decimal",
											"physicalType": "smallmoney",
											"scale": 4,
											"precision": 10
										},
										"sink": {
											"name": "Rate",
											"type": "Decimal",
											"physicalType": "smallmoney",
											"scale": 4,
											"precision": 10
										}
									},
									{
										"source": {
											"name": "IsDefault",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsDefault",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Deleted",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Deleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "LastUpdate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "LastUpdate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Query",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Careblox_Rates",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "tblShifts",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "tblRates",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \n    ShiftID,\n    HomeID,\n    EmployeeID,\n    RoleID,\n    DATEADD(s, ShiftStart, '1970-01-01 00:00:00') AS ShiftStart,\n    DATEADD(s, ShiftEnd, '1970-01-01 00:00:00') AS ShiftEnd,\n    PayRate,\n    Department,\n    Type,\n    SentToUnit,\n    Deleted,\n    RosterUnitID,\n    CreatedBy,\n    DATEADD(s, CreatedDate, '1970-01-01 00:00:00') AS CreatedDate,\n    DeletedBy,\n    DATEADD(s, DeletedDate, '1970-01-01 00:00:00') AS DeletedDate,\n    ITG_SourceID,\n    ITG_SourceName,\n    ITG_Status,\n    RosterType,\n    SourceFileName\nFROM \n    CareBlox.STGtblShifts",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ShiftID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ShiftID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ShiftID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "HomeID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RoleID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RoleID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ShiftStart",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ShiftStart",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ShiftEnd",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ShiftEnd",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "PayRate",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PayRate",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Department",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Department",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Deleted",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Deleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "RosterUnitID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RosterUnitID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DeletedBy",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DeletedBy",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DeletedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DeletedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ITG_SourceID",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "ITG_SourceID",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "ITG_SourceName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ITG_SourceName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ITG_Status",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "ITG_Status",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "RosterType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RosterType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Query",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Careblox_Shifts",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "tblTAData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "tblShifts",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\n    LocalID,\n    TAID,\n    EmployeeID,\n    HomeID,\n    RoleID,\n    ShiftID,\n    TAStatus,\n    DATEADD(s, TADateIn, '1970-01-01 00:00:00') AS TADateIn,\n    DATEADD(s, ActualDateIn, '1970-01-01 00:00:00') AS ActualDateIn,\n    DATEADD(s, ConfirmedDateIn, '1970-01-01 00:00:00') AS ConfirmedDateIn,\n    EarlyInFlag,\n    EarlyInComment,\n    LateInFlag,\n    LateInComment,\n    DATEADD(s, TADateOut, '1970-01-01 00:00:00') AS TADateOut,\n    DATEADD(s, ActualDateOut, '1970-01-01 00:00:00') AS ActualDateOut,\n    DATEADD(s, ConfirmedDateOut, '1970-01-01 00:00:00') AS ConfirmedDateOut,\n    EarlyOutFlag,\n    EarlyOutComment,\n    LateOutFlag,\n    LateOutComment,\n    ManagerApprovalRequiredIn,\n    ManagerApprovalRequiredOut,\n    RecordedMinutes,\n    TATagID,\n    ImageFilename,\n    Imported,\n    SrcUnit,\n    ExternalWorkerName,\n    SourceFileName\nFROM \n    CareBlox.STGtblTAData",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"LocalID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "LocalID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LocalID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TAID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TAID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HomeID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "HomeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RoleID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RoleID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ShiftID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ShiftID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TAStatus",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TAStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TADateIn",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "TADateIn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ActualDateIn",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ActualDateIn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ConfirmedDateIn",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ConfirmedDateIn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "EarlyInFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "EarlyInFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "EarlyInComment",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EarlyInComment",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LateInFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "LateInFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "LateInComment",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LateInComment",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TADateOut",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "TADateOut",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ActualDateOut",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ActualDateOut",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ConfirmedDateOut",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ConfirmedDateOut",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "EarlyOutFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "EarlyOutFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "EarlyOutComment",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EarlyOutComment",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LateOutFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "LateOutFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "LateOutComment",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LateOutComment",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ManagerApprovalRequiredIn",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "ManagerApprovalRequiredIn",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "ManagerApprovalRequiredOut",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "ManagerApprovalRequiredOut",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "RecordedMinutes",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "RecordedMinutes",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "TATagID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TATagID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ImageFilename",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ImageFilename",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Imported",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Imported",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "SrcUnit",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SrcUnit",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ExternalWorkerName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ExternalWorkerName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Query",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Careblox_TAData",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Set DateString",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "DateString",
							"value": {
								"value": "@utcNow('dd-MM-yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Upsert to TtblEmpJobs Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Upsert to TtblEmpJobs",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('Upsert to TtblEmpJobs').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "Upsert to TtblEmpJobs"
							}
						}
					},
					{
						"name": "tblTypes Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "tblTypes",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('tblTypes').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "tblTypes"
							}
						}
					},
					{
						"name": "tblRoles Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "tblRoles",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('tblRoles').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "tblRoles"
							}
						}
					},
					{
						"name": "Upsert to tblEmployees Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Upsert to tblEmployees",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('Upsert to tblEmployees').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "Upsert to tblEmployees"
							}
						}
					},
					{
						"name": "Upsert to tblPayrollData Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Upsert to tblPayrollData",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('Upsert to tblPayrollData').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "Upsert to tblPayrollData"
							}
						}
					},
					{
						"name": "tblPeriods Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "tblPeriods",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('tblPeriods').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "tblPeriods"
							}
						}
					},
					{
						"name": "tblRates Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "tblRates",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('tblRates').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "tblRates"
							}
						}
					},
					{
						"name": "tblShifts Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "tblShifts",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('tblShifts').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "tblShifts"
							}
						}
					},
					{
						"name": "tblTAData Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "tblTAData",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('tblTAData').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "tblTAData"
							}
						}
					},
					{
						"name": "tblCalender",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "tblTAData",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT\n    UniqueID\n    ,EmployeeID\n    ,DATEADD(SECOND, StartDate % 86400, DATEADD(DAY, StartDate / 86400, '1970-01-01 00:00:00')) AS StartDate\n    ,EmployeeName\n    ,DATEADD(SECOND, EndDate % 86400, DATEADD(DAY, EndDate / 86400, '1970-01-01 00:00:00')) AS EndDate\n    ,Status\n    ,LocationID\n    ,StartDetails\n    ,EndDetails\n    ,DATEADD(SECOND, EnteredOn % 86400, DATEADD(DAY, EnteredOn / 86400, '1970-01-01 00:00:00')) AS EnteredOn\n    ,DATEADD(SECOND, UpdatedOn % 86400, DATEADD(DAY, UpdatedOn / 86400, '1970-01-01 00:00:00')) AS UpdatedOn\n    ,EnteredBy\n    ,UpdatedBy\n    ,Export\n    ,ShowAlert\n    ,Department\n    ,RosterID\n    ,Role\n    ,DaysTaken\n    ,EnteredByID\n    ,BatchId\n    ,AbsenceCode\n    ,AbsenceCategory\n    ,BradfordFactorInclude\n    ,Reviewed\n    ,UpdatedByID\n    ,UpdateType\n    ,DATEADD(SECOND, ExpectedEndDate % 86400, DATEADD(DAY, ExpectedEndDate / 86400, '1970-01-01 00:00:00')) AS ExpectedEndDate\n    ,ActivityID\n    ,ActivityLocationID\n    ,SentToUnit\n    ,SourceFileName\nFROM \n    CareBlox.STGtblCalender",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"UniqueID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "UniqueID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "UniqueID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StartDate",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										},
										"sink": {
											"name": "StartDate",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									},
									{
										"source": {
											"name": "EmployeeName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EmployeeName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EndDate",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										},
										"sink": {
											"name": "EndDate",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StartDetails",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "StartDetails",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EndDetails",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EndDetails",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EnteredOn",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										},
										"sink": {
											"name": "EnteredOn",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									},
									{
										"source": {
											"name": "UpdatedOn",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										},
										"sink": {
											"name": "UpdatedOn",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									},
									{
										"source": {
											"name": "EnteredBy",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EnteredBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UpdatedBy",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UpdatedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Export",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Export",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ShowAlert",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ShowAlert",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Department",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Department",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RosterID",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "RosterID",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "Role",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Role",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DaysTaken",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "DaysTaken",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "EnteredByID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "EnteredByID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BatchId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BatchId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AbsenceCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AbsenceCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AbsenceCategory",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AbsenceCategory",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BradfordFactorInclude",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "BradfordFactorInclude",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Reviewed",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "Reviewed",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "UpdatedByID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "UpdatedByID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "UpdateType",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "UpdateType",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "ExpectedEndDate",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										},
										"sink": {
											"name": "ExpectedEndDate",
											"type": "DateTime",
											"physicalType": "smalldatetime"
										}
									},
									{
										"source": {
											"name": "ActivityID",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "ActivityID",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "ActivityLocationID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ActivityLocationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Query",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Careblox_Calender",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "tblCalender Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "tblCalender",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('tblCalender').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "tblCalender"
							}
						}
					},
					{
						"name": "tblAbsenceCodes",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "tblCalender",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"AbsenceCode"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AbsenceID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "AbsenceID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AbsenceCode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AbsenceCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AbsenceCode2",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AbsenceCode2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AbsenceGroupDescription",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AbsenceGroupDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AbsenceGroupCode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AbsenceGroupCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AbsenceDescription",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AbsenceDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AbsenceListOrder",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "AbsenceListOrder",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "UseBradfordFactor",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "UseBradfordFactor",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PayTypeNameStub",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "PayTypeNameStub",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ExportToPayroll",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "ExportToPayroll",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Active",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "Active",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PayTypeNameStubSalary",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "PayTypeNameStubSalary",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZStorage_careblox_parquet_file",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "tblAbsenceCodes$",
									"DateString": {
										"value": "@variables('DateString')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_Careblox_AbsenceCodes",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "tblAbsenceCodes Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "tblAbsenceCodes",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('tblAbsenceCodes').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "tblAbsenceCodes"
							}
						}
					},
					{
						"name": "tblTypes Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "tblTypes Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "tblTypes Error",
							"errorCode": "101"
						}
					},
					{
						"name": "tblRoles Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "tblRoles Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "tblRoles Error",
							"errorCode": "tblRoles Error101"
						}
					},
					{
						"name": "Upsert to TtblEmpJobs Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "Upsert to TtblEmpJobs Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "Upsert to TtblEmpJobs Error",
							"errorCode": "101"
						}
					},
					{
						"name": "Upsert to tblEmployees Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "Upsert to tblEmployees Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "Upsert to tblEmployees Error",
							"errorCode": "101"
						}
					},
					{
						"name": "Upsert to tblPayrollData Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "Upsert to tblPayrollData Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "Upsert to tblPayrollData Error",
							"errorCode": "101"
						}
					},
					{
						"name": "FtblPeriods Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "tblPeriods Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "tblPeriods Error",
							"errorCode": "101"
						}
					},
					{
						"name": "tblRates Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "tblRates Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "tblRates Error",
							"errorCode": "101"
						}
					},
					{
						"name": "tblShifts Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "tblShifts Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "tblShifts Error",
							"errorCode": "101"
						}
					},
					{
						"name": "tblTAData Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "tblTAData Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "tblTAData Error",
							"errorCode": "101"
						}
					},
					{
						"name": "tblCalender Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "tblCalender Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "tblCalender Error",
							"errorCode": "101"
						}
					},
					{
						"name": "tblAbsenceCodes Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "tblAbsenceCodes Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "tblAbsenceCodes Error",
							"errorCode": "101"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"DateString": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Careblox/Children Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-02T09:32:42Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CareBlox-bak-Files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Downloads .bak files from the CareBlox FTP",
				"activities": [
					{
						"name": "Download FTP Files",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set FileName Wildcard",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.00:15:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FtpReadSettings",
									"recursive": false,
									"wildcardFileName": {
										"value": "@variables('FileName')",
										"type": "Expression"
									},
									"useBinaryTransfer": true,
									"deleteFilesAfterCompletion": false,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"blockSizeInMB": 50
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_CareBlox_FTP_Files",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_careblox_Binary",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Set Todays Date",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Today",
							"value": {
								"value": "@formatDateTime(utcNow(), 'yyyy_M_d')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set FileName Wildcard",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Todays Date",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "FileName",
							"value": {
								"value": "@concat('AveryCare*lox*_',variables('Today'), '_*.zip')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"FileName": {
						"type": "String"
					},
					"Today": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Careblox/Children Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-10T11:21:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CareBlox-parquet-copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copies Parquet files from file share to azure blob storage. Then deletes the files on the file share.",
				"activities": [
					{
						"name": "Copy Careblox Parquet files",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.parquet",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Fileshare_Parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AZStorage_careblox_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy Careblox Parquet files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_PolestarStorageAcc_Fileshare_Parquet",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureFileStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "*.parquet",
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Careblox/Children Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-26T11:05:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CareBlox-parquet-load-STG')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Load data from the parquet files to the stage (STG) tables in SQL TRANSFORM DB",
				"activities": [
					{
						"name": "STGtblEmpJobs",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set DateString",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "JobAutoID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "JobAutoID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ContractedHours",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "ContractedHours",
											"type": "Single",
											"physicalType": "real"
										}
									},
									{
										"source": {
											"name": "Department",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "Department",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "Role",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "Role",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "JobNo",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "JobNo",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "StartDate",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "StartDate",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Holidays",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "Holidays",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "HolidayFull",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "HolidayFull",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "BreakRule",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "BreakRule",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "ContractID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "ContractID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Deleted",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "Deleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "LastUpdate",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "LastUpdate",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "WorkingArrangements",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "WorkingArrangements",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "VHEnabled",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "VHEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "VHBalance",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "VHBalance",
											"type": "Single",
											"physicalType": "real"
										}
									},
									{
										"source": {
											"name": "VHBalanceDate",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "VHBalanceDate",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SicknessThreshold",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "SicknessThreshold",
											"type": "Single",
											"physicalType": "real"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZStorage_careblox_parquet_file",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "tblEmpJobs$",
									"DateString": {
										"value": "@variables('DateString')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_CareBlox_stg",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "stgtblEmpJobs"
								}
							}
						]
					},
					{
						"name": "STGtblEmployees",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STGtblEmpJobs",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "EmployeeAutoID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "EmployeeAutoID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Title",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Title",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Forename",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Forename",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Middlename",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Middlename",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Surname",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Surname",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AddressLine1",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AddressLine1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AddressLine2",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AddressLine2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AddressLine3",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AddressLine3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AddressLine4",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AddressLine4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AddressLine5",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AddressLine5",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PostCode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "PostCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Country",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Country",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Telephone",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Telephone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Mobile",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Mobile",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Email",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Email",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BirthDate",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "BirthDate",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CountryOfBirth",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CountryOfBirth",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "YearOfEntry",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "YearOfEntry",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DateStarted",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "DateStarted",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LeavingDate",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "LeavingDate",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LeavingEnteredBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "LeavingEnteredBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LeavingEnteredOn",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "LeavingEnteredOn",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Gender",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "NINumber",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "NINumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EthnicOrigin",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EthnicOrigin",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Religion",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Religion",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Disability",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Disability",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Nationality",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Nationality",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Dependants",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "Dependants",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AccountNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "AccountName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AccountName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "SortCode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SortCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BankName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "BankName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BankBranch",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "BankBranch",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "BuildingSocRef",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "BuildingSocRef",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "MaritalStatus",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "MaritalStatus",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PayMethod",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "PayMethod",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UploadAsNewStarter",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "UploadAsNewStarter",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "NeedsUploading",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "NeedsUploading",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "HasLeft",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "HasLeft",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PackageID",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "PackageID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ImportPackageID",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "ImportPackageID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ContractedHours",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "ContractedHours",
											"type": "Single",
											"physicalType": "real"
										}
									},
									{
										"source": {
											"name": "DefaultPayRate",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "DefaultPayRate",
											"type": "Single",
											"physicalType": "real"
										}
									},
									{
										"source": {
											"name": "LeavingReason",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "LeavingReason",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LeavingDestination",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "LeavingDestination",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IncludeInNextPay",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "IncludeInNextPay",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "OnSick",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "OnSick",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "Export",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "Export",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SageID",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "SageID",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "TATagID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "TATagID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BankStaff",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "BankStaff",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PostCodeSearch",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "PostCodeSearch",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkingTimeWaiver",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "WorkingTimeWaiver",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "BatchID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "BatchID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmployeeType",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "EmployeeType",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "HolidayMonthStart",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "HolidayMonthStart",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreatedByID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "CreatedByID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreatedByName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "CreatedByName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ShortDisplayName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ShortDisplayName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DisplayColour",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "DisplayColour",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ApproverName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ApproverName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ApproverID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ApproverID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsApprover",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "IsApprover",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "TAApprover",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "TAApprover",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RosterUnitList",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "RosterUnitList",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PrimaryRosterUnit",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "PrimaryRosterUnit",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PortalEnabled",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "PortalEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "PortalPassword",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "PortalPassword",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "NoticePeriod",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "NoticePeriod",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "DataUpgradedDate",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "DataUpgradedDate",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DataUpgradedBy",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "DataUpgradedBy",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZStorage_careblox_parquet_file",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "tblEmployees$",
									"DateString": {
										"value": "@variables('DateString')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_CareBlox_stg",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "STGtblEmployees"
								}
							}
						]
					},
					{
						"name": "STGtblPayrollData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STGtblEmployees",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "PayrollID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "PayrollID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EmployeeName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EmployeeName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RoleID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "RoleID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Role",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Role",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "TypeID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "TypeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Rate",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "Rate",
											"type": "Decimal",
											"physicalType": "money",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "Units",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "Units",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Comment",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Comment",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EnteredDate",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "EnteredDate",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "EnteredBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EnteredBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EnteredByName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EnteredByName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "PeriodNo",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "PeriodNo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "HasVariance",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "HasVariance",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "MonthSplit",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "MonthSplit",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Comitted",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "Comitted",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ApprovedDate",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "ApprovedDate",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "ApprovedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ApprovedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ApprovedByName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ApprovedByName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ImportedFromTA",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "ImportedFromTA",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "WorkedLocationID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "WorkedLocationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BatchID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "BatchID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ItemDate",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "ItemDate",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZStorage_careblox_parquet_file",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "tblPayrollData$",
									"DateString": {
										"value": "@variables('DateString')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_CareBlox_stg",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "STGtblPayrollData"
								}
							}
						]
					},
					{
						"name": "STGtblPeriods",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STGtblPayrollData",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "PeriodID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "PeriodID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CurrentPeriodNum",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "CurrentPeriodNum",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DateCreated",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "DateCreated",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DateRange",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "DateRange",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "GeneratedPayroll",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "GeneratedPayroll",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZStorage_careblox_parquet_file",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "tblPeriods$",
									"DateString": {
										"value": "@variables('DateString')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_CareBlox_stg",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "STGtblPeriods"
								}
							}
						]
					},
					{
						"name": "STGtblRates",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STGtblPeriods",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "RatesAutoID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "RatesAutoID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RoleID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "RoleID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TypeID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "TypeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Rate",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "Rate",
											"type": "Decimal",
											"physicalType": "smallmoney",
											"scale": 4,
											"precision": 10
										}
									},
									{
										"source": {
											"name": "IsDefault",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "IsDefault",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Deleted",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "Deleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "LastUpdate",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "LastUpdate",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZStorage_careblox_parquet_file",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "tblRates$",
									"DateString": {
										"value": "@variables('DateString')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_CareBlox_stg",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "STGtblRates"
								}
							}
						]
					},
					{
						"name": "STGtblShifts",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STGtblRates",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ShiftID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "ShiftID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "HomeID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "HomeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RoleID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "RoleID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ShiftStart",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "ShiftStart",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "ShiftEnd",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "ShiftEnd",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "PayRate",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "PayRate",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Department",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "Department",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Deleted",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "Deleted",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "RosterUnitID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "RosterUnitID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "DeletedBy",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "DeletedBy",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DeletedDate",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "DeletedDate",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "ITG_SourceID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "ITG_SourceID",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "ITG_SourceName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ITG_SourceName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ITG_Status",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "ITG_Status",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "RosterType",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "RosterType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZStorage_careblox_parquet_file",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "tblShifts$",
									"DateString": {
										"value": "@variables('DateString')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_CareBlox_stg",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "STGtblShifts"
								}
							}
						]
					},
					{
						"name": "STGtblTAData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STGtblShifts",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "LocalID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "LocalID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TAID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "TAID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HomeID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "HomeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RoleID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "RoleID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ShiftID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "ShiftID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TAStatus",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "TAStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TADateIn",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "TADateIn",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "ActualDateIn",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "ActualDateIn",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "ConfirmedDateIn",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "ConfirmedDateIn",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "EarlyInFlag",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "EarlyInFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "EarlyInComment",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EarlyInComment",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LateInFlag",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "LateInFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "LateInComment",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "LateInComment",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TADateOut",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "TADateOut",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "ActualDateOut",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "ActualDateOut",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "ConfirmedDateOut",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "ConfirmedDateOut",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "EarlyOutFlag",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "EarlyOutFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "EarlyOutComment",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EarlyOutComment",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "LateOutFlag",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "LateOutFlag",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "LateOutComment",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "LateOutComment",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ManagerApprovalRequiredIn",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "ManagerApprovalRequiredIn",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "ManagerApprovalRequiredOut",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "ManagerApprovalRequiredOut",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "RecordedMinutes",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "RecordedMinutes",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "TATagID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "TATagID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ImageFilename",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ImageFilename",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Imported",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "Imported",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "SrcUnit",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "SrcUnit",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ExternalWorkerName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ExternalWorkerName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZStorage_careblox_parquet_file",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "tblTAData$",
									"DateString": {
										"value": "@variables('DateString')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_CareBlox_stg",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "STGtblTAData"
								}
							}
						]
					},
					{
						"name": "tblHome",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "STGtblTAData",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"AutoHMID"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AutoHMID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "AutoHMID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "HomeID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "HomeID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HomeName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "HomeName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HomeEmail",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "HomeEmail",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Address1",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Address1",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Address2",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Address2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Address3",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Address3",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Address4",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Address4",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PostCode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "PostCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Telephone",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Telephone",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Fax",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Fax",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SageCode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SageCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DepartmentCode",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "DepartmentCode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Withdrawn",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "Withdrawn",
											"type": "Boolean",
											"physicalType": "bit"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZStorage_careblox_parquet_file",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "tblHome$",
									"DateString": {
										"value": "@variables('DateString')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "CareBlox",
									"Table": "tblHome"
								}
							}
						]
					},
					{
						"name": "Set DateString",
						"description": "Sets the date string used for Dataset property",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "DateString",
							"value": {
								"value": "@utcNow('dd-MM-yyyy')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "STGtblEmpJobs Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "STGtblEmpJobs",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('STGtblEmpJobs').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "STGtblEmpJobs"
							}
						}
					},
					{
						"name": "STGtblEmployees Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "STGtblEmployees",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('STGtblEmployees').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "STGtblEmployees"
							}
						}
					},
					{
						"name": "STGtblPayrollData Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "STGtblPayrollData",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('STGtblPayrollData').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "STGtblPayrollData"
							}
						}
					},
					{
						"name": "STGtblPeriods Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "STGtblPeriods",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('STGtblPeriods').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "STGtblPeriods"
							}
						}
					},
					{
						"name": "STGtblRates Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "STGtblRates",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('STGtblRates').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "STGtblRates"
							}
						}
					},
					{
						"name": "STGtblShifts Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "STGtblShifts",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('STGtblShifts').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "STGtblShifts"
							}
						}
					},
					{
						"name": "STGtblTAData Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "STGtblTAData",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('STGtblTAData').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "STGtblTAData"
							}
						}
					},
					{
						"name": "tblHome Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "tblHome",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('tblHome').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "tblHome"
							}
						}
					},
					{
						"name": "STGtblCalender",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "tblHome",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "SourceFileName",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "UniqueID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "UniqueID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EmployeeID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StartDate",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "StartDate",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "EmployeeName",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EmployeeName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "EndDate",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "EndDate",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "LocationID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StartDetails",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "StartDetails",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EndDetails",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "EndDetails",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EnteredOn",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "EnteredOn",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "UpdatedOn",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "UpdatedOn",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "EnteredBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EnteredBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "UpdatedBy",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "UpdatedBy",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Export",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "Export",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ShowAlert",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "ShowAlert",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Department",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "Department",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RosterID",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "RosterID",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "Role",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "Role",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DaysTaken",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "DaysTaken",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "EnteredByID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "EnteredByID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BatchId",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "BatchId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AbsenceCode",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AbsenceCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AbsenceCategory",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AbsenceCategory",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BradfordFactorInclude",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "BradfordFactorInclude",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "Reviewed",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "Reviewed",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "UpdatedByID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "UpdatedByID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "UpdateType",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "UpdateType",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "ExpectedEndDate",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "ExpectedEndDate",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "ActivityID",
											"type": "Int64",
											"physicalType": "INT64"
										},
										"sink": {
											"name": "ActivityID",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "ActivityLocationID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ActivityLocationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "SentToUnit",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "SourceFileName",
											"type": "String"
										},
										"sink": {
											"name": "SourceFileName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AZStorage_careblox_parquet_file",
								"type": "DatasetReference",
								"parameters": {
									"FileName": "tblCalender$",
									"DateString": {
										"value": "@variables('DateString')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB_CareBlox_stg",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "stgtblCalender"
								}
							}
						]
					},
					{
						"name": "tblCalender Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "STGtblCalender",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": {
									"value": "@activity('STGtblCalender').output.errors[0].Message",
									"type": "Expression"
								},
								"Colour": "Red",
								"PipelineName": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"PipelineRunID": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"pStepFailed": "STGtblCalender"
							}
						}
					},
					{
						"name": "STGtblEmpJobs Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "STGtblEmpJobs Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "STGtblEmpJobs Error",
							"errorCode": "101"
						}
					},
					{
						"name": "STGtblEmployees Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "STGtblEmployees Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "STGtblEmployees Error",
							"errorCode": "101"
						}
					},
					{
						"name": "STGtblPayrollData Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "STGtblPayrollData Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "STGtblPayrollData Failure",
							"errorCode": "101"
						}
					},
					{
						"name": "STGtblPeriods Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "STGtblPeriods Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "STGtblPeriods Error",
							"errorCode": "101"
						}
					},
					{
						"name": "STGtblRates Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "STGtblRates Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "STGtblRates Error",
							"errorCode": "101"
						}
					},
					{
						"name": "STGtblShifts Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "STGtblShifts Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "STGtblShifts Error",
							"errorCode": "101"
						}
					},
					{
						"name": "STGtblTAData Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "STGtblTAData Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "STGtblTAData Failure",
							"errorCode": "101"
						}
					},
					{
						"name": "tblHome Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "tblHome Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "tblHome Error",
							"errorCode": "101"
						}
					},
					{
						"name": "tblCalender Failure",
						"type": "Fail",
						"dependsOn": [
							{
								"activity": "tblCalender Error",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"message": "tblCalender Error",
							"errorCode": "101"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"DateString": {
						"type": "String"
					},
					"vStepFailed": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Careblox/Children Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-01T11:08:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CareBlox_Delete_Files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "removes files older than 30 days in the careblox container",
				"activities": [
					{
						"name": "Delete Careblox bak files",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_CareBlox_Container",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"modifiedDatetimeStart": {
									"value": "@addDays(utcNow(), -40 )",
									"type": "Expression"
								},
								"modifiedDatetimeEnd": {
									"value": "@addDays(utcNow(), -30 )",
									"type": "Expression"
								},
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Date": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-09-17T11:21:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_ColdHarbour_Rooms')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Extracts the Rooms from the Polestar DB on AH2, to a table in Avery DB on AH2",
				"activities": [
					{
						"name": "Rooms",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ROOM_REF"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ROOM_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ROOM_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ROOM_CAT",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ROOM_CAT",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ROOM_CAT_DESC",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ROOM_CAT_DESC",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ROOM_CODE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ROOM_CODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ROOM_DESC",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ROOM_DESC",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ROOM_NO_BEDS",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ROOM_NO_BEDS",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CHARGEPERIOD",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CHARGEPERIOD",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CURRENTRATE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 12
										},
										"sink": {
											"name": "CURRENTRATE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 12
										}
									},
									{
										"source": {
											"name": "RATEDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "RATEDATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "USEFLAG",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "USEFLAG",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_Polestar",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "Rooms"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "ColdHarbour",
									"Table": "Rooms"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Avery/Children Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-09-05T11:40:20Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_ColdHarbour_RoomsWithInHomeResidents')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copies data from the view in Polestar to Avery DB. Lists all rooms in CH and the active resident record assigned to that home",
				"activities": [
					{
						"name": "Refresh Data",
						"description": "Truncates table in Avery DB and Inserts data from Polestar DB using the view.",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \n    [ROOM_REF]\n    ,[ROOM_CODE]\n    ,[ROOM_DESC]\n    ,[USEFLAG]\n    ,[HOME_REF]\n    ,[RES_REF]\n    ,[RES_CODE]\n    ,[ResidentStatus]\n    ,[Firstname]\n    ,[Surname]\n    ,[AdmissionAnalysis]\n    ,[AdmissionType]\n    ,[ResidentAdmissionReason]\n    ,[AnalysisGroup]\n    ,ResidentsAssigned\nFROM \n    [dbo].[vRoomsWithInHomeResidentDetails]\nORDER BY\n    Home_Ref ASC,\n    ROOM_Ref ASC",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE ColdHarbour.RoomsWithInHomeResidentDetails",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ROOM_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ROOM_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ROOM_CODE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ROOM_CODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ROOM_DESC",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ROOM_DESC",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "USEFLAG",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "USEFLAG",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RES_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RES_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RES_CODE",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "RES_CODE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ResidentStatus",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ResidentStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Firstname",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Firstname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Surname",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Surname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AdmissionAnalysis",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AdmissionAnalysis",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AdmissionType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AdmissionType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ResidentAdmissionReason",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ResidentAdmissionReason",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AnalysisGroup",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AnalysisGroup",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ResidentsAssigned",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ResidentsAssigned",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_Polestar",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "ColdHarbour",
									"Table": "RoomsWithInHomeResidentDetails"
								}
							}
						]
					},
					{
						"name": "Update Room Occupancy",
						"description": "Updates the Pricing.Room tables occupancy using the refreshed data",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Refresh Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Pricing].[Update$RoomOccupancyFromCH]"
						},
						"linkedServiceName": {
							"referenceName": "AH2_Avery",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Avery/Children Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-10-10T09:21:26Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Exchequer_Budget')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "YE Mar Budget 1 Staging",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"additionalColumns": [
									{
										"name": "BudgetType",
										"value": {
											"value": "1",
											"type": "Expression"
										}
									},
									{
										"name": "YearEnd",
										"value": {
											"value": "'Mar'",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"parallelCopies": 8,
							"dataIntegrationUnits": 16,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BudgetType",
											"type": "String"
										},
										"sink": {
											"name": "BudgetType",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "YearEnd",
											"type": "String"
										},
										"sink": {
											"name": "YearEnd",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ExchCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ExchCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "GLCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GLCode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "GLDesc",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GLDesc",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period1Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period1Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period1Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period1Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period2Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period2Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period2Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period2Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period3Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period3Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period3Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period3Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period4Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period4Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period4Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period4Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period5Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period5Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period5Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period5Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period6Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period6Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period6Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period6Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period7Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period7Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period7Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period7Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period8Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period8Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period8Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period8Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period9Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period9Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period9Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period9Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period10Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period10Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period10Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period10Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period11Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period11Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period11Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period11Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period12Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period12Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period12Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period12Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Exchequer_Excel_YE_Mar_Budget1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Exchequer",
									"Table": "STGBudgets"
								}
							}
						]
					},
					{
						"name": "Upsert Budget1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Budget 2 Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "WITH BudgetData AS(\nSELECT \n    H.IntranetID,\n    S.BudgetType,\n    S.ExchCode,\n    S.GLCode,\n    S.GLDesc,\n    P.BudgetDate,\n    S.YearEnd,\n    TRY_CAST(P.Amount AS NUMERIC(18,5)) AS BudgetAmount\nFROM \n    Exchequer.STGBudgets AS S\n\n    LEFT JOIN Avery.HomeDetails H\n        ON H.ExchCode = S.ExchCode\n\n    CROSS APPLY (VALUES\n        (S.Period1Date, S.Period1Value),\n        (S.Period2Date, S.Period2Value),\n        (S.Period3Date, S.Period3Value),\n        (S.Period4Date, S.Period4Value),\n        (S.Period5Date, S.Period5Value),\n        (S.Period6Date, S.Period6Value),\n        (S.Period7Date, S.Period7Value),\n        (S.Period8Date, S.Period8Value),\n        (S.Period9Date, S.Period9Value),\n        (S.Period10Date, S.Period10Value),\n        (S.Period11Date, S.Period11Value),\n        (S.Period12Date, S.Period12Value)\n    ) AS P(BudgetDate, Amount)\n\nWHERE \n    S.ExchCode IS NOT NULL\n    AND P.BudgetDate IS NOT NULL\n)\n\nSELECT \n    CAST(\n        CAST(BudgetData.IntranetID AS VARCHAR(4)) + \n        CAST(BudgetData.BudgetType AS VARCHAR(1)) +\n        CAST(BudgetData.GLCode AS VARCHAR(6)) + \n        CONVERT(VARCHAR(8), CAST(BudgetData.BudgetDate AS DATE), 112) \n    AS BIGINT) AS BudgetCompositeKey,\n    *\nFROM\n    BudgetData\nORDER BY\n    IntranetID ASC,\n    GLCode ASC,\n    BudgetDate ASC,\n    BudgetType ASC",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"parallelCopies": 8,
							"dataIntegrationUnits": 16,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BudgetCompositeKey",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "BudgetCompositeKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IntranetID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "IntranetID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BudgetType",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "BudgetType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ExchCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ExchCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "GLCode",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GLCode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "GLDesc",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "GLDesc",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BudgetDate",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BudgetDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "YearEnd",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "YearEnd",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BudgetAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 5,
											"precision": 18
										},
										"sink": {
											"name": "BudgetAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 5,
											"precision": 18
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Exchequer",
									"Table": "Budgets"
								}
							}
						]
					},
					{
						"name": "YE Dec Budget 1 Staging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "YE Mar Budget 1 Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"additionalColumns": [
									{
										"name": "BudgetType",
										"value": {
											"value": "1",
											"type": "Expression"
										}
									},
									{
										"name": "YearEnd",
										"value": {
											"value": "'Dec'",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"parallelCopies": 8,
							"dataIntegrationUnits": 16,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BudgetType",
											"type": "String"
										},
										"sink": {
											"name": "BudgetType",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "YearEnd",
											"type": "String"
										},
										"sink": {
											"name": "YearEnd",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ExchCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ExchCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "GLCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GLCode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "GLDesc",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GLDesc",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period1Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period1Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period1Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period1Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period2Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period2Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period2Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period2Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period3Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period3Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period3Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period3Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period4Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period4Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period4Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period4Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period5Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period5Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period5Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period5Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period6Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period6Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period6Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period6Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period7Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period7Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period7Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period7Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period8Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period8Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period8Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period8Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period9Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period9Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period9Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period9Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period10Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period10Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period10Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period10Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period11Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period11Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period11Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period11Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period12Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period12Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period12Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period12Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Exchequer_Excel_YE_Dec_Budget1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Exchequer",
									"Table": "STGBudgets"
								}
							}
						]
					},
					{
						"name": "Budget 2 Staging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "YE Dec Budget 1 Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"additionalColumns": [
									{
										"name": "BudgetType",
										"value": {
											"value": "2",
											"type": "Expression"
										}
									},
									{
										"name": "YearEnd",
										"value": {
											"value": "'Dec'",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"parallelCopies": 8,
							"dataIntegrationUnits": 16,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BudgetType",
											"type": "String"
										},
										"sink": {
											"name": "BudgetType",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "YearEnd",
											"type": "String"
										},
										"sink": {
											"name": "YearEnd",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ExchCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ExchCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "GLCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GLCode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "GLDesc",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GLDesc",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period1Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period1Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period1Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period1Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period2Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period2Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period2Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period2Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period3Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period3Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period3Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period3Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period4Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period4Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period4Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period4Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period5Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period5Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period5Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period5Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period6Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period6Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period6Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period6Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period7Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period7Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period7Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period7Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period8Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period8Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period8Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period8Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period9Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period9Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period9Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period9Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period10Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period10Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period10Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period10Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period11Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period11Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period11Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period11Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Period12Value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period12Value",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Period12Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Period12Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Exchequer_Excel_YE_Dec_Budget1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Exchequer",
									"Table": "STGBudgets"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Budget1": {
						"type": "String",
						"defaultValue": "Budget1"
					},
					"Budget2": {
						"type": "String",
						"defaultValue": "Budget2"
					}
				},
				"folder": {
					"name": "Exchequer/Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Exchequer_Fileshare')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Moves the exported csv file from the Azure File Share to Azure Storage Container. The file contains list of Exchequer companies and the users with access to it",
				"activities": [
					{
						"name": "Copy CSV",
						"description": "Copy CSV file to Exchequer Azure Container",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Fileshare_Exchequer",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Exchequer",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete File from File Share",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Copy CSV",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_PolestarStorageAcc_Fileshare_Exchequer",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureFileStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Exchequer/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-06-26T11:47:51Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "removes files from provided container in the date range provided",
				"activities": [
					{
						"name": "Delete Careblox bak files",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_Polestar_Storage",
								"type": "DatasetReference",
								"parameters": {
									"Container": "other"
								}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "PolestarStorageAcc",
									"type": "LinkedServiceReference"
								},
								"path": "other"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"modifiedDatetimeStart": "2024-05-01T00:00:00.000Z",
								"modifiedDatetimeEnd": "2025-01-31T00:00:00.000Z",
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Date": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-09-17T11:21:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Fusion_Residents')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Resident Data Json",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['ServiceUser_ID']"
										},
										"sink": {
											"name": "ServiceUser_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Home_ID']"
										},
										"sink": {
											"name": "Home_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['room_ID']"
										},
										"sink": {
											"name": "room_ID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CC_HID']"
										},
										"sink": {
											"name": "CC_HID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['CC_ClientID']"
										},
										"sink": {
											"name": "CC_ClientID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Title']"
										},
										"sink": {
											"name": "Title",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Forename']"
										},
										"sink": {
											"name": "Forename",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Surname']"
										},
										"sink": {
											"name": "Surname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DateOfBirth']"
										},
										"sink": {
											"name": "DateOfBirth",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DateIn']"
										},
										"sink": {
											"name": "DateIn",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DateOut']"
										},
										"sink": {
											"name": "DateOut",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['careCategory']"
										},
										"sink": {
											"name": "careCategory",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['fundingType']"
										},
										"sink": {
											"name": "fundingType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['fees']"
										},
										"sink": {
											"name": "fees",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['deleted']"
										},
										"sink": {
											"name": "deleted",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['sex']"
										},
										"sink": {
											"name": "sex",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['maritalStatus']"
										},
										"sink": {
											"name": "maritalStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nationality']"
										},
										"sink": {
											"name": "nationality",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ni_num']"
										},
										"sink": {
											"name": "ni_num",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['NHS']"
										},
										"sink": {
											"name": "NHS",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nhs_Expiry']"
										},
										"sink": {
											"name": "nhs_Expiry",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nickname']"
										},
										"sink": {
											"name": "nickname",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['status']"
										},
										"sink": {
											"name": "status",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['residencyType']"
										},
										"sink": {
											"name": "residencyType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['dependency']"
										},
										"sink": {
											"name": "dependency",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['alertCode']"
										},
										"sink": {
											"name": "alertCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['admittedFrom']"
										},
										"sink": {
											"name": "admittedFrom",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['admittedFrom_Ad1']"
										},
										"sink": {
											"name": "admittedFrom_Ad1",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['admittedFrom_Ad2']"
										},
										"sink": {
											"name": "admittedFrom_Ad2",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['admittedFrom_Ad3']"
										},
										"sink": {
											"name": "admittedFrom_Ad3",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['admittedFrom_Ad4']"
										},
										"sink": {
											"name": "admittedFrom_Ad4",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['admittedFrom_PC']"
										},
										"sink": {
											"name": "admittedFrom_PC",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['admittedFrom_Tel']"
										},
										"sink": {
											"name": "admittedFrom_Tel",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['admissionCode']"
										},
										"sink": {
											"name": "admissionCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ResContractSigned']"
										},
										"sink": {
											"name": "ResContractSigned",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['finalFundingDate']"
										},
										"sink": {
											"name": "finalFundingDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['dischargeCode']"
										},
										"sink": {
											"name": "dischargeCode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['dischargeLocation']"
										},
										"sink": {
											"name": "dischargeLocation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['dateOfDeath']"
										},
										"sink": {
											"name": "dateOfDeath",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['timeOfDeath']"
										},
										"sink": {
											"name": "timeOfDeath",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['doctorName']"
										},
										"sink": {
											"name": "doctorName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['deathCause']"
										},
										"sink": {
											"name": "deathCause",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ceaseInvoicing']"
										},
										"sink": {
											"name": "ceaseInvoicing",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['eye_colour']"
										},
										"sink": {
											"name": "eye_colour",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['height_cm']"
										},
										"sink": {
											"name": "height_cm",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['height_m']"
										},
										"sink": {
											"name": "height_m",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['hair_colour']"
										},
										"sink": {
											"name": "hair_colour",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['hair_length']"
										},
										"sink": {
											"name": "hair_length",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['eye_wear']"
										},
										"sink": {
											"name": "eye_wear",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['hearing_aid']"
										},
										"sink": {
											"name": "hearing_aid",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['facial_hair']"
										},
										"sink": {
											"name": "facial_hair",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['occupation']"
										},
										"sink": {
											"name": "occupation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['allergies']"
										},
										"sink": {
											"name": "allergies",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['important_information']"
										},
										"sink": {
											"name": "important_information",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['deathNotes']"
										},
										"sink": {
											"name": "deathNotes",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ClientNumber']"
										},
										"sink": {
											"name": "ClientNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ClientID']"
										},
										"sink": {
											"name": "ClientID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['su_med_history']"
										},
										"sink": {
											"name": "su_med_history",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['su_med_likes']"
										},
										"sink": {
											"name": "su_med_likes",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['su_med_social']"
										},
										"sink": {
											"name": "su_med_social",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['su_med_allergies']"
										},
										"sink": {
											"name": "su_med_allergies",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['su_DL_requirements']"
										},
										"sink": {
											"name": "su_DL_requirements",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['su_evac_notes']"
										},
										"sink": {
											"name": "su_evac_notes",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['care_hours']"
										},
										"sink": {
											"name": "care_hours",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DNAR']"
										},
										"sink": {
											"name": "DNAR",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['respectTEP']"
										},
										"sink": {
											"name": "respectTEP",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['respectTEP_date']"
										},
										"sink": {
											"name": "respectTEP_date",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DOLS']"
										},
										"sink": {
											"name": "DOLS",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DOLSDate']"
										},
										"sink": {
											"name": "DOLSDate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DOLSExpiry']"
										},
										"sink": {
											"name": "DOLSExpiry",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DOLSRenewal']"
										},
										"sink": {
											"name": "DOLSRenewal",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DNARExpiry']"
										},
										"sink": {
											"name": "DNARExpiry",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['EndOfLife']"
										},
										"sink": {
											"name": "EndOfLife",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['DPLNumber']"
										},
										"sink": {
											"name": "DPLNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['Religion']"
										},
										"sink": {
											"name": "Religion",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['su_funeral_wishes']"
										},
										"sink": {
											"name": "su_funeral_wishes",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['admissionreason_notes']"
										},
										"sink": {
											"name": "admissionreason_notes",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['KeyCareWorker']"
										},
										"sink": {
											"name": "KeyCareWorker",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['KeyNurseWorker']"
										},
										"sink": {
											"name": "KeyNurseWorker",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['financial_notes']"
										},
										"sink": {
											"name": "financial_notes",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['hospital_num']"
										},
										"sink": {
											"name": "hospital_num",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['target_weight']"
										},
										"sink": {
											"name": "target_weight",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['target_fluid']"
										},
										"sink": {
											"name": "target_fluid",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['gdpr_consent_sent']"
										},
										"sink": {
											"name": "gdpr_consent_sent",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['gdpr_consent_received']"
										},
										"sink": {
											"name": "gdpr_consent_received",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['su_lang']"
										},
										"sink": {
											"name": "su_lang",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['susexuality']"
										},
										"sink": {
											"name": "susexuality",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['UseBedRails']"
										},
										"sink": {
											"name": "UseBedRails",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['expectedRate']"
										},
										"sink": {
											"name": "expectedRate",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['expectedFundingType']"
										},
										"sink": {
											"name": "expectedFundingType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['adrt']"
										},
										"sink": {
											"name": "adrt",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['FNCAppliedFor']"
										},
										"sink": {
											"name": "FNCAppliedFor",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['TermsAndConditions']"
										},
										"sink": {
											"name": "TermsAndConditions",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['ProofOfFunding']"
										},
										"sink": {
											"name": "ProofOfFunding",
											"type": "String"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Fusion_Resident_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "FusionResident"
								}
							}
						]
					},
					{
						"name": "Homes Data",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['Home_ID']"
										},
										"sink": {
											"name": "Home_ID"
										}
									},
									{
										"source": {
											"path": "$['NameOfHome']"
										},
										"sink": {
											"name": "NameOfHome"
										}
									},
									{
										"source": {
											"path": "$['dateOpened']"
										},
										"sink": {
											"name": "dateOpened"
										}
									},
									{
										"source": {
											"path": "$['Comp_ID']"
										},
										"sink": {
											"name": "Comp_ID"
										}
									},
									{
										"source": {
											"path": "$['AddressLine1']"
										},
										"sink": {
											"name": "AddressLine1"
										}
									},
									{
										"source": {
											"path": "$['AddressLine2']"
										},
										"sink": {
											"name": "AddressLine2"
										}
									},
									{
										"source": {
											"path": "$['AddressLine3']"
										},
										"sink": {
											"name": "AddressLine3"
										}
									},
									{
										"source": {
											"path": "$['AddressLine4']"
										},
										"sink": {
											"name": "AddressLine4"
										}
									},
									{
										"source": {
											"path": "$['postcode']"
										},
										"sink": {
											"name": "postcode"
										}
									},
									{
										"source": {
											"path": "$['Manager']"
										},
										"sink": {
											"name": "Manager"
										}
									},
									{
										"source": {
											"path": "$['TelephoneNo']"
										},
										"sink": {
											"name": "TelephoneNo"
										}
									},
									{
										"source": {
											"path": "$['Fax']"
										},
										"sink": {
											"name": "Fax"
										}
									},
									{
										"source": {
											"path": "$['Email']"
										},
										"sink": {
											"name": "Email"
										}
									},
									{
										"source": {
											"path": "$['MinHomeOccupancy']"
										},
										"sink": {
											"name": "MinHomeOccupancy"
										}
									},
									{
										"source": {
											"path": "$['OverallFeeNominal']"
										},
										"sink": {
											"name": "OverallFeeNominal"
										}
									},
									{
										"source": {
											"path": "$['Reg1']"
										},
										"sink": {
											"name": "Reg1"
										}
									},
									{
										"source": {
											"path": "$['Reg2']"
										},
										"sink": {
											"name": "Reg2"
										}
									},
									{
										"source": {
											"path": "$['Reg3']"
										},
										"sink": {
											"name": "Reg3"
										}
									},
									{
										"source": {
											"path": "$['Reg4']"
										},
										"sink": {
											"name": "Reg4"
										}
									},
									{
										"source": {
											"path": "$['Reg5']"
										},
										"sink": {
											"name": "Reg5"
										}
									},
									{
										"source": {
											"path": "$['Reg6']"
										},
										"sink": {
											"name": "Reg6"
										}
									},
									{
										"source": {
											"path": "$['Reg7']"
										},
										"sink": {
											"name": "Reg7"
										}
									},
									{
										"source": {
											"path": "$['Reg8']"
										},
										"sink": {
											"name": "Reg8"
										}
									},
									{
										"source": {
											"path": "$['BedNoReg1']"
										},
										"sink": {
											"name": "BedNoReg1"
										}
									},
									{
										"source": {
											"path": "$['BedNoReg2']"
										},
										"sink": {
											"name": "BedNoReg2"
										}
									},
									{
										"source": {
											"path": "$['BedNoReg3']"
										},
										"sink": {
											"name": "BedNoReg3"
										}
									},
									{
										"source": {
											"path": "$['BedNoReg4']"
										},
										"sink": {
											"name": "BedNoReg4"
										}
									},
									{
										"source": {
											"path": "$['BedNoReg5']"
										},
										"sink": {
											"name": "BedNoReg5"
										}
									},
									{
										"source": {
											"path": "$['BedNoReg6']"
										},
										"sink": {
											"name": "BedNoReg6"
										}
									},
									{
										"source": {
											"path": "$['BedNoReg7']"
										},
										"sink": {
											"name": "BedNoReg7"
										}
									},
									{
										"source": {
											"path": "$['BedNoReg8']"
										},
										"sink": {
											"name": "BedNoReg8"
										}
									},
									{
										"source": {
											"path": "$['NominalReg1']"
										},
										"sink": {
											"name": "NominalReg1"
										}
									},
									{
										"source": {
											"path": "$['NominalReg2']"
										},
										"sink": {
											"name": "NominalReg2"
										}
									},
									{
										"source": {
											"path": "$['NominalReg3']"
										},
										"sink": {
											"name": "NominalReg3"
										}
									},
									{
										"source": {
											"path": "$['NominalReg4']"
										},
										"sink": {
											"name": "NominalReg4"
										}
									},
									{
										"source": {
											"path": "$['NominalReg5']"
										},
										"sink": {
											"name": "NominalReg5"
										}
									},
									{
										"source": {
											"path": "$['NominalReg6']"
										},
										"sink": {
											"name": "NominalReg6"
										}
									},
									{
										"source": {
											"path": "$['NominalReg7']"
										},
										"sink": {
											"name": "NominalReg7"
										}
									},
									{
										"source": {
											"path": "$['NominalReg8']"
										},
										"sink": {
											"name": "NominalReg8"
										}
									},
									{
										"source": {
											"path": "$['NursingReg1']"
										},
										"sink": {
											"name": "NursingReg1"
										}
									},
									{
										"source": {
											"path": "$['NursingReg2']"
										},
										"sink": {
											"name": "NursingReg2"
										}
									},
									{
										"source": {
											"path": "$['NursingReg3']"
										},
										"sink": {
											"name": "NursingReg3"
										}
									},
									{
										"source": {
											"path": "$['NursingReg4']"
										},
										"sink": {
											"name": "NursingReg4"
										}
									},
									{
										"source": {
											"path": "$['NursingReg5']"
										},
										"sink": {
											"name": "NursingReg5"
										}
									},
									{
										"source": {
											"path": "$['NursingReg6']"
										},
										"sink": {
											"name": "NursingReg6"
										}
									},
									{
										"source": {
											"path": "$['NursingReg7']"
										},
										"sink": {
											"name": "NursingReg7"
										}
									},
									{
										"source": {
											"path": "$['NursingReg8']"
										},
										"sink": {
											"name": "NursingReg8"
										}
									},
									{
										"source": {
											"path": "$['MinFeesReg1']"
										},
										"sink": {
											"name": "MinFeesReg1"
										}
									},
									{
										"source": {
											"path": "$['MinFeesReg2']"
										},
										"sink": {
											"name": "MinFeesReg2"
										}
									},
									{
										"source": {
											"path": "$['MinFeesReg3']"
										},
										"sink": {
											"name": "MinFeesReg3"
										}
									},
									{
										"source": {
											"path": "$['MinFeesReg4']"
										},
										"sink": {
											"name": "MinFeesReg4"
										}
									},
									{
										"source": {
											"path": "$['MinFeesReg5']"
										},
										"sink": {
											"name": "MinFeesReg5"
										}
									},
									{
										"source": {
											"path": "$['MinFeesReg6']"
										},
										"sink": {
											"name": "MinFeesReg6"
										}
									},
									{
										"source": {
											"path": "$['MinFeesReg7']"
										},
										"sink": {
											"name": "MinFeesReg7"
										}
									},
									{
										"source": {
											"path": "$['MinFeesReg8']"
										},
										"sink": {
											"name": "MinFeesReg8"
										}
									},
									{
										"source": {
											"path": "$['NextInvRun']"
										},
										"sink": {
											"name": "NextInvRun"
										}
									},
									{
										"source": {
											"path": "$['NextPayrollRun']"
										},
										"sink": {
											"name": "NextPayrollRun"
										}
									},
									{
										"source": {
											"path": "$['NextPayPeriod']"
										},
										"sink": {
											"name": "NextPayPeriod"
										}
									},
									{
										"source": {
											"path": "$['PayrollPeriod']"
										},
										"sink": {
											"name": "PayrollPeriod"
										}
									},
									{
										"source": {
											"path": "$['PayrollNoPrefix']"
										},
										"sink": {
											"name": "PayrollNoPrefix"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetStd1']"
										},
										"sink": {
											"name": "StfBudgetStd1"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetStd2']"
										},
										"sink": {
											"name": "StfBudgetStd2"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetStd3']"
										},
										"sink": {
											"name": "StfBudgetStd3"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetStd4']"
										},
										"sink": {
											"name": "StfBudgetStd4"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetStd5']"
										},
										"sink": {
											"name": "StfBudgetStd5"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetStd6']"
										},
										"sink": {
											"name": "StfBudgetStd6"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetStd7']"
										},
										"sink": {
											"name": "StfBudgetStd7"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetVar1']"
										},
										"sink": {
											"name": "StfBudgetVar1"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetVar2']"
										},
										"sink": {
											"name": "StfBudgetVar2"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetVar3']"
										},
										"sink": {
											"name": "StfBudgetVar3"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetVar4']"
										},
										"sink": {
											"name": "StfBudgetVar4"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetVar5']"
										},
										"sink": {
											"name": "StfBudgetVar5"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetVar6']"
										},
										"sink": {
											"name": "StfBudgetVar6"
										}
									},
									{
										"source": {
											"path": "$['StfBudgetVar7']"
										},
										"sink": {
											"name": "StfBudgetVar7"
										}
									},
									{
										"source": {
											"path": "$['InvoiceFooter']"
										},
										"sink": {
											"name": "InvoiceFooter"
										}
									},
									{
										"source": {
											"path": "$['HolidayStartDate']"
										},
										"sink": {
											"name": "HolidayStartDate"
										}
									},
									{
										"source": {
											"path": "$['HomeAccRef']"
										},
										"sink": {
											"name": "HomeAccRef"
										}
									},
									{
										"source": {
											"path": "$['Department']"
										},
										"sink": {
											"name": "Department"
										}
									},
									{
										"source": {
											"path": "$['CommandPath']"
										},
										"sink": {
											"name": "CommandPath"
										}
									},
									{
										"source": {
											"path": "$['CommsNotes']"
										},
										"sink": {
											"name": "CommsNotes"
										}
									},
									{
										"source": {
											"path": "$['deleted']"
										},
										"sink": {
											"name": "deleted"
										}
									},
									{
										"source": {
											"path": "$['deviceID']"
										},
										"sink": {
											"name": "deviceID"
										}
									},
									{
										"source": {
											"path": "$['IP1']"
										},
										"sink": {
											"name": "IP1"
										}
									},
									{
										"source": {
											"path": "$['IP2']"
										},
										"sink": {
											"name": "IP2"
										}
									},
									{
										"source": {
											"path": "$['IP3']"
										},
										"sink": {
											"name": "IP3"
										}
									},
									{
										"source": {
											"path": "$['IP4']"
										},
										"sink": {
											"name": "IP4"
										}
									},
									{
										"source": {
											"path": "$['Port']"
										},
										"sink": {
											"name": "Port"
										}
									},
									{
										"source": {
											"path": "$['CCCompany_ID']"
										},
										"sink": {
											"name": "CCCompany_ID"
										}
									},
									{
										"source": {
											"path": "$['CCHome_ID']"
										},
										"sink": {
											"name": "CCHome_ID"
										}
									},
									{
										"source": {
											"path": "$['Header1']"
										},
										"sink": {
											"name": "Header1"
										}
									},
									{
										"source": {
											"path": "$['Header2']"
										},
										"sink": {
											"name": "Header2"
										}
									},
									{
										"source": {
											"path": "$['invFooterBACS']"
										},
										"sink": {
											"name": "invFooterBACS"
										}
									},
									{
										"source": {
											"path": "$['invFooterDirect']"
										},
										"sink": {
											"name": "invFooterDirect"
										}
									},
									{
										"source": {
											"path": "$['invFooterCheque']"
										},
										"sink": {
											"name": "invFooterCheque"
										}
									},
									{
										"source": {
											"path": "$['invFooterCash']"
										},
										"sink": {
											"name": "invFooterCash"
										}
									},
									{
										"source": {
											"path": "$['invFooterStanding']"
										},
										"sink": {
											"name": "invFooterStanding"
										}
									},
									{
										"source": {
											"path": "$['invFooterSpare']"
										},
										"sink": {
											"name": "invFooterSpare"
										}
									},
									{
										"source": {
											"path": "$['InvAddressLine']"
										},
										"sink": {
											"name": "InvAddressLine"
										}
									},
									{
										"source": {
											"path": "$['InvAddressLine1']"
										},
										"sink": {
											"name": "InvAddressLine1"
										}
									},
									{
										"source": {
											"path": "$['doubleLineRota']"
										},
										"sink": {
											"name": "doubleLineRota"
										}
									},
									{
										"source": {
											"path": "$['upperAnalysisLimit']"
										},
										"sink": {
											"name": "upperAnalysisLimit"
										}
									},
									{
										"source": {
											"path": "$['lowerAnalysisLimit']"
										},
										"sink": {
											"name": "lowerAnalysisLimit"
										}
									},
									{
										"source": {
											"path": "$['analysisTickSize']"
										},
										"sink": {
											"name": "analysisTickSize"
										}
									},
									{
										"source": {
											"path": "$['AppraisalLength']"
										},
										"sink": {
											"name": "AppraisalLength"
										}
									},
									{
										"source": {
											"path": "$['SSLength']"
										},
										"sink": {
											"name": "SSLength"
										}
									},
									{
										"source": {
											"path": "$['InductionLength']"
										},
										"sink": {
											"name": "InductionLength"
										}
									},
									{
										"source": {
											"path": "$['RotaStartDateHome']"
										},
										"sink": {
											"name": "RotaStartDateHome"
										}
									},
									{
										"source": {
											"path": "$['cost_centre']"
										},
										"sink": {
											"name": "cost_centre"
										}
									},
									{
										"source": {
											"path": "$['pooltshprefix']"
										},
										"sink": {
											"name": "pooltshprefix"
										}
									},
									{
										"source": {
											"path": "$['emarx_id']"
										},
										"sink": {
											"name": "emarx_id"
										}
									},
									{
										"source": {
											"path": "$['home_emarx_connection']"
										},
										"sink": {
											"name": "home_emarx_connection"
										}
									},
									{
										"source": {
											"path": "$['home_emarx_username']"
										},
										"sink": {
											"name": "home_emarx_username"
										}
									},
									{
										"source": {
											"path": "$['home_emarx_password']"
										},
										"sink": {
											"name": "home_emarx_password"
										}
									},
									{
										"source": {
											"path": "$['ResponsibleUser']"
										},
										"sink": {
											"name": "ResponsibleUser"
										}
									},
									{
										"source": {
											"path": "$['is_using_v3']"
										},
										"sink": {
											"name": "is_using_v3"
										}
									},
									{
										"source": {
											"path": "$['invoice_pdf_password']"
										},
										"sink": {
											"name": "invoice_pdf_password"
										}
									},
									{
										"source": {
											"path": "$['timesheetStartDay']"
										},
										"sink": {
											"name": "timesheetStartDay"
										}
									},
									{
										"source": {
											"path": "$['RotaStartDay']"
										},
										"sink": {
											"name": "RotaStartDay"
										}
									},
									{
										"source": {
											"path": "$['StaffAppRotaView']"
										},
										"sink": {
											"name": "StaffAppRotaView"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Fusion_Homes_json",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "FusionHomes"
								}
							}
						]
					},
					{
						"name": "Assessment Headers",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Fusion_Json_File",
								"type": "DatasetReference",
								"parameters": {
									"Filename": "Assessement Header.json"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Fusion",
									"Table": "cp_assessment_header"
								}
							}
						]
					},
					{
						"name": "Assessment Completed",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"parallelCopies": 16
						},
						"inputs": [
							{
								"referenceName": "DS_Fusion_Json_File",
								"type": "DatasetReference",
								"parameters": {
									"Filename": "Assessement Completed Jan 2025.json"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Fusion",
									"Table": "cp_assessment_completed"
								}
							}
						]
					},
					{
						"name": "Assessment Completed Answers",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Fusion_Json_File",
								"type": "DatasetReference",
								"parameters": {
									"Filename": "Assessement Completed Answers 2819980.json"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Fusion",
									"Table": "cp_assessment_completedanswers"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Fusion"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Hydra_Output_File')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Downloads the Output file that Hydra generate from their FTP to an Azure Fileshare.",
				"activities": [
					{
						"name": "Download File",
						"description": "Downloads radar-output.xml file from Hydra FTP to azure blob storage",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Remove Existing File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FtpReadSettings",
									"recursive": true,
									"useBinaryTransfer": true,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Hydra_RadarFile",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Radar_AzureStorage",
								"type": "DatasetReference",
								"parameters": {
									"Date": {
										"value": "@variables('Date')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Remove Existing File",
						"description": "Deletes any previous radar-output.xml file on the fileshare before copying the new one there.",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "Set Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_PolestarStorageAcc_Fileshare_radar_output_xml",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureFileStorageReadSettings",
								"recursive": false,
								"wildcardFileName": "radar-output*.xml",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Copy file to fileshare",
						"description": "",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Download File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureFileStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Radar_AzureStorage",
								"type": "DatasetReference",
								"parameters": {
									"Date": {
										"value": "@variables('Date')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Fileshare_radar_output_xml",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Set Date",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Date",
							"value": {
								"value": "@utcNow('yyyy-MM-dd')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Radar"
				},
				"annotations": [],
				"lastPublishTime": "2024-07-01T09:10:05Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Insert_ExchequerCompanyAccess')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Inserts the data from the Exported report into AH2 Avery Audit.ExchequerCompanyAccess",
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CompanyCode",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CompanyCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CompanyName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CompanyName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "UserID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "UserName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ReportDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_PolestarStorageAcc_Exchequer_CSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Audit",
									"Table": "ExchequerCompanyAccess"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Exchequer/Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-06-27T11:33:14Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_JobRoles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT ID\n      ,Job_Code\n      ,ISNULL(Job_Category, '') AS JobCategory\n      ,ISNULL(job_cat2, '') AS JobCategory2\n      ,ISNULL(Description, '') AS JobDesctiption\n      ,ISNULL(SupportType, '') AS SupportType\n  FROM dbo.WeeklyHrs_Cat\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "SET IDENTITY_INSERT Avery.JobRole ON ",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "JobRoleID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Job_Code",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "JobCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "JobCategory",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "JobCategory",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "JobCategory2",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "JobCategory2",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "JobDesctiption",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "JobDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SupportType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SupportType",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH1_Avery_Homes",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "Avery",
									"Table": "JobRole"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Avery/Children Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2024-08-05T09:36:07Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/xPL_MCM_GetData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get MCM Data",
						"description": "Get the MCM data via Azure function",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "www.test.co.uk"
						}
					},
					{
						"name": "AZ Func Results",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get MCM Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "MCM_Json_Data",
							"value": {
								"value": "@activity('Get MCM Data').output.response",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Write to text file",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "VariableValue",
										"value": {
											"value": "@variables('MCM_Json_Data')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "VariableValue",
											"type": "String"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 1
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_MCM_Dummy_input",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_MCM_textFile",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Write to json file",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "AZ Func Results",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "VariableValue",
										"value": {
											"value": "@json(variables('MCM_Json_Data'))",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"filePattern": "arrayOfObjects"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "VariableValue",
											"type": "String"
										},
										"sink": {
											"path": "$['Column_1']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_MCM_Dummy_input",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_MCM_Json",
								"type": "DatasetReference",
								"parameters": {
									"FileType": "x"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"MCM_Json_Data": {
						"type": "String"
					}
				},
				"folder": {
					"name": "MCM"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_MCM_GetData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Call AZ Function",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set Az Func Code",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set MCM API Key",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_MCM_Data_Extract_CommunityId",
								"type": "DatasetReference",
								"parameters": {
									"MCM_endPoint": {
										"value": "@variables('MCMEndPoint')",
										"type": "Expression"
									},
									"MCM_api_key": {
										"value": "@variables('MCMAPIKey')",
										"type": "Expression"
									},
									"FunctionCode": {
										"value": "@variables('AzFuncCode')",
										"type": "Expression"
									},
									"CommunityId": "04b8b5cb-f680-4aa1-b3ec-12ddb04b8d7d"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_MCM_Json",
								"type": "DatasetReference",
								"parameters": {
									"FileType": {
										"value": "@variables('MCMEndPoint')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Get AZ Func Code",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set End Point",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://avery-adf-keyvault.vault.azure.net/secrets/MCMDataExtractAzFunc/9ad6bb869bce44809b76c700e88d789f?api-version=7.3",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Set Az Func Code",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get AZ Func Code",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "AzFuncCode",
							"value": {
								"value": "@activity('Get AZ Func Code').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get MCM API key",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set End Point",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://avery-adf-keyvault.vault.azure.net/secrets/MCMJonCrockettAPIKey/bde96b82a47a40628426ca459ee044ec?api-version=7.3",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "Set MCM API Key",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get MCM API key",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "MCMAPIKey",
							"value": {
								"value": "@activity('Get MCM API key').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set End Point",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "MCMEndPoint",
							"value": "serviceusers"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"AzFuncCode": {
						"type": "String"
					},
					"MCMAPIKey": {
						"type": "String"
					},
					"MCMEndPoint": {
						"type": "String"
					}
				},
				"folder": {
					"name": "MCM"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Polestar_Occupancy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy 90 Days Occupancy Data",
						"description": "Copies data from Polestar DB Occupancy table to TRANSFOR_DB OCCUPANCY_INCR table. Only the last 90 days of records",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set 90DayDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "Select * from dbo.Occupancy where CAST(CreateDateTime as date)>= '@{variables('DeleteDate')}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ABS_BILL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ABS_BILL",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "ADANAL_DEC",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ADANAL_DEC",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ADTYPE_DEC",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ADTYPE_DEC",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "AmendDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "AmendDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Cont_Ref",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Cont_Ref",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreateDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreateDateTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "DATE",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "EXTROOM",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "EXTROOM",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "HOME_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "INHOME",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "INHOME",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "LOC_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LOC_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "OCC_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "OCC_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RES_REF",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RES_REF",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ROOM",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "ROOM",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "RecType",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "RecType",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "TEMPDIS",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "TEMPDIS",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "VoidNo",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "VoidNo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "GROSSRATE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 12
										},
										"sink": {
											"name": "GROSSRATE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 12
										}
									},
									{
										"source": {
											"name": "ROOMRATE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 12
										},
										"sink": {
											"name": "ROOMRATE",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 12
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_Polestar",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_TRANSFORM_DB",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "STG",
									"Table": "OCCUPANCY_INCR"
								}
							}
						]
					},
					{
						"name": "Set 90DayDate",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "DeleteDate",
							"value": {
								"value": "@formatDateTime(addDays(utcNow(),-90),'yyyy-MM-dd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Add new records to Occupancy Table",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Copy 90 Days Occupancy Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AH2_TRANSFORM_DB",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "Delete from Transform_DB.STG.OCCUPANCY\nWHERE CreateDateTime>= '@{variables('DeleteDate')}'\n\nInsert into Transform_DB.STG.OCCUPANCY \nSelect * from Transform_DB.STG.OCCUPANCY_INCR",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"DeleteDate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Polestar ETL Process"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Pricing_CreateOrAlter_Views')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Executes procedures that create or alter views each day.",
				"activities": [
					{
						"name": "Attributes",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Pricing_vRoomAttributes",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Addons",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Attributes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Pricing_vRoomAddons",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Pricing"
				},
				"annotations": [],
				"lastPublishTime": "2024-07-19T13:59:58Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Radar_SQLTables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "For Each DB Item",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.DBItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Item",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"preCopyScript": {
												"value": "DROP TABLE IF EXISTS \n[@{item().destination.schema}].[@{item().destination.table}]",
												"type": "Expression"
											},
											"writeBehavior": {
												"value": "@item().copySink.writeBehavior",
												"type": "Expression"
											},
											"sqlWriterUseTableLock": {
												"value": "@item().copySink.sqlWriterUseTableLock",
												"type": "Expression"
											},
											"upsertSettings": {
												"useTempDB": true
											},
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Radar_SQL",
											"type": "DatasetReference",
											"parameters": {
												"Schema": {
													"value": "@item().source.schema",
													"type": "Expression"
												},
												"Table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_AH2_TRANSFORM_DB",
											"type": "DatasetReference",
											"parameters": {
												"Schema": "@item().destination.schema",
												"Table": {
													"value": "@item().destination.table",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Send Error Message",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "For Each DB Item",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "UT_Send_Email_Param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "jon.crockett@averyhealthcare.co.uk",
								"Message": "Pipeline failed",
								"Colour": "Red",
								"PipelineName": "@pipeline().Pipeline",
								"PipelineRunID": "@pipeline().RunId",
								"pStepFailed": "For Each DB Item"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"DBItems": {
						"type": "array",
						"defaultValue": [
							{
								"source": {
									"schema": "AccessControl",
									"table": "ObjectRuleSet"
								},
								"destination": {
									"schema": "Radar_AccessControl",
									"table": "ObjectRuleSet"
								},
								"copySink": {
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": true
								}
							},
							{
								"source": {
									"schema": "AccessControl",
									"table": "RuleSet"
								},
								"destination": {
									"schema": "Radar_AccessControl",
									"table": "RuleSet"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "AccessControl",
									"table": "RuleSetRule"
								},
								"destination": {
									"schema": "Radar_AccessControl",
									"table": "RuleSetRule"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Actions",
									"table": "Action"
								},
								"destination": {
									"schema": "Radar_Actions",
									"table": "Action"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Actions",
									"table": "ActionObjectLink"
								},
								"destination": {
									"schema": "Radar_Actions",
									"table": "ActionObjectLink"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Actions",
									"table": "ActionPlanItem"
								},
								"destination": {
									"schema": "Radar_Actions",
									"table": "ActionPlanItem"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Actions",
									"table": "ActionPlanTag"
								},
								"destination": {
									"schema": "Radar_Actions",
									"table": "ActionPlanTag"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Actions",
									"table": "ActionPlanTags"
								},
								"destination": {
									"schema": "Radar_Actions",
									"table": "ActionPlanTags"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Actions",
									"table": "Control"
								},
								"destination": {
									"schema": "Radar_Actions",
									"table": "Control"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Actions",
									"table": "ScheduledTask"
								},
								"destination": {
									"schema": "Radar_Actions",
									"table": "ScheduledTask"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Actions",
									"table": "ScheduledTaskCategory"
								},
								"destination": {
									"schema": "Radar_Actions",
									"table": "ScheduledTaskCategory"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Actions",
									"table": "ScheduledTaskTag"
								},
								"destination": {
									"schema": "Radar_Actions",
									"table": "ScheduledTaskTag"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Actions",
									"table": "ScheduledTaskTags"
								},
								"destination": {
									"schema": "Radar_Actions",
									"table": "ScheduledTaskTags"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Actions",
									"table": "Update"
								},
								"destination": {
									"schema": "Radar_Actions",
									"table": "Update"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Analytics",
									"table": "FormTag"
								},
								"destination": {
									"schema": "Radar_Analytics",
									"table": "FormTag"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Audit",
									"table": "Comment"
								},
								"destination": {
									"schema": "Radar_Audit",
									"table": "Comment"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Audit",
									"table": "DeviceRegistration"
								},
								"destination": {
									"schema": "Radar_Audit",
									"table": "DeviceRegistration"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Audit",
									"table": "EvidenceActionPlanItem"
								},
								"destination": {
									"schema": "Radar_Audit",
									"table": "EvidenceActionPlanItem"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Audit",
									"table": "EvidenceAttachment"
								},
								"destination": {
									"schema": "Radar_Audit",
									"table": "EvidenceAttachment"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Audit",
									"table": "EvidenceComment"
								},
								"destination": {
									"schema": "Radar_Audit",
									"table": "EvidenceComment"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Audit",
									"table": "Outcome"
								},
								"destination": {
									"schema": "Radar_Audit",
									"table": "Outcome"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Audit",
									"table": "OutcomeRequirement"
								},
								"destination": {
									"schema": "Radar_Audit",
									"table": "OutcomeRequirement"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Audit",
									"table": "OutcomeRequirementTemplate"
								},
								"destination": {
									"schema": "Radar_Audit",
									"table": "OutcomeRequirementTemplate"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Audit",
									"table": "OutcomeTemplate"
								},
								"destination": {
									"schema": "Radar_Audit",
									"table": "OutcomeTemplate"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Audit",
									"table": "RequirementEvidence"
								},
								"destination": {
									"schema": "Radar_Audit",
									"table": "RequirementEvidence"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Audit",
									"table": "RequirementEvidenceTemplate"
								},
								"destination": {
									"schema": "Radar_Audit",
									"table": "RequirementEvidenceTemplate"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Audit",
									"table": "ScheduledAudit"
								},
								"destination": {
									"schema": "Radar_Audit",
									"table": "ScheduledAudit"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Audit",
									"table": "Template"
								},
								"destination": {
									"schema": "Radar_Audit",
									"table": "Template"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Audit",
									"table": "Type"
								},
								"destination": {
									"schema": "Radar_Audit",
									"table": "Type"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Audit",
									"table": "TypeThreshold"
								},
								"destination": {
									"schema": "Radar_Audit",
									"table": "TypeThreshold"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Audits",
									"table": "Instance"
								},
								"destination": {
									"schema": "Radar_Audits",
									"table": "Instance"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Audits",
									"table": "InstanceSection"
								},
								"destination": {
									"schema": "Radar_Audits",
									"table": "InstanceSection"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Audits",
									"table": "InstanceSectionResponse"
								},
								"destination": {
									"schema": "Radar_Audits",
									"table": "InstanceSectionResponse"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Audits",
									"table": "Schedule"
								},
								"destination": {
									"schema": "Radar_Audits",
									"table": "Schedule"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Audits",
									"table": "ScheduleLocation"
								},
								"destination": {
									"schema": "Radar_Audits",
									"table": "ScheduleLocation"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Audits",
									"table": "ScheduleWorkflow"
								},
								"destination": {
									"schema": "Radar_Audits",
									"table": "ScheduleWorkflow"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Audits",
									"table": "Template"
								},
								"destination": {
									"schema": "Radar_Audits",
									"table": "Template"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Audits",
									"table": "Type"
								},
								"destination": {
									"schema": "Radar_Audits",
									"table": "Type"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Audits",
									"table": "TypeThreshold"
								},
								"destination": {
									"schema": "Radar_Audits",
									"table": "TypeThreshold"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Compliance",
									"table": "RecordRequirement"
								},
								"destination": {
									"schema": "Radar_Compliance",
									"table": "RecordRequirement"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Compliance",
									"table": "RecordVersion"
								},
								"destination": {
									"schema": "Radar_Compliance",
									"table": "RecordVersion"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Compliance",
									"table": "RequirementType"
								},
								"destination": {
									"schema": "Radar_Compliance",
									"table": "RequirementType"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Compliance",
									"table": "RequirementTypeRole"
								},
								"destination": {
									"schema": "Radar_Compliance",
									"table": "RequirementTypeRole"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Compliance",
									"table": "RequirementTypeSchedule"
								},
								"destination": {
									"schema": "Radar_Compliance",
									"table": "RequirementTypeSchedule"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Compliance",
									"table": "RequirementTypeUser"
								},
								"destination": {
									"schema": "Radar_Compliance",
									"table": "RequirementTypeUser"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "DiscardLogging",
									"table": "Report"
								},
								"destination": {
									"schema": "Radar_DiscardLogging",
									"table": "Report"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "DocumentManagement",
									"table": "Document"
								},
								"destination": {
									"schema": "Radar_DocumentManagement",
									"table": "Document"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "DocumentManagement",
									"table": "DocumentTags"
								},
								"destination": {
									"schema": "Radar_DocumentManagement",
									"table": "DocumentTags"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "DocumentManagement",
									"table": "DocumentVersion"
								},
								"destination": {
									"schema": "Radar_DocumentManagement",
									"table": "DocumentVersion"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "DocumentManagement",
									"table": "DocumentVersionDownload"
								},
								"destination": {
									"schema": "Radar_DocumentManagement",
									"table": "DocumentVersionDownload"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "DocumentManagement",
									"table": "DocumentVersionHistory"
								},
								"destination": {
									"schema": "Radar_DocumentManagement",
									"table": "DocumentVersionHistory"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "DocumentManagement",
									"table": "Folder"
								},
								"destination": {
									"schema": "Radar_DocumentManagement",
									"table": "Folder"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "DocumentManagement",
									"table": "Tag"
								},
								"destination": {
									"schema": "Radar_DocumentManagement",
									"table": "Tag"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "QueryBuilder",
									"table": "SavedQuery"
								},
								"destination": {
									"schema": "Radar_QueryBuilder",
									"table": "SavedQuery"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "QueryBuilder",
									"table": "SavedQueryFolder"
								},
								"destination": {
									"schema": "Radar_QueryBuilder",
									"table": "SavedQueryFolder"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "ActivityLog"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "ActivityLog"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "Attachment"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "Attachment"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "AttachmentDownload"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "AttachmentDownload"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "Audit"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "Audit"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "CustomDataItem"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "CustomDataItem"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "CustomDataItemLocation"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "CustomDataItemLocation"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "CustomDataType"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "CustomDataType"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "CustomEntityInstance"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "CustomEntityInstance"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "CustomEntityInstanceLocation"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "CustomEntityInstanceLocation"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "CustomEntityInstanceValues"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "CustomEntityInstanceValues"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "CustomEntityType"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "CustomEntityType"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "CustomEntityTypeField"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "CustomEntityTypeField"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "Department"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "Department"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "DomainObjectAccessControlRule"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "DomainObjectAccessControlRule"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "EventAccessGroupRole"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "EventAccessGroupRole"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "EventAccessGroups"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "EventAccessGroups"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "EventCategory"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "EventCategory"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "EventTypeCategoryLink"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "EventTypeCategoryLink"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "IntegrationLink"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "IntegrationLink"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "ItemReference"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "ItemReference"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "JobLog"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "JobLog"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "LastUpdated"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "LastUpdated"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "Location"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "Location"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "LocationLocationType"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "LocationLocationType"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "LocationType"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "LocationType"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "LocationUser"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "LocationUser"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "Lookup"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "Lookup"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "Module"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "Module"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "Notice"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "Notice"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "NoticeAttachment"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "NoticeAttachment"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "NotificationHistory"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "NotificationHistory"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "NotificationQueue"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "NotificationQueue"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "Organisation"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "Organisation"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "PendingItem"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "PendingItem"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "Permission"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "Permission"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "PsimsSubmission"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "PsimsSubmission"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "Region"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "Region"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "Role"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "Role"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "RoleDashboardPermission"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "RoleDashboardPermission"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "RolePermission"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "RolePermission"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "ServiceUser"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "ServiceUser"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "ServiceUserLocation"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "ServiceUserLocation"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "Tag"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "Tag"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "TagLink"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "TagLink"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "User"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "User"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "UserComment"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "UserComment"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "UserDepartment"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "UserDepartment"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "UserNotice"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "UserNotice"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "UserOutOfOffice"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "UserOutOfOffice"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "UserPreference"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "UserPreference"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Radar",
									"table": "UserRole"
								},
								"destination": {
									"schema": "Radar_Radar",
									"table": "UserRole"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "RiskManagement",
									"table": "ImpactCategory"
								},
								"destination": {
									"schema": "Radar_RiskManagement",
									"table": "ImpactCategory"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "RiskManagement",
									"table": "ImpactDescriptor"
								},
								"destination": {
									"schema": "Radar_RiskManagement",
									"table": "ImpactDescriptor"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "RiskManagement",
									"table": "Incident"
								},
								"destination": {
									"schema": "Radar_RiskManagement",
									"table": "Incident"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "RiskManagement",
									"table": "IncidentRequiredFormTime"
								},
								"destination": {
									"schema": "Radar_RiskManagement",
									"table": "IncidentRequiredFormTime"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "RiskManagement",
									"table": "IncidentSubType"
								},
								"destination": {
									"schema": "Radar_RiskManagement",
									"table": "IncidentSubType"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "RiskManagement",
									"table": "IncidentType"
								},
								"destination": {
									"schema": "Radar_RiskManagement",
									"table": "IncidentType"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "RiskManagement",
									"table": "IncidentTypeLocationType"
								},
								"destination": {
									"schema": "Radar_RiskManagement",
									"table": "IncidentTypeLocationType"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "RiskManagement",
									"table": "LikelihoodCategory"
								},
								"destination": {
									"schema": "Radar_RiskManagement",
									"table": "LikelihoodCategory"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "RiskManagement",
									"table": "LikelihoodDescriptor"
								},
								"destination": {
									"schema": "Radar_RiskManagement",
									"table": "LikelihoodDescriptor"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "RiskManagement",
									"table": "LinkedItem"
								},
								"destination": {
									"schema": "Radar_RiskManagement",
									"table": "LinkedItem"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "RiskManagement",
									"table": "Risk"
								},
								"destination": {
									"schema": "Radar_RiskManagement",
									"table": "Risk"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "RiskManagement",
									"table": "RiskCategory"
								},
								"destination": {
									"schema": "Radar_RiskManagement",
									"table": "RiskCategory"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "RiskManagement",
									"table": "RiskReviewUpdate"
								},
								"destination": {
									"schema": "Radar_RiskManagement",
									"table": "RiskReviewUpdate"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "RiskManagement",
									"table": "ViewExceptionEvent"
								},
								"destination": {
									"schema": "Radar_RiskManagement",
									"table": "ViewExceptionEvent"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "RiskManagement",
									"table": "ViewExceptionEventRole"
								},
								"destination": {
									"schema": "Radar_RiskManagement",
									"table": "ViewExceptionEventRole"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "RootCauseAnalysis",
									"table": "Cause"
								},
								"destination": {
									"schema": "Radar_RootCauseAnalysis",
									"table": "Cause"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "RootCauseAnalysis",
									"table": "ContributingFactor"
								},
								"destination": {
									"schema": "Radar_RootCauseAnalysis",
									"table": "ContributingFactor"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "RootCauseAnalysis",
									"table": "ContributingFactorCategory"
								},
								"destination": {
									"schema": "Radar_RootCauseAnalysis",
									"table": "ContributingFactorCategory"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "RootCauseAnalysis",
									"table": "InvestigationEvent"
								},
								"destination": {
									"schema": "Radar_RootCauseAnalysis",
									"table": "InvestigationEvent"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Templates",
									"table": "Bodymap"
								},
								"destination": {
									"schema": "Radar_Templates",
									"table": "Bodymap"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Templates",
									"table": "FormTemplate"
								},
								"destination": {
									"schema": "Radar_Templates",
									"table": "FormTemplate"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Templates",
									"table": "FormTemplateInstance"
								},
								"destination": {
									"schema": "Radar_Templates",
									"table": "FormTemplateInstance"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Templates",
									"table": "FormTemplateInstanceValue"
								},
								"destination": {
									"schema": "Radar_Templates",
									"table": "FormTemplateInstanceValue"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Templates",
									"table": "FormTemplateInstanceValueExtendedData"
								},
								"destination": {
									"schema": "Radar_Templates",
									"table": "FormTemplateInstanceValueExtendedData"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Templates",
									"table": "FormTemplateTag"
								},
								"destination": {
									"schema": "Radar_Templates",
									"table": "FormTemplateTag"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Workflow",
									"table": "Definition"
								},
								"destination": {
									"schema": "Radar_Workflow",
									"table": "Definition"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Workflow",
									"table": "Dependency"
								},
								"destination": {
									"schema": "Radar_Workflow",
									"table": "Dependency"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Workflow",
									"table": "Instance"
								},
								"destination": {
									"schema": "Radar_Workflow",
									"table": "Instance"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Workflow",
									"table": "Selector"
								},
								"destination": {
									"schema": "Radar_Workflow",
									"table": "Selector"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Workflow",
									"table": "Trigger"
								},
								"destination": {
									"schema": "Radar_Workflow",
									"table": "Trigger"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							},
							{
								"source": {
									"schema": "Workflow",
									"table": "UserTask"
								},
								"destination": {
									"schema": "Radar_Workflow",
									"table": "UserTask"
								},
								"copySink": {
									"writeBehavior": null,
									"sqlWriterUseTableLock": null
								}
							}
						]
					}
				},
				"folder": {
					"name": "Radar"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Res_Forms')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Res Forms Data",
						"description": "AH1 Avery - AH2 YardiStage",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "SET IDENTITY_INSERT dbo.Res_Forms ON",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "ID",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "res_no",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "res_no",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "forename",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "forename",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "surname",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "surname",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "intranet",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "intranet",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "change_date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "change_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "admitted_from",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "admitted_from",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "tested_prior_last",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "tested_prior_last",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "tested_date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "tested_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "tested_where",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "tested_where",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "tested_result",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "tested_result",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "symptomatic",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "symptomatic",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "symptomatic_date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "symptomatic_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "isolation_Date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "isolation_Date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "isolation_end_date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "isolation_end_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "days_isolated",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "days_isolated",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "protocol_followed",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "protocol_followed",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "hospital_prior",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "hospital_prior",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Hospital_lastdate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "Hospital_lastdate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "hospital_duration",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "hospital_duration",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "hospital_tested",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "hospital_tested",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "hospital_tested_date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "hospital_tested_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "hospital_rest_result",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "hospital_rest_result",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "form_type",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "form_type",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "status",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "status",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "room_no",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "room_no",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "funding_change",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "funding_change",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "dilaps_charge",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "dilaps_charge",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "comp_by",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "comp_by",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "comp_date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "comp_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "SL_Chk_by",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "SL_Chk_by",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "SL_chk_date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "SL_chk_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "discharge_reason",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "discharge_reason",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "comments",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "comments",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "dob",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "dob",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "SL_comments",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "SL_comments",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "NHS_No",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "NHS_No",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Nurs_res",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Nurs_res",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "Resp_Perm",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Resp_Perm",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "disch_date",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "disch_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "paymentonadm",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										},
										"sink": {
											"name": "paymentonadm",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "NSHIDno",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "NSHIDno",
											"type": "String",
											"physicalType": "nchar"
										}
									},
									{
										"source": {
											"name": "fee",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 7
										},
										"sink": {
											"name": "fee",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 7
										}
									},
									{
										"source": {
											"name": "Date_Complete",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										},
										"sink": {
											"name": "Date_Complete",
											"type": "DateTimeOffset",
											"physicalType": "datetimeoffset"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH1_Avery",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "Res_Forms"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "Res_Forms"
								}
							}
						]
					},
					{
						"name": "SET IDENTITY INSERT OF",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Copy Res Forms Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AH2_YardiStage",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "SET IDENTITY_INSERT dbo.Res_Forms OFF"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Yardi/YardiStage"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}