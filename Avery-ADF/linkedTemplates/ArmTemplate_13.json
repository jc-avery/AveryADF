{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Avery-ADF"
		},
		"SCH_EveryDay_1am_properties_PL_Radar_SQLTables_parameters_DBItems": {
			"type": "array",
			"defaultValue": [
				{
					"source": {
						"schema": "AccessControl",
						"table": "ObjectRuleSet"
					},
					"destination": {
						"schema": "Radar_AccessControl",
						"table": "ObjectRuleSet"
					},
					"copySink": {
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": true
					}
				},
				{
					"source": {
						"schema": "AccessControl",
						"table": "RuleSet"
					},
					"destination": {
						"schema": "Radar_AccessControl",
						"table": "RuleSet"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "AccessControl",
						"table": "RuleSetRule"
					},
					"destination": {
						"schema": "Radar_AccessControl",
						"table": "RuleSetRule"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Actions",
						"table": "Action"
					},
					"destination": {
						"schema": "Radar_Actions",
						"table": "Action"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Actions",
						"table": "ActionObjectLink"
					},
					"destination": {
						"schema": "Radar_Actions",
						"table": "ActionObjectLink"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Actions",
						"table": "ActionPlanItem"
					},
					"destination": {
						"schema": "Radar_Actions",
						"table": "ActionPlanItem"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Actions",
						"table": "ActionPlanTag"
					},
					"destination": {
						"schema": "Radar_Actions",
						"table": "ActionPlanTag"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Actions",
						"table": "ActionPlanTags"
					},
					"destination": {
						"schema": "Radar_Actions",
						"table": "ActionPlanTags"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Actions",
						"table": "Control"
					},
					"destination": {
						"schema": "Radar_Actions",
						"table": "Control"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Actions",
						"table": "ScheduledTask"
					},
					"destination": {
						"schema": "Radar_Actions",
						"table": "ScheduledTask"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Actions",
						"table": "ScheduledTaskCategory"
					},
					"destination": {
						"schema": "Radar_Actions",
						"table": "ScheduledTaskCategory"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Actions",
						"table": "ScheduledTaskTag"
					},
					"destination": {
						"schema": "Radar_Actions",
						"table": "ScheduledTaskTag"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Actions",
						"table": "ScheduledTaskTags"
					},
					"destination": {
						"schema": "Radar_Actions",
						"table": "ScheduledTaskTags"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Actions",
						"table": "Update"
					},
					"destination": {
						"schema": "Radar_Actions",
						"table": "Update"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Analytics",
						"table": "FormTag"
					},
					"destination": {
						"schema": "Radar_Analytics",
						"table": "FormTag"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audit",
						"table": "Comment"
					},
					"destination": {
						"schema": "Radar_Audit",
						"table": "Comment"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audit",
						"table": "DeviceRegistration"
					},
					"destination": {
						"schema": "Radar_Audit",
						"table": "DeviceRegistration"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audit",
						"table": "EvidenceActionPlanItem"
					},
					"destination": {
						"schema": "Radar_Audit",
						"table": "EvidenceActionPlanItem"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audit",
						"table": "EvidenceAttachment"
					},
					"destination": {
						"schema": "Radar_Audit",
						"table": "EvidenceAttachment"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audit",
						"table": "EvidenceComment"
					},
					"destination": {
						"schema": "Radar_Audit",
						"table": "EvidenceComment"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audit",
						"table": "Outcome"
					},
					"destination": {
						"schema": "Radar_Audit",
						"table": "Outcome"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audit",
						"table": "OutcomeRequirement"
					},
					"destination": {
						"schema": "Radar_Audit",
						"table": "OutcomeRequirement"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audit",
						"table": "OutcomeRequirementTemplate"
					},
					"destination": {
						"schema": "Radar_Audit",
						"table": "OutcomeRequirementTemplate"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audit",
						"table": "OutcomeTemplate"
					},
					"destination": {
						"schema": "Radar_Audit",
						"table": "OutcomeTemplate"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audit",
						"table": "RequirementEvidence"
					},
					"destination": {
						"schema": "Radar_Audit",
						"table": "RequirementEvidence"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audit",
						"table": "RequirementEvidenceTemplate"
					},
					"destination": {
						"schema": "Radar_Audit",
						"table": "RequirementEvidenceTemplate"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audit",
						"table": "ScheduledAudit"
					},
					"destination": {
						"schema": "Radar_Audit",
						"table": "ScheduledAudit"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audit",
						"table": "Template"
					},
					"destination": {
						"schema": "Radar_Audit",
						"table": "Template"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audit",
						"table": "Type"
					},
					"destination": {
						"schema": "Radar_Audit",
						"table": "Type"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audit",
						"table": "TypeThreshold"
					},
					"destination": {
						"schema": "Radar_Audit",
						"table": "TypeThreshold"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audits",
						"table": "Instance"
					},
					"destination": {
						"schema": "Radar_Audits",
						"table": "Instance"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audits",
						"table": "InstanceSection"
					},
					"destination": {
						"schema": "Radar_Audits",
						"table": "InstanceSection"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audits",
						"table": "InstanceSectionResponse"
					},
					"destination": {
						"schema": "Radar_Audits",
						"table": "InstanceSectionResponse"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audits",
						"table": "Schedule"
					},
					"destination": {
						"schema": "Radar_Audits",
						"table": "Schedule"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audits",
						"table": "ScheduleLocation"
					},
					"destination": {
						"schema": "Radar_Audits",
						"table": "ScheduleLocation"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audits",
						"table": "ScheduleWorkflow"
					},
					"destination": {
						"schema": "Radar_Audits",
						"table": "ScheduleWorkflow"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audits",
						"table": "Template"
					},
					"destination": {
						"schema": "Radar_Audits",
						"table": "Template"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audits",
						"table": "Type"
					},
					"destination": {
						"schema": "Radar_Audits",
						"table": "Type"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Audits",
						"table": "TypeThreshold"
					},
					"destination": {
						"schema": "Radar_Audits",
						"table": "TypeThreshold"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Compliance",
						"table": "RecordRequirement"
					},
					"destination": {
						"schema": "Radar_Compliance",
						"table": "RecordRequirement"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Compliance",
						"table": "RecordVersion"
					},
					"destination": {
						"schema": "Radar_Compliance",
						"table": "RecordVersion"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Compliance",
						"table": "RequirementType"
					},
					"destination": {
						"schema": "Radar_Compliance",
						"table": "RequirementType"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Compliance",
						"table": "RequirementTypeRole"
					},
					"destination": {
						"schema": "Radar_Compliance",
						"table": "RequirementTypeRole"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Compliance",
						"table": "RequirementTypeSchedule"
					},
					"destination": {
						"schema": "Radar_Compliance",
						"table": "RequirementTypeSchedule"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Compliance",
						"table": "RequirementTypeUser"
					},
					"destination": {
						"schema": "Radar_Compliance",
						"table": "RequirementTypeUser"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "DiscardLogging",
						"table": "Report"
					},
					"destination": {
						"schema": "Radar_DiscardLogging",
						"table": "Report"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "DocumentManagement",
						"table": "Document"
					},
					"destination": {
						"schema": "Radar_DocumentManagement",
						"table": "Document"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "DocumentManagement",
						"table": "DocumentTags"
					},
					"destination": {
						"schema": "Radar_DocumentManagement",
						"table": "DocumentTags"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "DocumentManagement",
						"table": "DocumentVersion"
					},
					"destination": {
						"schema": "Radar_DocumentManagement",
						"table": "DocumentVersion"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "DocumentManagement",
						"table": "DocumentVersionDownload"
					},
					"destination": {
						"schema": "Radar_DocumentManagement",
						"table": "DocumentVersionDownload"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "DocumentManagement",
						"table": "DocumentVersionHistory"
					},
					"destination": {
						"schema": "Radar_DocumentManagement",
						"table": "DocumentVersionHistory"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "DocumentManagement",
						"table": "Folder"
					},
					"destination": {
						"schema": "Radar_DocumentManagement",
						"table": "Folder"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "DocumentManagement",
						"table": "Tag"
					},
					"destination": {
						"schema": "Radar_DocumentManagement",
						"table": "Tag"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "QueryBuilder",
						"table": "SavedQuery"
					},
					"destination": {
						"schema": "Radar_QueryBuilder",
						"table": "SavedQuery"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "QueryBuilder",
						"table": "SavedQueryFolder"
					},
					"destination": {
						"schema": "Radar_QueryBuilder",
						"table": "SavedQueryFolder"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "ActivityLog"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "ActivityLog"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "Attachment"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "Attachment"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "AttachmentDownload"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "AttachmentDownload"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "Audit"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "Audit"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "CustomDataItem"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "CustomDataItem"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "CustomDataItemLocation"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "CustomDataItemLocation"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "CustomDataType"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "CustomDataType"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "CustomEntityInstance"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "CustomEntityInstance"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "CustomEntityInstanceLocation"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "CustomEntityInstanceLocation"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "CustomEntityInstanceValues"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "CustomEntityInstanceValues"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "CustomEntityType"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "CustomEntityType"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "CustomEntityTypeField"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "CustomEntityTypeField"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "Department"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "Department"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "DomainObjectAccessControlRule"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "DomainObjectAccessControlRule"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "EventAccessGroupRole"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "EventAccessGroupRole"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "EventAccessGroups"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "EventAccessGroups"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "EventCategory"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "EventCategory"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "EventTypeCategoryLink"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "EventTypeCategoryLink"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "IntegrationLink"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "IntegrationLink"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "ItemReference"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "ItemReference"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "JobLog"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "JobLog"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "LastUpdated"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "LastUpdated"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "Location"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "Location"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "LocationLocationType"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "LocationLocationType"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "LocationType"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "LocationType"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "LocationUser"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "LocationUser"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "Lookup"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "Lookup"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "Module"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "Module"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "Notice"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "Notice"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "NoticeAttachment"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "NoticeAttachment"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "NotificationHistory"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "NotificationHistory"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "NotificationQueue"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "NotificationQueue"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "Organisation"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "Organisation"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "PendingItem"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "PendingItem"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "Permission"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "Permission"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "PsimsSubmission"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "PsimsSubmission"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "Region"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "Region"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "Role"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "Role"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "RoleDashboardPermission"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "RoleDashboardPermission"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "RolePermission"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "RolePermission"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "ServiceUser"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "ServiceUser"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "ServiceUserLocation"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "ServiceUserLocation"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "Tag"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "Tag"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "TagLink"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "TagLink"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "User"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "User"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "UserComment"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "UserComment"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "UserDepartment"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "UserDepartment"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "UserNotice"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "UserNotice"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "UserOutOfOffice"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "UserOutOfOffice"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "UserPreference"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "UserPreference"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Radar",
						"table": "UserRole"
					},
					"destination": {
						"schema": "Radar_Radar",
						"table": "UserRole"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RiskManagement",
						"table": "ImpactCategory"
					},
					"destination": {
						"schema": "Radar_RiskManagement",
						"table": "ImpactCategory"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RiskManagement",
						"table": "ImpactDescriptor"
					},
					"destination": {
						"schema": "Radar_RiskManagement",
						"table": "ImpactDescriptor"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RiskManagement",
						"table": "Incident"
					},
					"destination": {
						"schema": "Radar_RiskManagement",
						"table": "Incident"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RiskManagement",
						"table": "IncidentRequiredFormTime"
					},
					"destination": {
						"schema": "Radar_RiskManagement",
						"table": "IncidentRequiredFormTime"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RiskManagement",
						"table": "IncidentSubType"
					},
					"destination": {
						"schema": "Radar_RiskManagement",
						"table": "IncidentSubType"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RiskManagement",
						"table": "IncidentType"
					},
					"destination": {
						"schema": "Radar_RiskManagement",
						"table": "IncidentType"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RiskManagement",
						"table": "IncidentTypeLocationType"
					},
					"destination": {
						"schema": "Radar_RiskManagement",
						"table": "IncidentTypeLocationType"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RiskManagement",
						"table": "LikelihoodCategory"
					},
					"destination": {
						"schema": "Radar_RiskManagement",
						"table": "LikelihoodCategory"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RiskManagement",
						"table": "LikelihoodDescriptor"
					},
					"destination": {
						"schema": "Radar_RiskManagement",
						"table": "LikelihoodDescriptor"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RiskManagement",
						"table": "LinkedItem"
					},
					"destination": {
						"schema": "Radar_RiskManagement",
						"table": "LinkedItem"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RiskManagement",
						"table": "Risk"
					},
					"destination": {
						"schema": "Radar_RiskManagement",
						"table": "Risk"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RiskManagement",
						"table": "RiskCategory"
					},
					"destination": {
						"schema": "Radar_RiskManagement",
						"table": "RiskCategory"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RiskManagement",
						"table": "RiskReviewUpdate"
					},
					"destination": {
						"schema": "Radar_RiskManagement",
						"table": "RiskReviewUpdate"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RiskManagement",
						"table": "ViewExceptionEvent"
					},
					"destination": {
						"schema": "Radar_RiskManagement",
						"table": "ViewExceptionEvent"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RiskManagement",
						"table": "ViewExceptionEventRole"
					},
					"destination": {
						"schema": "Radar_RiskManagement",
						"table": "ViewExceptionEventRole"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RootCauseAnalysis",
						"table": "Cause"
					},
					"destination": {
						"schema": "Radar_RootCauseAnalysis",
						"table": "Cause"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RootCauseAnalysis",
						"table": "ContributingFactor"
					},
					"destination": {
						"schema": "Radar_RootCauseAnalysis",
						"table": "ContributingFactor"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RootCauseAnalysis",
						"table": "ContributingFactorCategory"
					},
					"destination": {
						"schema": "Radar_RootCauseAnalysis",
						"table": "ContributingFactorCategory"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "RootCauseAnalysis",
						"table": "InvestigationEvent"
					},
					"destination": {
						"schema": "Radar_RootCauseAnalysis",
						"table": "InvestigationEvent"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Templates",
						"table": "Bodymap"
					},
					"destination": {
						"schema": "Radar_Templates",
						"table": "Bodymap"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Templates",
						"table": "FormTemplate"
					},
					"destination": {
						"schema": "Radar_Templates",
						"table": "FormTemplate"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Templates",
						"table": "FormTemplateInstance"
					},
					"destination": {
						"schema": "Radar_Templates",
						"table": "FormTemplateInstance"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Templates",
						"table": "FormTemplateInstanceValue"
					},
					"destination": {
						"schema": "Radar_Templates",
						"table": "FormTemplateInstanceValue"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Templates",
						"table": "FormTemplateInstanceValueExtendedData"
					},
					"destination": {
						"schema": "Radar_Templates",
						"table": "FormTemplateInstanceValueExtendedData"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Templates",
						"table": "FormTemplateTag"
					},
					"destination": {
						"schema": "Radar_Templates",
						"table": "FormTemplateTag"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Workflow",
						"table": "Definition"
					},
					"destination": {
						"schema": "Radar_Workflow",
						"table": "Definition"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Workflow",
						"table": "Dependency"
					},
					"destination": {
						"schema": "Radar_Workflow",
						"table": "Dependency"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Workflow",
						"table": "Instance"
					},
					"destination": {
						"schema": "Radar_Workflow",
						"table": "Instance"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Workflow",
						"table": "Selector"
					},
					"destination": {
						"schema": "Radar_Workflow",
						"table": "Selector"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Workflow",
						"table": "Trigger"
					},
					"destination": {
						"schema": "Radar_Workflow",
						"table": "Trigger"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				},
				{
					"source": {
						"schema": "Workflow",
						"table": "UserTask"
					},
					"destination": {
						"schema": "Radar_Workflow",
						"table": "UserTask"
					},
					"copySink": {
						"writeBehavior": null,
						"sqlWriterUseTableLock": null
					}
				}
			]
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL_Yardi_Vendors')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Export Vendors to YardiStage",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Clear YardiStage Vendor Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT 'XRR227' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XRR227.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XRR227.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XAWT01' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XAWT01.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XAWT01.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XKR117' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XKR117.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XKR117.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XWWT03' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XWWT03.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XWWT03.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XLR118' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XLR118.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XLR118.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'KNOW01' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM KNOW01.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            KNOW01.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'KNOW03' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM KNOW03.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            KNOW03.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'BOUR01' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM BOUR01.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            BOUR01.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'ZCR229' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM ZCR229.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            ZCR229.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'WTRB02' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM WTRB02.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            WTRB02.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'WTRB04' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM WTRB04.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            WTRB04.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XGR225' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XGR225.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XGR225.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XBR120' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XBR120.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XBR120.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XFR121' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XFR121.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XFR121.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XOWT04' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XOWT04.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XOWT04.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XXR228' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XXR228.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XXR228.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'ZBWT05' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM ZBWT05.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            ZBWT05.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'WTRB07' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM WTRB07.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            WTRB07.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XPWT06' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XPWT06.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XPWT06.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XQR119' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XQR119.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XQR119.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XCWT07' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XCWT07.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XCWT07.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XUWT08' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XUWT08.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XUWT08.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'ZAWT09' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM ZAWT09.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            ZAWT09.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'WTRB12' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM WTRB12.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            WTRB12.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'WTRB01' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM WTRB01.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            WTRB01.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XDWT10' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XDWT10.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XDWT10.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'WTRB05' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM WTRB05.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            WTRB05.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'KNOW02' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM KNOW02.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            KNOW02.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'WTRB03' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM WTRB03.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            WTRB03.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XER224' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XER224.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XER224.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'PEMB01' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM PEMB01.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            PEMB01.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XHWT11' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XHWT11.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XHWT11.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'SEVE01' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM SEVE01.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            SEVE01.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XIR226' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XIR226.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XIR226.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XSWT12' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XSWT12.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XSWT12.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XTWT02' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XTWT02.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XTWT02.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XYWT13' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XYWT13.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XYWT13.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'WTRB06' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM WTRB06.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            WTRB06.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XJWT14' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XJWT14.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XJWT14.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XMR122' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XMR122.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XMR122.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'WTRB11' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM WTRB11.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            WTRB11.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XZWT15' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XZWT15.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XZWT15.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XNR123' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XNR123.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XNR123.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate\n                \n                UNION ALL\nSELECT 'XVWT16' AS CompanyCode, \n                LastTransDate.tlLineDate AS LatestDate,\n                C.* \n                FROM XVWT16.CUSTSUPP AS C\n               \n                OUTER APPLY(\n\t\t            SELECT TOP 1\n\t\t\t            D.tlAcCode,\n\t\t\t            D.tlLineDate\n\t\t            FROM\n\t\t\t            XVWT16.DETAILS AS D\n\t\t            WHERE\n\t\t\t            D.tlAcCode = C.acCode COLLATE SQL_Latin1_General_CP1_CI_AS\n\t\t            ORDER BY\n\t\t\t            D.tlLineDate DESC\n\t            ) AS LastTransDate",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CompanyCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CompanyCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LatestDate",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LatestDate",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acCustSupp",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acCustSupp",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acCompany",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acCompany",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acArea",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acArea",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acAccType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acAccType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acStatementTo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acStatementTo",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acVATRegNo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acVATRegNo",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acAddressLine1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acAddressLine1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acAddressLine2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acAddressLine2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acAddressLine3",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acAddressLine3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acAddressLine4",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acAddressLine4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acAddressLine5",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acAddressLine5",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acDespAddr",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "acDespAddr",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "acDespAddressLine1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acDespAddressLine1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acDespAddressLine2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acDespAddressLine2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acDespAddressLine3",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acDespAddressLine3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acDespAddressLine4",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acDespAddressLine4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acDespAddressLine5",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acDespAddressLine5",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acContact",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acContact",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acPhone",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acPhone",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acFax",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acFax",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acTheirAcc",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acTheirAcc",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acOwnTradTerm",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "acOwnTradTerm",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "acTradeTerms1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acTradeTerms1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acTradeTerms2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acTradeTerms2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acCurrency",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acCurrency",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acVATCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acVATCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acPayTerms",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acPayTerms",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acCreditLimit",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "acCreditLimit",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "acDiscount",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "acDiscount",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "acCreditStatus",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acCreditStatus",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acCostCentre",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acCostCentre",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acDiscountBand",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acDiscountBand",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acOrderConsolidationMode",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acOrderConsolidationMode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acDefSettleDays",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acDefSettleDays",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acSpare5",
											"type": "Byte[]",
											"physicalType": "varbinary"
										},
										"sink": {
											"name": "acSpare5",
											"type": "Byte[]",
											"physicalType": "varbinary"
										}
									},
									{
										"source": {
											"name": "acBalance",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "acBalance",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "acDepartment",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acDepartment",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acECMember",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "acECMember",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "acNLineCount",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acNLineCount",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acStatement",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "acStatement",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "acSalesGL",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acSalesGL",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acLocation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acLocation",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acAccStatus",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acAccStatus",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acPayType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acPayType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acOldBankSort",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acOldBankSort",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acOldBankAcc",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acOldBankAcc",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acBankRef",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acBankRef",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acAvePay",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acAvePay",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acPhone2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acPhone2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acCOSGL",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acCOSGL",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acDrCrGL",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acDrCrGL",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acLastUsed",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acLastUsed",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acUserDef1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acUserDef1",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acUserDef2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acUserDef2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acInvoiceTo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acInvoiceTo",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acSOPAutoWOff",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "acSOPAutoWOff",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "acFormSet",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acFormSet",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acBookOrdVal",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "acBookOrdVal",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "acDirDebMode",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acDirDebMode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acCCStart",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acCCStart",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acCCEnd",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acCCEnd",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acCCName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acCCName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acCCNumber",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acCCNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acCCSwitch",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acCCSwitch",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acDefSettleDisc",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "acDefSettleDisc",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "acStateDeliveryMode",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acStateDeliveryMode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acSpare2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acSpare2",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acSendReader",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "acSendReader",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "acEBusPword",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acEBusPword",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acPostCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acPostCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acAltCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acAltCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acUseForEbus",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acUseForEbus",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acZIPAttachments",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acZIPAttachments",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acUserDef3",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acUserDef3",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acUserDef4",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acUserDef4",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acWebLiveCatalog",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acWebLiveCatalog",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acWebPrevCatalog",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acWebPrevCatalog",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acTimeStamp",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acTimeStamp",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acVATCountryCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acVATCountryCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acSSDDeliveryTerms",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acSSDDeliveryTerms",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acInclusiveVATCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acInclusiveVATCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acSSDModeOfTransport",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acSSDModeOfTransport",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acPrivateRec",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "acPrivateRec",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "acLastOperator",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acLastOperator",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acDocDeliveryMode",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acDocDeliveryMode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acSendHTML",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "acSendHTML",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "acEmailAddr",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acEmailAddr",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acOfficeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acOfficeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acDefTagNo",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acDefTagNo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acUserDef5",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acUserDef5",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acUserDef6",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acUserDef6",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acUserDef7",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acUserDef7",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acUserDef8",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acUserDef8",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acUserDef9",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acUserDef9",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acUserDef10",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acUserDef10",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acBankSortCode",
											"type": "Byte[]",
											"physicalType": "varbinary"
										},
										"sink": {
											"name": "acBankSortCode",
											"type": "Byte[]",
											"physicalType": "varbinary"
										}
									},
									{
										"source": {
											"name": "acBankAccountCode",
											"type": "Byte[]",
											"physicalType": "varbinary"
										},
										"sink": {
											"name": "acBankAccountCode",
											"type": "Byte[]",
											"physicalType": "varbinary"
										}
									},
									{
										"source": {
											"name": "acMandateID",
											"type": "Byte[]",
											"physicalType": "varbinary"
										},
										"sink": {
											"name": "acMandateID",
											"type": "Byte[]",
											"physicalType": "varbinary"
										}
									},
									{
										"source": {
											"name": "acMandateDate",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acMandateDate",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acDeliveryPostCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acDeliveryPostCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acSubType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acSubType",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acLongAcCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acLongAcCode",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acAllowOrderPayments",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "acAllowOrderPayments",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "acOrderPaymentsGLCode",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acOrderPaymentsGLCode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acCountry",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acCountry",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acDeliveryCountry",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acDeliveryCountry",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acPPDMode",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acPPDMode",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acDefaultToQR",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "acDefaultToQR",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "acTaxRegion",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acTaxRegion",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acAnonymisationStatus",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acAnonymisationStatus",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "acAnonymisedDate",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acAnonymisedDate",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acAnonymisedTime",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "acAnonymisedTime",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "acRCEndUser",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "acRCEndUser",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PositionId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PositionId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_Exchequer",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "ExchequerVendors"
								}
							}
						]
					},
					{
						"name": "Export Vendors",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Export Vendors to YardiStage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT \n    CompanyCode\n    ,LatestDate\n    ,acCode\n    ,acCustSupp\n    ,acCompany\n    ,acArea\n    ,acAccType\n    ,acStatementTo\n    ,acVATRegNo\n    ,acAddressLine1\n    ,acAddressLine2\n    ,acAddressLine3\n    ,acAddressLine4\n    ,acAddressLine5\n    ,acDespAddr\n    ,acDespAddressLine1\n    ,acDespAddressLine2\n    ,acDespAddressLine3\n    ,acDespAddressLine4\n    ,acDespAddressLine5\n    ,acContact\n    ,acPhone\n    ,acFax\n    ,acTheirAcc\n    ,acOwnTradTerm\n    ,acTradeTerms1\n    ,acTradeTerms2\n    ,acCurrency\n    ,acVATCode\n    ,acPayTerms\n    ,acCreditLimit\n    ,acDiscount\n    ,acCreditStatus\n    ,acCostCentre\n    ,acDiscountBand\n    ,acOrderConsolidationMode\n    ,acDefSettleDays\n    ,acSpare5\n    ,acBalance\n    ,acDepartment\n    ,acECMember\n    ,acNLineCount\n    ,acStatement\n    ,acSalesGL\n    ,acLocation\n    ,acAccStatus\n    ,acPayType\n    ,acOldBankSort\n    ,acOldBankAcc\n    ,acBankRef\n    ,acAvePay\n    ,acPhone2\n    ,acCOSGL\n    ,acDrCrGL\n    ,acLastUsed\n    ,acUserDef1\n    ,acUserDef2\n    ,acInvoiceTo\n    ,acSOPAutoWOff\n    ,acFormSet\n    ,acBookOrdVal\n    ,acDirDebMode\n    ,acCCStart\n    ,acCCEnd\n    ,acCCName\n    ,acCCNumber\n    ,acCCSwitch\n    ,acDefSettleDisc\n    ,acStateDeliveryMode\n    ,acSpare2\n    ,acSendReader\n    ,acEBusPword\n    ,acPostCode\n    ,acAltCode\n    ,acUseForEbus\n    ,acZIPAttachments\n    ,acUserDef3\n    ,acUserDef4\n    ,acWebLiveCatalog\n    ,acWebPrevCatalog\n    ,acTimeStamp\n    ,acVATCountryCode\n    ,acSSDDeliveryTerms\n    ,acInclusiveVATCode\n    ,acSSDModeOfTransport\n    ,acPrivateRec\n    ,acLastOperator\n    ,acDocDeliveryMode\n    ,acSendHTML\n    ,acEmailAddr\n    ,acOfficeType\n    ,acDefTagNo\n    ,acUserDef5\n    ,acUserDef6\n    ,acUserDef7\n    ,acUserDef8\n    ,acUserDef9\n    ,acUserDef10\n    ,acBankSortCode\n    ,acBankAccountCode\n    ,acMandateID\n    ,acMandateDate\n    ,acDeliveryPostCode\n    ,acSubType\n    ,acLongAcCode\n    ,acAllowOrderPayments\n    ,acOrderPaymentsGLCode\n    ,acCountry\n    ,acDeliveryCountry\n    ,acPPDMode\n    ,acDefaultToQR\n    ,acTaxRegion\n    ,acAnonymisationStatus\n    ,acAnonymisedDate\n    ,acAnonymisedTime\n    ,acRCEndUser\n    ,PositionId\nFROM \n    dbo.ExchequerVendors\nWHERE\n    CompanyCode IN (@{variables('CompanyCodeList')})",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": "@concat('Exchequer Vendors - ', utcNow('yyyy-MM-dd'), '.csv')"
								}
							}
						]
					},
					{
						"name": "Clear YardiStage Vendor Table",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "List ID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AH2_YardiStage",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].[ExchequerVendors]"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Company List",
						"description": "Sets an array to contain the list of companies required for exporting",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ExchequerCompanyList",
							"value": [
								"'XFR121'",
								"'WTRB06'",
								"'XYWT13'",
								"'XMR122'"
							]
						}
					},
					{
						"name": "List ID",
						"description": "Converts the company IDs in the array to a list variable to be used in the SQL Query Source in Export Vendors",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Company List",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "CompanyCodeList",
							"value": {
								"value": "@join(variables('ExchequerCompanyList'), ',')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Export All Vendors",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Export Vendors",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT \n    CompanyCode\n    ,LatestDate\n    ,acCode\n    ,acCustSupp\n    ,acCompany\n    ,acArea\n    ,acAccType\n    ,acStatementTo\n    ,acVATRegNo\n    ,acAddressLine1\n    ,acAddressLine2\n    ,acAddressLine3\n    ,acAddressLine4\n    ,acAddressLine5\n    ,acDespAddr\n    ,acDespAddressLine1\n    ,acDespAddressLine2\n    ,acDespAddressLine3\n    ,acDespAddressLine4\n    ,acDespAddressLine5\n    ,acContact\n    ,acPhone\n    ,acFax\n    ,acTheirAcc\n    ,acOwnTradTerm\n    ,acTradeTerms1\n    ,acTradeTerms2\n    ,acCurrency\n    ,acVATCode\n    ,acPayTerms\n    ,acCreditLimit\n    ,acDiscount\n    ,acCreditStatus\n    ,acCostCentre\n    ,acDiscountBand\n    ,acOrderConsolidationMode\n    ,acDefSettleDays\n    ,acSpare5\n    ,acBalance\n    ,acDepartment\n    ,acECMember\n    ,acNLineCount\n    ,acStatement\n    ,acSalesGL\n    ,acLocation\n    ,acAccStatus\n    ,acPayType\n    ,acOldBankSort\n    ,acOldBankAcc\n    ,acBankRef\n    ,acAvePay\n    ,acPhone2\n    ,acCOSGL\n    ,acDrCrGL\n    ,acLastUsed\n    ,acUserDef1\n    ,acUserDef2\n    ,acInvoiceTo\n    ,acSOPAutoWOff\n    ,acFormSet\n    ,acBookOrdVal\n    ,acDirDebMode\n    ,acCCStart\n    ,acCCEnd\n    ,acCCName\n    ,acCCNumber\n    ,acCCSwitch\n    ,acDefSettleDisc\n    ,acStateDeliveryMode\n    ,acSpare2\n    ,acSendReader\n    ,acEBusPword\n    ,acPostCode\n    ,acAltCode\n    ,acUseForEbus\n    ,acZIPAttachments\n    ,acUserDef3\n    ,acUserDef4\n    ,acWebLiveCatalog\n    ,acWebPrevCatalog\n    ,acTimeStamp\n    ,acVATCountryCode\n    ,acSSDDeliveryTerms\n    ,acInclusiveVATCode\n    ,acSSDModeOfTransport\n    ,acPrivateRec\n    ,acLastOperator\n    ,acDocDeliveryMode\n    ,acSendHTML\n    ,acEmailAddr\n    ,acOfficeType\n    ,acDefTagNo\n    ,acUserDef5\n    ,acUserDef6\n    ,acUserDef7\n    ,acUserDef8\n    ,acUserDef9\n    ,acUserDef10\n    ,acBankSortCode\n    ,acBankAccountCode\n    ,acMandateID\n    ,acMandateDate\n    ,acDeliveryPostCode\n    ,acSubType\n    ,acLongAcCode\n    ,acAllowOrderPayments\n    ,acOrderPaymentsGLCode\n    ,acCountry\n    ,acDeliveryCountry\n    ,acPPDMode\n    ,acDefaultToQR\n    ,acTaxRegion\n    ,acAnonymisationStatus\n    ,acAnonymisedDate\n    ,acAnonymisedTime\n    ,acRCEndUser\n    ,PositionId\nFROM \n    dbo.ExchequerVendors",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('Exchequer All Vendors - ', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Filename": {
						"type": "String"
					},
					"ExchequerCompanyList": {
						"type": "Array"
					},
					"CompanyCodeList": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Yardi/Exchequer"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/XPL_CH_Bill_Profile_With_Calendar')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Export billing profiles and Calendars used",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT DISTINCT\n\tP.PRO_CODE AS profile_code,\n\tP.PRODESC AS profile_description,\n\tCALENDAR.CAL_REF AS Cal_Ref,\n\tCALENDAR.CAL_CODE AS calendar_code,\n\tCALENDAR.CAL_DESC AS calendar_description\t\nFROM \n\tFUNDSRC_HD AS ACC\n\n\tLEFT JOIN PROFILES AS P\n\t\tON P.PRO_REF = ACC.PRO_REF\n\n\tLEFT JOIN CONTACT_HD AS CONTACT\n\t\tON CONTACT.CONTACT_REF = ACC.CNTA_DET_REF\n\n\tLEFT JOIN CALENDAR_HD AS CALENDAR\n\t\tON CALENDAR.CAL_REF = ACC.CAL_REF\nWHERE\n\tP.FSTYPE = 401",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_IP",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('LA Billing Profile Calendar Usage - ', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Yardi/CHIP"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/XPL_CH_Calendars')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Extract Calendars",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Clear Calendars table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT DISTINCT\n    Site.SiteName\n    ,Site.SiteId\n    ,Calendar_Hd.Cal_Ref\n    ,Calendar_Hd.Cal_code AS calendar_code\n    ,Calendar_Hd.Cal_desc as calendar_description\n    ,DECGrouping.Description AS calendar_grouping\n    ,Calendar_Hd.Invdtoff\n    ,Calendar_Hd.Invdttype\n    ,Calendar_Hd.BldStartDt AS calendar_start_date\n    ,Calendar_Hd.BldEndDt AS calendar_end_date\n    ,Calendar_Hd.BldFreq AS frequency\n    ,Calendar_Hd.BldDays AS no_of_days\n    ,Calendar_Hd.ProcFlag\n    ,Calendar_Hd.SiteFilter\n    ,Calendar_Hd.Sched_Only\n    ,Calendar_Hd.AutoProc\n    ,Calendar_Hd.ProcOffset\n    ,Calendar_Hd.AutoProcWarn\n    ,Calendar_Hd.InvOffset\n    ,Calendar_Hd.AutoInvWarn\n    ,Calendar_Dt.StartDate AS period_start_date\n    ,Calendar_Dt.EndDate AS period_end_date\n    ,Calendar_Dt.BillDate AS period_bill_date\n    ,Calendar_Dt.SSProcessDate\n    ,Calendar_Dt.SSInvoiceDate\nFROM \n\tCalendar_Hd (NOLOCK)\n    \n\tJOIN ChSysDec AS DECGrouping (NOLOCK)\n        ON DECGrouping.Decode_Ref = Calendar_Hd.Grouping\n    \n\tJOIN Calendar_Dt (NOLOCK)\n        ON Calendar_Dt.Cal_Ref = Calendar_Hd.Cal_Ref\n    \n\tJOIN Site (NOLOCK)\n        ON Site.Site_Ref IN (\n                                SELECT Site_Ref\n                                FROM Site_Join (NOLOCK)\n                                WHERE Site_Join.LinkKey = Calendar_Hd.Cal_Ref\n                                      AND upper(Site_Join.LinkTable) = 'CALENDAR_HD'\n                            )\n           OR Calendar_Hd.SiteFilter = 0\nWHERE \n\tCalendar_Hd.Cal_Code\n    BETWEEN '      ' AND 'ZZZZZZ'\n    AND Calendar_Dt.StartDate\n    BETWEEN '17530101' AND '20991212'\n    AND Calendar_Dt.EndDate\n    BETWEEN '17530101' AND '20991212'\n    AND (\n            Calendar_Dt.BillDate\n    BETWEEN '17530101' AND '20991212'\n            OR Calendar_Dt.BillDate IS NULL\n        )\n    AND Site.SITEID IN (\n\t071,\n\t072,\n\t073,\n\t074,\n\t075,\n\t078,\n\t079,\n\t086,\n\t089,\n\t088,\n\t091,\n\t092,\n\t090,\n\t095,\n\t096,\n\t097,\n\t098,\n\t099,\n\t100,\n\t101,\n\t102,\n\t103,\n\t104,\n\t105,\n\t106,\n\t107,\n\t108,\n\t109,\n\t110,\n\t111,\n\t112,\n\t113,\n\t114,\n\t115,\n\t116,\n\t117,\n\t118,\n\t119,\n\t120,\n\t121,\n\t122,\n\t123,\n\t127,\n\t128\n\t)\nORDER BY \n\tCalendar_Hd.Cal_code",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_IP",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "dbo",
									"Table": "Calendars"
								}
							}
						]
					},
					{
						"name": "Export to CSV file",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Extract Calendars",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \n    H.HOME_REF\n    ,SiteName\n    --,Cal.SiteId\n    ,Cal_Ref\n    ,calendar_code\n    ,calendar_description\n    ,calendar_grouping\n    --,Invdtoff\n    --,Invdttype\n    ,calendar_start_date\n    ,calendar_end_date\n    ,frequency\n    ,no_of_days\n    ,ProcFlag\n    ,SiteFilter\n    ,Sched_Only\n    --,AutoProc\n    --,ProcOffset\n    --,AutoProcWarn\n    --,InvOffset\n    --,AutoInvWarn\n    ,period_start_date\n    ,period_end_date\n    ,period_bill_date\n    ,SSProcessDate\n    ,SSInvoiceDate\nFROM \n    dbo.Calendars AS Cal\n\n    LEFT JOIN dbo.ColdHarbourHomeID AS H\n        ON H.SITEID = Cal.SiteID\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('Calendars - ', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Clear Calendars table",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AH2_YardiStage",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE dbo.Calendars"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Yardi/CHIP"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/XPL_Yardi_CH_IP_LedgerDetails')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Export Ledger and comments",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set SITE_REF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "SELECT\t \n\t'@{variables('Home_Ref')}' AS HOME_REF,\n\tSite.SiteId AS siteid,\n\tSite.SiteName as sitename, \n\tRESIDENT.RES_CODE as resident_no,\n\tInvPosting.account_No, \n\tInvPosting.Cre_DateT AS created_date, \n\tInvPosting.Inv_Date AS transaction_date,\n\tCASE \n\t\tWHEN InvPosting.Tran_Type = 'U' THEN 'Receipt'\n\t\tWHEN InvPosting.Tran_Type = 'I' THEN 'Invoice'\n\t\tWHEN InvPosting.Tran_Type = 'C' THEN 'Credit'\n\t\tWHEN InvPosting.Tran_Type = 'J' THEN 'Adjustment'\n\t\tELSE ''\n\tEND AS transaction_type,\n\tInvPosting.Ref1 AS transaction_ref1, \n\tInvPosting.Ref2 AS transaction_ref2, \n\tInvPosting.Value AS transaction_value, \n\tInvPosting.Balance AS transaction_balance, \n\tMemo,\n\tUSERCOMM AS UserComment\nFROM\t\t \n\tInvPosting (NOLOCK) \n\t\n\tJOIN Site (NOLOCK) \n\t\tON Site.Site_Ref = InvPosting.Site_Ref\n\n\tLEFT JOIN RESIDENT (NOLOCK)\n\t\tON RESIDENT.RES_REF = INVPOSTING.RES_REF\nWHERE\t\n\tInvPosting.Site_Ref  = '@{variables('SITE_REF')}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_OnPrem_CH_IP",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Yardi_CSV",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat(variables('Home_Ref'), ' - Full Ledger Comments - ', utcNow('yyyy-MM-dd'), '.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Lookup Home",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT HOME_REF, HomeName, SITE_REF FROM ColdHarbourHomeID WHERE HOME_REF = '@{variables('Home_Ref')}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AH2_YardiStage",
								"type": "DatasetReference",
								"parameters": {
									"Schema": "n/a",
									"Table": "n/a"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Set SITE_REF",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup Home",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "SITE_REF",
							"value": {
								"value": "@activity('Lookup Home').output.firstRow.SITE_REF",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Home_Ref": {
						"type": "String"
					},
					"SITE_REF": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "Yardi/CHIP"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/X_PL_YourHippo_WebHook')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Runs the child pipelines that move and process files generated by the webhook/azure function",
				"activities": [
					{
						"name": "Move Files",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "X_PL_YourHippo_Move_WebHook_files",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Process Users",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Move Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "X_PL_YourHippo_Process_WebHook_User_Files",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Process Results",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Process Users",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "X_PL_YourHippo_Process_WebHook_Result_files",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "YourHippo"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AveryblobFileShare')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AveryblobFileShare",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "AveryPrivateNetwork/AveryblobStorageAccount"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureFileStorageLocation"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Averyblob_Fusion')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Files stored in averyblob fusion container. Connected through the Avery virtual network using the private endpoing",
				"linkedServiceName": {
					"referenceName": "AveryblobStorageAccount",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "AveryPrivateNetwork/AveryblobStorageAccount"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "fusion"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Averyblob_Fusion_Archive')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Files stored in averyblob fusion container. Connected through the Avery virtual network using the private endpoing",
				"linkedServiceName": {
					"referenceName": "AveryblobStorageAccount",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "AveryPrivateNetwork/AveryblobStorageAccount"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@concat('archive/', formatDateTime(utcNow(), 'yyyy'), '/', formatDateTime(utcNow(), 'MM'), '/', formatDateTime(utcNow(), 'dd'), '/')\n",
							"type": "Expression"
						},
						"container": "fusion"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCH_EveryDay_1am')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_Radar_SQLTables",
							"type": "PipelineReference"
						},
						"parameters": {
							"DBItems": "[parameters('SCH_EveryDay_1am_properties_PL_Radar_SQLTables_parameters_DBItems')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2025-09-04T14:29:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								1
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SCH_Weekly_Mon_6AM')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Once a week, Monday at 6am",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_ColdHarbour_Rooms",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2024-09-06T10:38:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								6
							],
							"weekDays": [
								"Monday"
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sch_EveryDay_10-45pm')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_YourHippo_Move_WebHook_Files_Step2",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2025-04-04T09:20:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								45
							],
							"hours": [
								22
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sch_EveryDay_10pm')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_YourHippo_Move_WebHook_Files_Step1",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2025-04-04T09:19:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								22
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sch_EveryDay_11pm')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_YourHippo_Process_Merged_Files",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2025-04-04T09:22:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								23
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sch_EveryDay_AfterMidnight')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Runs everyday just after midnight (00:05)",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_Hydra_Output_File",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-12-17T15:55:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								10
							],
							"hours": [
								0
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sch_EveryDay_Once_10-15pm')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Scheduled to trigger once at 10:15pm, Everyday",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_AEMS_BackupToAveryTables",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Week",
						"interval": 1,
						"startTime": "2024-05-30T11:15:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								15
							],
							"hours": [
								22
							],
							"weekDays": [
								"Sunday",
								"Monday",
								"Tuesday",
								"Wednesday",
								"Thursday",
								"Friday",
								"Saturday"
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sch_Monthly_Once_1st_4am')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Once a Month on the 1st",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_CQC_Required_Files",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "PL_CH_Snapshot",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 1,
						"startTime": "2024-10-25T09:23:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								4
							],
							"monthDays": [
								1
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CH_TransactionData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Runs the pipelines to copy across posted transactions and Allocations",
				"activities": [
					{
						"name": "Posted Transactions",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_CH_PostedTransactions",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Allocations",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Posted Transactions",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_CH_Allocation",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Direct Debits",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Allocations",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_CH_DirectDebitData",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Cold Harbour"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Fusion_Move_Files_To_VM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Moves files loaded to the Fusion Container in the averyblob storage account, to the averyblobfileshare. So they can be copied off the file share to a location on the VM",
				"activities": [
					{
						"name": "Copy container files to Fileshare",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFileName": "*.zip",
									"deleteFilesAfterCompletion": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureFileStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Averyblob_Fusion",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AveryblobFileShare",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Archive files",
						"description": "Moves the files to archive folder in the container",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy container files to Fileshare",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": false,
									"wildcardFileName": "*.zip",
									"deleteFilesAfterCompletion": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Averyblob_Fusion",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Averyblob_Fusion_Archive",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Fusion"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Averyblob_Fusion')]",
				"[concat(variables('factoryId'), '/datasets/AveryblobFileShare')]",
				"[concat(variables('factoryId'), '/datasets/Averyblob_Fusion_Archive')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_GRG_Refresh_TRANSFORM')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Refresh Residents",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_GRG_RESIDENT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Refresh Rooms",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Populate Daily Occupancy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_GRG_ROOMS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Refresh Movement",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Refresh Rooms",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_GRG_ADMIN_DISCHARGE",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Populate Daily Occupancy",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Refresh Accounts",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_GRG_DailyOccupancySnapshot",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Refresh Diary Entries",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Refresh Residents",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_GRG_CHIP_Resident_Diary",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Refresh Accounts",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Refresh Diary Entries",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_GRG_ACCOUNT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "GRG"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_Softworks')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Employees",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SoftWorks_API_Employee",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Clockings",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Employees",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_SoftWorks_API_Clockings",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Load data to TRANSFORM_DB",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Clockings",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_Softworks_JSON_SQL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Softworks"
				},
				"annotations": [],
				"lastPublishTime": "2024-04-05T14:58:56Z"
			},
			"dependsOn": []
		}
	]
}